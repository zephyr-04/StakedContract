{
	"id": "a3c8387280775cbd8ba1651a655bcf70",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.22",
	"solcLongVersion": "0.8.22+commit.4fc1097e",
	"input": {
		"language": "Solidity",
		"sources": {
			"assignment4/staked.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.13;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\n\r\ncontract StakingContract {\r\n    using SafeMath for uint256;\r\n\r\n    event Staked(address indexed staker, uint256 indexed amount, uint256 indexed startTime);\r\n    event Withdrawn(address indexed staker, uint256 indexed amount, uint256 indexed endTime);\r\n    event OwnerTransferred(address previousOwner, address newOwner);\r\n\r\n    address public Address;\r\n    address public owner;\r\n\r\n    struct Staker {\r\n        uint256 stakedAmount;\r\n        uint256 startTime;\r\n    }\r\n\r\n    uint256 public stakingDuration;\r\n    mapping(address => Staker) public stakers;\r\n\r\n    constructor(address _Address, uint256 _stakingDuration) {\r\n        owner = msg.sender;\r\n        Address = _Address;\r\n        stakingDuration = _stakingDuration;\r\n    }\r\n\r\n    function stake(uint256 _amount) external {\r\n        require(msg.sender != address(0), \"Address zero detected\");\r\n        require(_amount > 0, \"Can't stake null value\");\r\n        require(IERC20(Address).balanceOf(msg.sender) >= _amount, \"Insufficient funds\");\r\n\r\n        // Ensure the user has not already staked\r\n        require(stakers[msg.sender].stakedAmount == 0, \"Already staked\");\r\n\r\n        IERC20(Address).transferFrom(msg.sender, address(this), _amount);\r\n\r\n        stakers[msg.sender] = Staker({\r\n            stakedAmount: _amount,\r\n            startTime: block.timestamp\r\n        });\r\n\r\n        emit Staked(msg.sender, _amount, block.timestamp);\r\n    }\r\n\r\n    function withdraw() external {\r\n        require(stakers[msg.sender].stakedAmount > 0, \"No staked amount\");\r\n        require(block.timestamp >= stakers[msg.sender].startTime.add(stakingDuration), \"Staking period not over yet\");\r\n\r\n        uint256 stakedAmount = stakers[msg.sender].stakedAmount;\r\n        stakers[msg.sender].stakedAmount = 0;\r\n\r\n        IERC20(Address).transfer(msg.sender, stakedAmount);\r\n\r\n        emit Withdrawn(msg.sender, stakedAmount, block.timestamp);\r\n    }\r\n\r\n    function showContractBalance() external view returns (uint256) {\r\n        return IERC20(Address).balanceOf(address(this));\r\n    }\r\n\r\n    function transferOwnership(address newOwner) external {\r\n        require(msg.sender == owner, \"Give it back to the owner\");\r\n        require(newOwner != address(0), \"Address zero?\");\r\n\r\n        address oldOwner = owner;\r\n\r\n        owner = newOwner;\r\n\r\n        emit OwnerTransferred(oldOwner, newOwner);\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220abc7871e4afd975fd78b6d6fd17f0ad1b1822dfd2050c2b628fbe297232a328064736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220abc7871e4afd975fd78b6d6fd17f0ad1b1822dfd2050c2b628fbe297232a328064736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB 0xC7 DUP8 0x1E 0x4A REVERT SWAP8 PUSH0 0xD7 DUP12 PUSH14 0x6FD17F0AD1B1822DFD2050C2B628 0xFB 0xE2 SWAP8 0x23 0x2A ORIGIN DUP1 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "482:6210:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220abc7871e4afd975fd78b6d6fd17f0ad1b1822dfd2050c2b628fbe297232a328064736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB 0xC7 DUP8 0x1E 0x4A REVERT SWAP8 PUSH0 0xD7 DUP12 PUSH14 0x6FD17F0AD1B1822DFD2050C2B628 0xFB 0xE2 SWAP8 0x23 0x2A ORIGIN DUP1 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "482:6210:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220abc7871e4afd975fd78b6d6fd17f0ad1b1822dfd2050c2b628fbe297232a328064736f6c63430008160033",
									".code": [
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"assignment4/staked.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"assignment4/staked.sol": {
				"StakingContract": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_Address",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_stakingDuration",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnerTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "staker",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "startTime",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "staker",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "endTime",
									"type": "uint256"
								}
							],
							"name": "Withdrawn",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "Address",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "showContractBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "stakers",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "stakedAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "startTime",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingDuration",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"assignment4/staked.sol\":182:2528  contract StakingContract {... */\n  mstore(0x40, 0x80)\n    /* \"assignment4/staked.sol\":744:911  constructor(address _Address, uint256 _stakingDuration) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"assignment4/staked.sol\":819:829  msg.sender */\n  caller\n    /* \"assignment4/staked.sol\":811:816  owner */\n  0x01\n  0x00\n    /* \"assignment4/staked.sol\":811:829  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"assignment4/staked.sol\":850:858  _Address */\n  dup2\n    /* \"assignment4/staked.sol\":840:847  Address */\n  0x00\n  dup1\n    /* \"assignment4/staked.sol\":840:858  Address = _Address */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"assignment4/staked.sol\":887:903  _stakingDuration */\n  dup1\n    /* \"assignment4/staked.sol\":869:884  stakingDuration */\n  0x02\n    /* \"assignment4/staked.sol\":869:903  stakingDuration = _stakingDuration */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"assignment4/staked.sol\":744:911  constructor(address _Address, uint256 _stakingDuration) {... */\n  pop\n  pop\n    /* \"assignment4/staked.sol\":182:2528  contract StakingContract {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_23\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_25\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_26\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_26:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_28\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:922   */\ntag_14:\n    /* \"#utility.yul\":882:889   */\n  0x00\n    /* \"#utility.yul\":911:916   */\n  dup2\n    /* \"#utility.yul\":900:916   */\n  swap1\n  pop\n    /* \"#utility.yul\":845:922   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":928:1050   */\ntag_15:\n    /* \"#utility.yul\":1001:1025   */\n  tag_31\n    /* \"#utility.yul\":1019:1024   */\n  dup2\n    /* \"#utility.yul\":1001:1025   */\n  tag_14\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":994:999   */\n  dup2\n    /* \"#utility.yul\":991:1026   */\n  eq\n    /* \"#utility.yul\":981:1044   */\n  tag_32\n  jumpi\n    /* \"#utility.yul\":1040:1041   */\n  0x00\n    /* \"#utility.yul\":1037:1038   */\n  dup1\n    /* \"#utility.yul\":1030:1042   */\n  revert\n    /* \"#utility.yul\":981:1044   */\ntag_32:\n    /* \"#utility.yul\":928:1050   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1199   */\ntag_16:\n    /* \"#utility.yul\":1113:1118   */\n  0x00\n    /* \"#utility.yul\":1144:1150   */\n  dup2\n    /* \"#utility.yul\":1138:1151   */\n  mload\n    /* \"#utility.yul\":1129:1151   */\n  swap1\n  pop\n    /* \"#utility.yul\":1160:1193   */\n  tag_34\n    /* \"#utility.yul\":1187:1192   */\n  dup2\n    /* \"#utility.yul\":1160:1193   */\n  tag_15\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":1056:1199   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1205:1712   */\ntag_3:\n    /* \"#utility.yul\":1284:1290   */\n  0x00\n    /* \"#utility.yul\":1292:1298   */\n  dup1\n    /* \"#utility.yul\":1341:1343   */\n  0x40\n    /* \"#utility.yul\":1329:1338   */\n  dup4\n    /* \"#utility.yul\":1320:1327   */\n  dup6\n    /* \"#utility.yul\":1316:1339   */\n  sub\n    /* \"#utility.yul\":1312:1344   */\n  slt\n    /* \"#utility.yul\":1309:1428   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1347:1426   */\n  tag_37\n  tag_8\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":1309:1428   */\ntag_36:\n    /* \"#utility.yul\":1467:1468   */\n  0x00\n    /* \"#utility.yul\":1492:1556   */\n  tag_38\n    /* \"#utility.yul\":1548:1555   */\n  dup6\n    /* \"#utility.yul\":1539:1545   */\n  dup3\n    /* \"#utility.yul\":1528:1537   */\n  dup7\n    /* \"#utility.yul\":1524:1546   */\n  add\n    /* \"#utility.yul\":1492:1556   */\n  tag_13\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1482:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1438:1566   */\n  pop\n    /* \"#utility.yul\":1605:1607   */\n  0x20\n    /* \"#utility.yul\":1631:1695   */\n  tag_39\n    /* \"#utility.yul\":1687:1694   */\n  dup6\n    /* \"#utility.yul\":1678:1684   */\n  dup3\n    /* \"#utility.yul\":1667:1676   */\n  dup7\n    /* \"#utility.yul\":1663:1685   */\n  add\n    /* \"#utility.yul\":1631:1695   */\n  tag_16\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1621:1695   */\n  swap2\n  pop\n    /* \"#utility.yul\":1576:1705   */\n  pop\n    /* \"#utility.yul\":1205:1712   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"assignment4/staked.sol\":182:2528  contract StakingContract {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"assignment4/staked.sol\":182:2528  contract StakingContract {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x901c947f\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x901c947f\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x9168ae72\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xa694fc3a\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_11:\n      dup1\n      0x3aeaccf5\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3ccfd60b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8005a7de\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"assignment4/staked.sol\":510:532  address public Address */\n    tag_3:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"assignment4/staked.sol\":1590:2071  function withdraw() external {... */\n    tag_4:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      stop\n        /* \"assignment4/staked.sol\":657:687  uint256 public stakingDuration */\n    tag_5:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"assignment4/staked.sol\":539:559  address public owner */\n    tag_6:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"assignment4/staked.sol\":2079:2208  function showContractBalance() external view returns (uint256) {... */\n    tag_7:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"assignment4/staked.sol\":694:735  mapping(address => Staker) public stakers */\n    tag_8:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_32\n      swap3\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"assignment4/staked.sol\":919:1582  function stake(uint256 _amount) external {... */\n    tag_9:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      stop\n        /* \"assignment4/staked.sol\":2216:2525  function transferOwnership(address newOwner) external {... */\n    tag_10:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n    tag_38:\n      stop\n        /* \"assignment4/staked.sol\":510:532  address public Address */\n    tag_13:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"assignment4/staked.sol\":1590:2071  function withdraw() external {... */\n    tag_17:\n        /* \"assignment4/staked.sol\":1673:1674  0 */\n      0x00\n        /* \"assignment4/staked.sol\":1638:1645  stakers */\n      0x03\n        /* \"assignment4/staked.sol\":1638:1657  stakers[msg.sender] */\n      0x00\n        /* \"assignment4/staked.sol\":1646:1656  msg.sender */\n      caller\n        /* \"assignment4/staked.sol\":1638:1657  stakers[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"assignment4/staked.sol\":1638:1670  stakers[msg.sender].stakedAmount */\n      0x00\n      add\n      sload\n        /* \"assignment4/staked.sol\":1638:1674  stakers[msg.sender].stakedAmount > 0 */\n      gt\n        /* \"assignment4/staked.sol\":1630:1695  require(stakers[msg.sender].stakedAmount > 0, \"No staked amount\") */\n      tag_42\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_43\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_42:\n        /* \"assignment4/staked.sol\":1733:1783  stakers[msg.sender].startTime.add(stakingDuration) */\n      tag_45\n        /* \"assignment4/staked.sol\":1767:1782  stakingDuration */\n      sload(0x02)\n        /* \"assignment4/staked.sol\":1733:1740  stakers */\n      0x03\n        /* \"assignment4/staked.sol\":1733:1752  stakers[msg.sender] */\n      0x00\n        /* \"assignment4/staked.sol\":1741:1751  msg.sender */\n      caller\n        /* \"assignment4/staked.sol\":1733:1752  stakers[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"assignment4/staked.sol\":1733:1762  stakers[msg.sender].startTime */\n      0x01\n      add\n      sload\n        /* \"assignment4/staked.sol\":1733:1766  stakers[msg.sender].startTime.add */\n      tag_46\n      swap1\n        /* \"assignment4/staked.sol\":1733:1783  stakers[msg.sender].startTime.add(stakingDuration) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_45:\n        /* \"assignment4/staked.sol\":1714:1729  block.timestamp */\n      timestamp\n        /* \"assignment4/staked.sol\":1714:1783  block.timestamp >= stakers[msg.sender].startTime.add(stakingDuration) */\n      lt\n      iszero\n        /* \"assignment4/staked.sol\":1706:1815  require(block.timestamp >= stakers[msg.sender].startTime.add(stakingDuration), \"Staking period not over yet\") */\n      tag_47\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_48\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_47:\n        /* \"assignment4/staked.sol\":1828:1848  uint256 stakedAmount */\n      0x00\n        /* \"assignment4/staked.sol\":1851:1858  stakers */\n      0x03\n        /* \"assignment4/staked.sol\":1851:1870  stakers[msg.sender] */\n      0x00\n        /* \"assignment4/staked.sol\":1859:1869  msg.sender */\n      caller\n        /* \"assignment4/staked.sol\":1851:1870  stakers[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"assignment4/staked.sol\":1851:1883  stakers[msg.sender].stakedAmount */\n      0x00\n      add\n      sload\n        /* \"assignment4/staked.sol\":1828:1883  uint256 stakedAmount = stakers[msg.sender].stakedAmount */\n      swap1\n      pop\n        /* \"assignment4/staked.sol\":1929:1930  0 */\n      0x00\n        /* \"assignment4/staked.sol\":1894:1901  stakers */\n      0x03\n        /* \"assignment4/staked.sol\":1894:1913  stakers[msg.sender] */\n      0x00\n        /* \"assignment4/staked.sol\":1902:1912  msg.sender */\n      caller\n        /* \"assignment4/staked.sol\":1894:1913  stakers[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"assignment4/staked.sol\":1894:1926  stakers[msg.sender].stakedAmount */\n      0x00\n      add\n        /* \"assignment4/staked.sol\":1894:1930  stakers[msg.sender].stakedAmount = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"assignment4/staked.sol\":1950:1957  Address */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"assignment4/staked.sol\":1943:1967  IERC20(Address).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"assignment4/staked.sol\":1968:1978  msg.sender */\n      caller\n        /* \"assignment4/staked.sol\":1980:1992  stakedAmount */\n      dup4\n        /* \"assignment4/staked.sol\":1943:1993  IERC20(Address).transfer(msg.sender, stakedAmount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_50\n      swap3\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_53\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_53:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      pop\n        /* \"assignment4/staked.sol\":2047:2062  block.timestamp */\n      timestamp\n        /* \"assignment4/staked.sol\":2033:2045  stakedAmount */\n      dup2\n        /* \"assignment4/staked.sol\":2021:2031  msg.sender */\n      caller\n        /* \"assignment4/staked.sol\":2011:2063  Withdrawn(msg.sender, stakedAmount, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x92ccf450a286a957af52509bc1c9939d1a6a481783e142e41e2499f0bb66ebc6\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"assignment4/staked.sol\":1619:2071  {... */\n      pop\n        /* \"assignment4/staked.sol\":1590:2071  function withdraw() external {... */\n      jump\t// out\n        /* \"assignment4/staked.sol\":657:687  uint256 public stakingDuration */\n    tag_19:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"assignment4/staked.sol\":539:559  address public owner */\n    tag_23:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"assignment4/staked.sol\":2079:2208  function showContractBalance() external view returns (uint256) {... */\n    tag_26:\n        /* \"assignment4/staked.sol\":2133:2140  uint256 */\n      0x00\n        /* \"assignment4/staked.sol\":2167:2174  Address */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"assignment4/staked.sol\":2160:2185  IERC20(Address).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"assignment4/staked.sol\":2194:2198  this */\n      address\n        /* \"assignment4/staked.sol\":2160:2200  IERC20(Address).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_57\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_57:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_59\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_59:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n        /* \"assignment4/staked.sol\":2153:2200  return IERC20(Address).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"assignment4/staked.sol\":2079:2208  function showContractBalance() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"assignment4/staked.sol\":694:735  mapping(address => Staker) public stakers */\n    tag_31:\n      mstore(0x20, 0x03)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"assignment4/staked.sol\":919:1582  function stake(uint256 _amount) external {... */\n    tag_37:\n        /* \"assignment4/staked.sol\":1001:1002  0 */\n      0x00\n        /* \"assignment4/staked.sol\":979:1003  msg.sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"assignment4/staked.sol\":979:989  msg.sender */\n      caller\n        /* \"assignment4/staked.sol\":979:1003  msg.sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"assignment4/staked.sol\":971:1029  require(msg.sender != address(0), \"Address zero detected\") */\n      tag_63\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_63:\n        /* \"assignment4/staked.sol\":1058:1059  0 */\n      0x00\n        /* \"assignment4/staked.sol\":1048:1055  _amount */\n      dup2\n        /* \"assignment4/staked.sol\":1048:1059  _amount > 0 */\n      gt\n        /* \"assignment4/staked.sol\":1040:1086  require(_amount > 0, \"Can't stake null value\") */\n      tag_66\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_67\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_66:\n        /* \"assignment4/staked.sol\":1146:1153  _amount */\n      dup1\n        /* \"assignment4/staked.sol\":1112:1119  Address */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"assignment4/staked.sol\":1105:1130  IERC20(Address).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"assignment4/staked.sol\":1131:1141  msg.sender */\n      caller\n        /* \"assignment4/staked.sol\":1105:1142  IERC20(Address).balanceOf(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_69\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_69:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_71\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_71:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_72:\n        /* \"assignment4/staked.sol\":1105:1153  IERC20(Address).balanceOf(msg.sender) >= _amount */\n      lt\n      iszero\n        /* \"assignment4/staked.sol\":1097:1176  require(IERC20(Address).balanceOf(msg.sender) >= _amount, \"Insufficient funds\") */\n      tag_73\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_74\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_73:\n        /* \"assignment4/staked.sol\":1284:1285  0 */\n      0x00\n        /* \"assignment4/staked.sol\":1248:1255  stakers */\n      0x03\n        /* \"assignment4/staked.sol\":1248:1267  stakers[msg.sender] */\n      0x00\n        /* \"assignment4/staked.sol\":1256:1266  msg.sender */\n      caller\n        /* \"assignment4/staked.sol\":1248:1267  stakers[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"assignment4/staked.sol\":1248:1280  stakers[msg.sender].stakedAmount */\n      0x00\n      add\n      sload\n        /* \"assignment4/staked.sol\":1248:1285  stakers[msg.sender].stakedAmount == 0 */\n      eq\n        /* \"assignment4/staked.sol\":1240:1304  require(stakers[msg.sender].stakedAmount == 0, \"Already staked\") */\n      tag_76\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_77\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_76:\n        /* \"assignment4/staked.sol\":1324:1331  Address */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"assignment4/staked.sol\":1317:1345  IERC20(Address).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"assignment4/staked.sol\":1346:1356  msg.sender */\n      caller\n        /* \"assignment4/staked.sol\":1366:1370  this */\n      address\n        /* \"assignment4/staked.sol\":1373:1380  _amount */\n      dup5\n        /* \"assignment4/staked.sol\":1317:1381  IERC20(Address).transferFrom(msg.sender, address(this), _amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_79\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_82\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_82:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_83:\n      pop\n        /* \"assignment4/staked.sol\":1416:1512  Staker({... */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"assignment4/staked.sol\":1452:1459  _amount */\n      dup3\n        /* \"assignment4/staked.sol\":1416:1512  Staker({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"assignment4/staked.sol\":1485:1500  block.timestamp */\n      timestamp\n        /* \"assignment4/staked.sol\":1416:1512  Staker({... */\n      dup2\n      mstore\n      pop\n        /* \"assignment4/staked.sol\":1394:1401  stakers */\n      0x03\n        /* \"assignment4/staked.sol\":1394:1413  stakers[msg.sender] */\n      0x00\n        /* \"assignment4/staked.sol\":1402:1412  msg.sender */\n      caller\n        /* \"assignment4/staked.sol\":1394:1413  stakers[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"assignment4/staked.sol\":1394:1512  stakers[msg.sender] = Staker({... */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"assignment4/staked.sol\":1558:1573  block.timestamp */\n      timestamp\n        /* \"assignment4/staked.sol\":1549:1556  _amount */\n      dup2\n        /* \"assignment4/staked.sol\":1537:1547  msg.sender */\n      caller\n        /* \"assignment4/staked.sol\":1530:1574  Staked(msg.sender, _amount, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1449c6dd7851abc30abf37f57715f492010519147cc2652fbc38202c18a6ee90\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"assignment4/staked.sol\":919:1582  function stake(uint256 _amount) external {... */\n      pop\n      jump\t// out\n        /* \"assignment4/staked.sol\":2216:2525  function transferOwnership(address newOwner) external {... */\n    tag_40:\n        /* \"assignment4/staked.sol\":2303:2308  owner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"assignment4/staked.sol\":2289:2308  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"assignment4/staked.sol\":2289:2299  msg.sender */\n      caller\n        /* \"assignment4/staked.sol\":2289:2308  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"assignment4/staked.sol\":2281:2338  require(msg.sender == owner, \"Give it back to the owner\") */\n      tag_85\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_86\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_85:\n        /* \"assignment4/staked.sol\":2377:2378  0 */\n      0x00\n        /* \"assignment4/staked.sol\":2357:2379  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"assignment4/staked.sol\":2357:2365  newOwner */\n      dup2\n        /* \"assignment4/staked.sol\":2357:2379  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"assignment4/staked.sol\":2349:2397  require(newOwner != address(0), \"Address zero?\") */\n      tag_88\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_89\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_88:\n        /* \"assignment4/staked.sol\":2410:2426  address oldOwner */\n      0x00\n        /* \"assignment4/staked.sol\":2429:2434  owner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"assignment4/staked.sol\":2410:2434  address oldOwner = owner */\n      swap1\n      pop\n        /* \"assignment4/staked.sol\":2455:2463  newOwner */\n      dup2\n        /* \"assignment4/staked.sol\":2447:2452  owner */\n      0x01\n      0x00\n        /* \"assignment4/staked.sol\":2447:2463  owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"assignment4/staked.sol\":2481:2517  OwnerTransferred(oldOwner, newOwner) */\n      0x8934ce4adea8d9ce0d714d2c22b86790e41b7731c84b926fbbdc1d40ff6533c9\n        /* \"assignment4/staked.sol\":2498:2506  oldOwner */\n      dup2\n        /* \"assignment4/staked.sol\":2508:2516  newOwner */\n      dup4\n        /* \"assignment4/staked.sol\":2481:2517  OwnerTransferred(oldOwner, newOwner) */\n      mload(0x40)\n      tag_91\n      swap3\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"assignment4/staked.sol\":2270:2525  {... */\n      pop\n        /* \"assignment4/staked.sol\":2216:2525  function transferOwnership(address newOwner) external {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_46:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_94\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2832:2844  return a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_96:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_97:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_133\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_96\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_98:\n        /* \"#utility.yul\":328:352   */\n      tag_135\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_97\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_15:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_137\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_98\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":593:670   */\n    tag_99:\n        /* \"#utility.yul\":630:637   */\n      0x00\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":648:664   */\n      swap1\n      pop\n        /* \"#utility.yul\":593:670   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":676:794   */\n    tag_100:\n        /* \"#utility.yul\":763:787   */\n      tag_140\n        /* \"#utility.yul\":781:786   */\n      dup2\n        /* \"#utility.yul\":763:787   */\n      tag_99\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":758:761   */\n      dup3\n        /* \"#utility.yul\":751:788   */\n      mstore\n        /* \"#utility.yul\":676:794   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":800:1022   */\n    tag_21:\n        /* \"#utility.yul\":893:897   */\n      0x00\n        /* \"#utility.yul\":931:933   */\n      0x20\n        /* \"#utility.yul\":920:929   */\n      dup3\n        /* \"#utility.yul\":916:934   */\n      add\n        /* \"#utility.yul\":908:934   */\n      swap1\n      pop\n        /* \"#utility.yul\":944:1015   */\n      tag_142\n        /* \"#utility.yul\":1012:1013   */\n      0x00\n        /* \"#utility.yul\":1001:1010   */\n      dup4\n        /* \"#utility.yul\":997:1014   */\n      add\n        /* \"#utility.yul\":988:994   */\n      dup5\n        /* \"#utility.yul\":944:1015   */\n      tag_100\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":800:1022   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1109:1226   */\n    tag_102:\n        /* \"#utility.yul\":1218:1219   */\n      0x00\n        /* \"#utility.yul\":1215:1216   */\n      dup1\n        /* \"#utility.yul\":1208:1220   */\n      revert\n        /* \"#utility.yul\":1355:1477   */\n    tag_104:\n        /* \"#utility.yul\":1428:1452   */\n      tag_147\n        /* \"#utility.yul\":1446:1451   */\n      dup2\n        /* \"#utility.yul\":1428:1452   */\n      tag_97\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":1421:1426   */\n      dup2\n        /* \"#utility.yul\":1418:1453   */\n      eq\n        /* \"#utility.yul\":1408:1471   */\n      tag_148\n      jumpi\n        /* \"#utility.yul\":1467:1468   */\n      0x00\n        /* \"#utility.yul\":1464:1465   */\n      dup1\n        /* \"#utility.yul\":1457:1469   */\n      revert\n        /* \"#utility.yul\":1408:1471   */\n    tag_148:\n        /* \"#utility.yul\":1355:1477   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1483:1622   */\n    tag_105:\n        /* \"#utility.yul\":1529:1534   */\n      0x00\n        /* \"#utility.yul\":1567:1573   */\n      dup2\n        /* \"#utility.yul\":1554:1574   */\n      calldataload\n        /* \"#utility.yul\":1545:1574   */\n      swap1\n      pop\n        /* \"#utility.yul\":1583:1616   */\n      tag_150\n        /* \"#utility.yul\":1610:1615   */\n      dup2\n        /* \"#utility.yul\":1583:1616   */\n      tag_104\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":1483:1622   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1628:1957   */\n    tag_30:\n        /* \"#utility.yul\":1687:1693   */\n      0x00\n        /* \"#utility.yul\":1736:1738   */\n      0x20\n        /* \"#utility.yul\":1724:1733   */\n      dup3\n        /* \"#utility.yul\":1715:1722   */\n      dup5\n        /* \"#utility.yul\":1711:1734   */\n      sub\n        /* \"#utility.yul\":1707:1739   */\n      slt\n        /* \"#utility.yul\":1704:1823   */\n      iszero\n      tag_152\n      jumpi\n        /* \"#utility.yul\":1742:1821   */\n      tag_153\n      tag_102\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":1704:1823   */\n    tag_152:\n        /* \"#utility.yul\":1862:1863   */\n      0x00\n        /* \"#utility.yul\":1887:1940   */\n      tag_154\n        /* \"#utility.yul\":1932:1939   */\n      dup5\n        /* \"#utility.yul\":1923:1929   */\n      dup3\n        /* \"#utility.yul\":1912:1921   */\n      dup6\n        /* \"#utility.yul\":1908:1930   */\n      add\n        /* \"#utility.yul\":1887:1940   */\n      tag_105\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":1877:1940   */\n      swap2\n      pop\n        /* \"#utility.yul\":1833:1950   */\n      pop\n        /* \"#utility.yul\":1628:1957   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1963:2295   */\n    tag_33:\n        /* \"#utility.yul\":2084:2088   */\n      0x00\n        /* \"#utility.yul\":2122:2124   */\n      0x40\n        /* \"#utility.yul\":2111:2120   */\n      dup3\n        /* \"#utility.yul\":2107:2125   */\n      add\n        /* \"#utility.yul\":2099:2125   */\n      swap1\n      pop\n        /* \"#utility.yul\":2135:2206   */\n      tag_156\n        /* \"#utility.yul\":2203:2204   */\n      0x00\n        /* \"#utility.yul\":2192:2201   */\n      dup4\n        /* \"#utility.yul\":2188:2205   */\n      add\n        /* \"#utility.yul\":2179:2185   */\n      dup6\n        /* \"#utility.yul\":2135:2206   */\n      tag_100\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":2216:2288   */\n      tag_157\n        /* \"#utility.yul\":2284:2286   */\n      0x20\n        /* \"#utility.yul\":2273:2282   */\n      dup4\n        /* \"#utility.yul\":2269:2287   */\n      add\n        /* \"#utility.yul\":2260:2266   */\n      dup5\n        /* \"#utility.yul\":2216:2288   */\n      tag_100\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":1963:2295   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2301:2423   */\n    tag_106:\n        /* \"#utility.yul\":2374:2398   */\n      tag_159\n        /* \"#utility.yul\":2392:2397   */\n      dup2\n        /* \"#utility.yul\":2374:2398   */\n      tag_99\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":2367:2372   */\n      dup2\n        /* \"#utility.yul\":2364:2399   */\n      eq\n        /* \"#utility.yul\":2354:2417   */\n      tag_160\n      jumpi\n        /* \"#utility.yul\":2413:2414   */\n      0x00\n        /* \"#utility.yul\":2410:2411   */\n      dup1\n        /* \"#utility.yul\":2403:2415   */\n      revert\n        /* \"#utility.yul\":2354:2417   */\n    tag_160:\n        /* \"#utility.yul\":2301:2423   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2429:2568   */\n    tag_107:\n        /* \"#utility.yul\":2475:2480   */\n      0x00\n        /* \"#utility.yul\":2513:2519   */\n      dup2\n        /* \"#utility.yul\":2500:2520   */\n      calldataload\n        /* \"#utility.yul\":2491:2520   */\n      swap1\n      pop\n        /* \"#utility.yul\":2529:2562   */\n      tag_162\n        /* \"#utility.yul\":2556:2561   */\n      dup2\n        /* \"#utility.yul\":2529:2562   */\n      tag_106\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":2429:2568   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2574:2903   */\n    tag_36:\n        /* \"#utility.yul\":2633:2639   */\n      0x00\n        /* \"#utility.yul\":2682:2684   */\n      0x20\n        /* \"#utility.yul\":2670:2679   */\n      dup3\n        /* \"#utility.yul\":2661:2668   */\n      dup5\n        /* \"#utility.yul\":2657:2680   */\n      sub\n        /* \"#utility.yul\":2653:2685   */\n      slt\n        /* \"#utility.yul\":2650:2769   */\n      iszero\n      tag_164\n      jumpi\n        /* \"#utility.yul\":2688:2767   */\n      tag_165\n      tag_102\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":2650:2769   */\n    tag_164:\n        /* \"#utility.yul\":2808:2809   */\n      0x00\n        /* \"#utility.yul\":2833:2886   */\n      tag_166\n        /* \"#utility.yul\":2878:2885   */\n      dup5\n        /* \"#utility.yul\":2869:2875   */\n      dup3\n        /* \"#utility.yul\":2858:2867   */\n      dup6\n        /* \"#utility.yul\":2854:2876   */\n      add\n        /* \"#utility.yul\":2833:2886   */\n      tag_107\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":2823:2886   */\n      swap2\n      pop\n        /* \"#utility.yul\":2779:2896   */\n      pop\n        /* \"#utility.yul\":2574:2903   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2909:3078   */\n    tag_108:\n        /* \"#utility.yul\":2993:3004   */\n      0x00\n        /* \"#utility.yul\":3027:3033   */\n      dup3\n        /* \"#utility.yul\":3022:3025   */\n      dup3\n        /* \"#utility.yul\":3015:3034   */\n      mstore\n        /* \"#utility.yul\":3067:3071   */\n      0x20\n        /* \"#utility.yul\":3062:3065   */\n      dup3\n        /* \"#utility.yul\":3058:3072   */\n      add\n        /* \"#utility.yul\":3043:3072   */\n      swap1\n      pop\n        /* \"#utility.yul\":2909:3078   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3084:3250   */\n    tag_109:\n        /* \"#utility.yul\":3224:3242   */\n      0x4e6f207374616b656420616d6f756e7400000000000000000000000000000000\n        /* \"#utility.yul\":3220:3221   */\n      0x00\n        /* \"#utility.yul\":3212:3218   */\n      dup3\n        /* \"#utility.yul\":3208:3222   */\n      add\n        /* \"#utility.yul\":3201:3243   */\n      mstore\n        /* \"#utility.yul\":3084:3250   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3256:3622   */\n    tag_110:\n        /* \"#utility.yul\":3398:3401   */\n      0x00\n        /* \"#utility.yul\":3419:3486   */\n      tag_170\n        /* \"#utility.yul\":3483:3485   */\n      0x10\n        /* \"#utility.yul\":3478:3481   */\n      dup4\n        /* \"#utility.yul\":3419:3486   */\n      tag_108\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":3412:3486   */\n      swap2\n      pop\n        /* \"#utility.yul\":3495:3588   */\n      tag_171\n        /* \"#utility.yul\":3584:3587   */\n      dup3\n        /* \"#utility.yul\":3495:3588   */\n      tag_109\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":3613:3615   */\n      0x20\n        /* \"#utility.yul\":3608:3611   */\n      dup3\n        /* \"#utility.yul\":3604:3616   */\n      add\n        /* \"#utility.yul\":3597:3616   */\n      swap1\n      pop\n        /* \"#utility.yul\":3256:3622   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3628:4047   */\n    tag_44:\n        /* \"#utility.yul\":3794:3798   */\n      0x00\n        /* \"#utility.yul\":3832:3834   */\n      0x20\n        /* \"#utility.yul\":3821:3830   */\n      dup3\n        /* \"#utility.yul\":3817:3835   */\n      add\n        /* \"#utility.yul\":3809:3835   */\n      swap1\n      pop\n        /* \"#utility.yul\":3881:3890   */\n      dup2\n        /* \"#utility.yul\":3875:3879   */\n      dup2\n        /* \"#utility.yul\":3871:3891   */\n      sub\n        /* \"#utility.yul\":3867:3868   */\n      0x00\n        /* \"#utility.yul\":3856:3865   */\n      dup4\n        /* \"#utility.yul\":3852:3869   */\n      add\n        /* \"#utility.yul\":3845:3892   */\n      mstore\n        /* \"#utility.yul\":3909:4040   */\n      tag_173\n        /* \"#utility.yul\":4035:4039   */\n      dup2\n        /* \"#utility.yul\":3909:4040   */\n      tag_110\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":3901:4040   */\n      swap1\n      pop\n        /* \"#utility.yul\":3628:4047   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4053:4230   */\n    tag_111:\n        /* \"#utility.yul\":4193:4222   */\n      0x5374616b696e6720706572696f64206e6f74206f766572207965740000000000\n        /* \"#utility.yul\":4189:4190   */\n      0x00\n        /* \"#utility.yul\":4181:4187   */\n      dup3\n        /* \"#utility.yul\":4177:4191   */\n      add\n        /* \"#utility.yul\":4170:4223   */\n      mstore\n        /* \"#utility.yul\":4053:4230   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4236:4602   */\n    tag_112:\n        /* \"#utility.yul\":4378:4381   */\n      0x00\n        /* \"#utility.yul\":4399:4466   */\n      tag_176\n        /* \"#utility.yul\":4463:4465   */\n      0x1b\n        /* \"#utility.yul\":4458:4461   */\n      dup4\n        /* \"#utility.yul\":4399:4466   */\n      tag_108\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":4392:4466   */\n      swap2\n      pop\n        /* \"#utility.yul\":4475:4568   */\n      tag_177\n        /* \"#utility.yul\":4564:4567   */\n      dup3\n        /* \"#utility.yul\":4475:4568   */\n      tag_111\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":4593:4595   */\n      0x20\n        /* \"#utility.yul\":4588:4591   */\n      dup3\n        /* \"#utility.yul\":4584:4596   */\n      add\n        /* \"#utility.yul\":4577:4596   */\n      swap1\n      pop\n        /* \"#utility.yul\":4236:4602   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4608:5027   */\n    tag_49:\n        /* \"#utility.yul\":4774:4778   */\n      0x00\n        /* \"#utility.yul\":4812:4814   */\n      0x20\n        /* \"#utility.yul\":4801:4810   */\n      dup3\n        /* \"#utility.yul\":4797:4815   */\n      add\n        /* \"#utility.yul\":4789:4815   */\n      swap1\n      pop\n        /* \"#utility.yul\":4861:4870   */\n      dup2\n        /* \"#utility.yul\":4855:4859   */\n      dup2\n        /* \"#utility.yul\":4851:4871   */\n      sub\n        /* \"#utility.yul\":4847:4848   */\n      0x00\n        /* \"#utility.yul\":4836:4845   */\n      dup4\n        /* \"#utility.yul\":4832:4849   */\n      add\n        /* \"#utility.yul\":4825:4872   */\n      mstore\n        /* \"#utility.yul\":4889:5020   */\n      tag_179\n        /* \"#utility.yul\":5015:5019   */\n      dup2\n        /* \"#utility.yul\":4889:5020   */\n      tag_112\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":4881:5020   */\n      swap1\n      pop\n        /* \"#utility.yul\":4608:5027   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5033:5365   */\n    tag_51:\n        /* \"#utility.yul\":5154:5158   */\n      0x00\n        /* \"#utility.yul\":5192:5194   */\n      0x40\n        /* \"#utility.yul\":5181:5190   */\n      dup3\n        /* \"#utility.yul\":5177:5195   */\n      add\n        /* \"#utility.yul\":5169:5195   */\n      swap1\n      pop\n        /* \"#utility.yul\":5205:5276   */\n      tag_181\n        /* \"#utility.yul\":5273:5274   */\n      0x00\n        /* \"#utility.yul\":5262:5271   */\n      dup4\n        /* \"#utility.yul\":5258:5275   */\n      add\n        /* \"#utility.yul\":5249:5255   */\n      dup6\n        /* \"#utility.yul\":5205:5276   */\n      tag_98\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":5286:5358   */\n      tag_182\n        /* \"#utility.yul\":5354:5356   */\n      0x20\n        /* \"#utility.yul\":5343:5352   */\n      dup4\n        /* \"#utility.yul\":5339:5357   */\n      add\n        /* \"#utility.yul\":5330:5336   */\n      dup5\n        /* \"#utility.yul\":5286:5358   */\n      tag_100\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":5033:5365   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5371:5461   */\n    tag_113:\n        /* \"#utility.yul\":5405:5412   */\n      0x00\n        /* \"#utility.yul\":5448:5453   */\n      dup2\n        /* \"#utility.yul\":5441:5454   */\n      iszero\n        /* \"#utility.yul\":5434:5455   */\n      iszero\n        /* \"#utility.yul\":5423:5455   */\n      swap1\n      pop\n        /* \"#utility.yul\":5371:5461   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5467:5583   */\n    tag_114:\n        /* \"#utility.yul\":5537:5558   */\n      tag_185\n        /* \"#utility.yul\":5552:5557   */\n      dup2\n        /* \"#utility.yul\":5537:5558   */\n      tag_113\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":5530:5535   */\n      dup2\n        /* \"#utility.yul\":5527:5559   */\n      eq\n        /* \"#utility.yul\":5517:5577   */\n      tag_186\n      jumpi\n        /* \"#utility.yul\":5573:5574   */\n      0x00\n        /* \"#utility.yul\":5570:5571   */\n      dup1\n        /* \"#utility.yul\":5563:5575   */\n      revert\n        /* \"#utility.yul\":5517:5577   */\n    tag_186:\n        /* \"#utility.yul\":5467:5583   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5589:5726   */\n    tag_115:\n        /* \"#utility.yul\":5643:5648   */\n      0x00\n        /* \"#utility.yul\":5674:5680   */\n      dup2\n        /* \"#utility.yul\":5668:5681   */\n      mload\n        /* \"#utility.yul\":5659:5681   */\n      swap1\n      pop\n        /* \"#utility.yul\":5690:5720   */\n      tag_188\n        /* \"#utility.yul\":5714:5719   */\n      dup2\n        /* \"#utility.yul\":5690:5720   */\n      tag_114\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":5589:5726   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5732:6077   */\n    tag_55:\n        /* \"#utility.yul\":5799:5805   */\n      0x00\n        /* \"#utility.yul\":5848:5850   */\n      0x20\n        /* \"#utility.yul\":5836:5845   */\n      dup3\n        /* \"#utility.yul\":5827:5834   */\n      dup5\n        /* \"#utility.yul\":5823:5846   */\n      sub\n        /* \"#utility.yul\":5819:5851   */\n      slt\n        /* \"#utility.yul\":5816:5935   */\n      iszero\n      tag_190\n      jumpi\n        /* \"#utility.yul\":5854:5933   */\n      tag_191\n      tag_102\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":5816:5935   */\n    tag_190:\n        /* \"#utility.yul\":5974:5975   */\n      0x00\n        /* \"#utility.yul\":5999:6060   */\n      tag_192\n        /* \"#utility.yul\":6052:6059   */\n      dup5\n        /* \"#utility.yul\":6043:6049   */\n      dup3\n        /* \"#utility.yul\":6032:6041   */\n      dup6\n        /* \"#utility.yul\":6028:6050   */\n      add\n        /* \"#utility.yul\":5999:6060   */\n      tag_115\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":5989:6060   */\n      swap2\n      pop\n        /* \"#utility.yul\":5945:6070   */\n      pop\n        /* \"#utility.yul\":5732:6077   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6083:6226   */\n    tag_116:\n        /* \"#utility.yul\":6140:6145   */\n      0x00\n        /* \"#utility.yul\":6171:6177   */\n      dup2\n        /* \"#utility.yul\":6165:6178   */\n      mload\n        /* \"#utility.yul\":6156:6178   */\n      swap1\n      pop\n        /* \"#utility.yul\":6187:6220   */\n      tag_194\n        /* \"#utility.yul\":6214:6219   */\n      dup2\n        /* \"#utility.yul\":6187:6220   */\n      tag_106\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":6083:6226   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6232:6583   */\n    tag_61:\n        /* \"#utility.yul\":6302:6308   */\n      0x00\n        /* \"#utility.yul\":6351:6353   */\n      0x20\n        /* \"#utility.yul\":6339:6348   */\n      dup3\n        /* \"#utility.yul\":6330:6337   */\n      dup5\n        /* \"#utility.yul\":6326:6349   */\n      sub\n        /* \"#utility.yul\":6322:6354   */\n      slt\n        /* \"#utility.yul\":6319:6438   */\n      iszero\n      tag_196\n      jumpi\n        /* \"#utility.yul\":6357:6436   */\n      tag_197\n      tag_102\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":6319:6438   */\n    tag_196:\n        /* \"#utility.yul\":6477:6478   */\n      0x00\n        /* \"#utility.yul\":6502:6566   */\n      tag_198\n        /* \"#utility.yul\":6558:6565   */\n      dup5\n        /* \"#utility.yul\":6549:6555   */\n      dup3\n        /* \"#utility.yul\":6538:6547   */\n      dup6\n        /* \"#utility.yul\":6534:6556   */\n      add\n        /* \"#utility.yul\":6502:6566   */\n      tag_116\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":6492:6566   */\n      swap2\n      pop\n        /* \"#utility.yul\":6448:6576   */\n      pop\n        /* \"#utility.yul\":6232:6583   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6589:6760   */\n    tag_117:\n        /* \"#utility.yul\":6729:6752   */\n      0x41646472657373207a65726f2064657465637465640000000000000000000000\n        /* \"#utility.yul\":6725:6726   */\n      0x00\n        /* \"#utility.yul\":6717:6723   */\n      dup3\n        /* \"#utility.yul\":6713:6727   */\n      add\n        /* \"#utility.yul\":6706:6753   */\n      mstore\n        /* \"#utility.yul\":6589:6760   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6766:7132   */\n    tag_118:\n        /* \"#utility.yul\":6908:6911   */\n      0x00\n        /* \"#utility.yul\":6929:6996   */\n      tag_201\n        /* \"#utility.yul\":6993:6995   */\n      0x15\n        /* \"#utility.yul\":6988:6991   */\n      dup4\n        /* \"#utility.yul\":6929:6996   */\n      tag_108\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":6922:6996   */\n      swap2\n      pop\n        /* \"#utility.yul\":7005:7098   */\n      tag_202\n        /* \"#utility.yul\":7094:7097   */\n      dup3\n        /* \"#utility.yul\":7005:7098   */\n      tag_117\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":7123:7125   */\n      0x20\n        /* \"#utility.yul\":7118:7121   */\n      dup3\n        /* \"#utility.yul\":7114:7126   */\n      add\n        /* \"#utility.yul\":7107:7126   */\n      swap1\n      pop\n        /* \"#utility.yul\":6766:7132   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7138:7557   */\n    tag_65:\n        /* \"#utility.yul\":7304:7308   */\n      0x00\n        /* \"#utility.yul\":7342:7344   */\n      0x20\n        /* \"#utility.yul\":7331:7340   */\n      dup3\n        /* \"#utility.yul\":7327:7345   */\n      add\n        /* \"#utility.yul\":7319:7345   */\n      swap1\n      pop\n        /* \"#utility.yul\":7391:7400   */\n      dup2\n        /* \"#utility.yul\":7385:7389   */\n      dup2\n        /* \"#utility.yul\":7381:7401   */\n      sub\n        /* \"#utility.yul\":7377:7378   */\n      0x00\n        /* \"#utility.yul\":7366:7375   */\n      dup4\n        /* \"#utility.yul\":7362:7379   */\n      add\n        /* \"#utility.yul\":7355:7402   */\n      mstore\n        /* \"#utility.yul\":7419:7550   */\n      tag_204\n        /* \"#utility.yul\":7545:7549   */\n      dup2\n        /* \"#utility.yul\":7419:7550   */\n      tag_118\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":7411:7550   */\n      swap1\n      pop\n        /* \"#utility.yul\":7138:7557   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7563:7735   */\n    tag_119:\n        /* \"#utility.yul\":7703:7727   */\n      0x43616e2774207374616b65206e756c6c2076616c756500000000000000000000\n        /* \"#utility.yul\":7699:7700   */\n      0x00\n        /* \"#utility.yul\":7691:7697   */\n      dup3\n        /* \"#utility.yul\":7687:7701   */\n      add\n        /* \"#utility.yul\":7680:7728   */\n      mstore\n        /* \"#utility.yul\":7563:7735   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7741:8107   */\n    tag_120:\n        /* \"#utility.yul\":7883:7886   */\n      0x00\n        /* \"#utility.yul\":7904:7971   */\n      tag_207\n        /* \"#utility.yul\":7968:7970   */\n      0x16\n        /* \"#utility.yul\":7963:7966   */\n      dup4\n        /* \"#utility.yul\":7904:7971   */\n      tag_108\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":7897:7971   */\n      swap2\n      pop\n        /* \"#utility.yul\":7980:8073   */\n      tag_208\n        /* \"#utility.yul\":8069:8072   */\n      dup3\n        /* \"#utility.yul\":7980:8073   */\n      tag_119\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":8098:8100   */\n      0x20\n        /* \"#utility.yul\":8093:8096   */\n      dup3\n        /* \"#utility.yul\":8089:8101   */\n      add\n        /* \"#utility.yul\":8082:8101   */\n      swap1\n      pop\n        /* \"#utility.yul\":7741:8107   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8113:8532   */\n    tag_68:\n        /* \"#utility.yul\":8279:8283   */\n      0x00\n        /* \"#utility.yul\":8317:8319   */\n      0x20\n        /* \"#utility.yul\":8306:8315   */\n      dup3\n        /* \"#utility.yul\":8302:8320   */\n      add\n        /* \"#utility.yul\":8294:8320   */\n      swap1\n      pop\n        /* \"#utility.yul\":8366:8375   */\n      dup2\n        /* \"#utility.yul\":8360:8364   */\n      dup2\n        /* \"#utility.yul\":8356:8376   */\n      sub\n        /* \"#utility.yul\":8352:8353   */\n      0x00\n        /* \"#utility.yul\":8341:8350   */\n      dup4\n        /* \"#utility.yul\":8337:8354   */\n      add\n        /* \"#utility.yul\":8330:8377   */\n      mstore\n        /* \"#utility.yul\":8394:8525   */\n      tag_210\n        /* \"#utility.yul\":8520:8524   */\n      dup2\n        /* \"#utility.yul\":8394:8525   */\n      tag_120\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":8386:8525   */\n      swap1\n      pop\n        /* \"#utility.yul\":8113:8532   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8538:8706   */\n    tag_121:\n        /* \"#utility.yul\":8678:8698   */\n      0x496e73756666696369656e742066756e64730000000000000000000000000000\n        /* \"#utility.yul\":8674:8675   */\n      0x00\n        /* \"#utility.yul\":8666:8672   */\n      dup3\n        /* \"#utility.yul\":8662:8676   */\n      add\n        /* \"#utility.yul\":8655:8699   */\n      mstore\n        /* \"#utility.yul\":8538:8706   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8712:9078   */\n    tag_122:\n        /* \"#utility.yul\":8854:8857   */\n      0x00\n        /* \"#utility.yul\":8875:8942   */\n      tag_213\n        /* \"#utility.yul\":8939:8941   */\n      0x12\n        /* \"#utility.yul\":8934:8937   */\n      dup4\n        /* \"#utility.yul\":8875:8942   */\n      tag_108\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":8868:8942   */\n      swap2\n      pop\n        /* \"#utility.yul\":8951:9044   */\n      tag_214\n        /* \"#utility.yul\":9040:9043   */\n      dup3\n        /* \"#utility.yul\":8951:9044   */\n      tag_121\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":9069:9071   */\n      0x20\n        /* \"#utility.yul\":9064:9067   */\n      dup3\n        /* \"#utility.yul\":9060:9072   */\n      add\n        /* \"#utility.yul\":9053:9072   */\n      swap1\n      pop\n        /* \"#utility.yul\":8712:9078   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9084:9503   */\n    tag_75:\n        /* \"#utility.yul\":9250:9254   */\n      0x00\n        /* \"#utility.yul\":9288:9290   */\n      0x20\n        /* \"#utility.yul\":9277:9286   */\n      dup3\n        /* \"#utility.yul\":9273:9291   */\n      add\n        /* \"#utility.yul\":9265:9291   */\n      swap1\n      pop\n        /* \"#utility.yul\":9337:9346   */\n      dup2\n        /* \"#utility.yul\":9331:9335   */\n      dup2\n        /* \"#utility.yul\":9327:9347   */\n      sub\n        /* \"#utility.yul\":9323:9324   */\n      0x00\n        /* \"#utility.yul\":9312:9321   */\n      dup4\n        /* \"#utility.yul\":9308:9325   */\n      add\n        /* \"#utility.yul\":9301:9348   */\n      mstore\n        /* \"#utility.yul\":9365:9496   */\n      tag_216\n        /* \"#utility.yul\":9491:9495   */\n      dup2\n        /* \"#utility.yul\":9365:9496   */\n      tag_122\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":9357:9496   */\n      swap1\n      pop\n        /* \"#utility.yul\":9084:9503   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9509:9673   */\n    tag_123:\n        /* \"#utility.yul\":9649:9665   */\n      0x416c7265616479207374616b6564000000000000000000000000000000000000\n        /* \"#utility.yul\":9645:9646   */\n      0x00\n        /* \"#utility.yul\":9637:9643   */\n      dup3\n        /* \"#utility.yul\":9633:9647   */\n      add\n        /* \"#utility.yul\":9626:9666   */\n      mstore\n        /* \"#utility.yul\":9509:9673   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9679:10045   */\n    tag_124:\n        /* \"#utility.yul\":9821:9824   */\n      0x00\n        /* \"#utility.yul\":9842:9909   */\n      tag_219\n        /* \"#utility.yul\":9906:9908   */\n      0x0e\n        /* \"#utility.yul\":9901:9904   */\n      dup4\n        /* \"#utility.yul\":9842:9909   */\n      tag_108\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":9835:9909   */\n      swap2\n      pop\n        /* \"#utility.yul\":9918:10011   */\n      tag_220\n        /* \"#utility.yul\":10007:10010   */\n      dup3\n        /* \"#utility.yul\":9918:10011   */\n      tag_123\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":10036:10038   */\n      0x20\n        /* \"#utility.yul\":10031:10034   */\n      dup3\n        /* \"#utility.yul\":10027:10039   */\n      add\n        /* \"#utility.yul\":10020:10039   */\n      swap1\n      pop\n        /* \"#utility.yul\":9679:10045   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10051:10470   */\n    tag_78:\n        /* \"#utility.yul\":10217:10221   */\n      0x00\n        /* \"#utility.yul\":10255:10257   */\n      0x20\n        /* \"#utility.yul\":10244:10253   */\n      dup3\n        /* \"#utility.yul\":10240:10258   */\n      add\n        /* \"#utility.yul\":10232:10258   */\n      swap1\n      pop\n        /* \"#utility.yul\":10304:10313   */\n      dup2\n        /* \"#utility.yul\":10298:10302   */\n      dup2\n        /* \"#utility.yul\":10294:10314   */\n      sub\n        /* \"#utility.yul\":10290:10291   */\n      0x00\n        /* \"#utility.yul\":10279:10288   */\n      dup4\n        /* \"#utility.yul\":10275:10292   */\n      add\n        /* \"#utility.yul\":10268:10315   */\n      mstore\n        /* \"#utility.yul\":10332:10463   */\n      tag_222\n        /* \"#utility.yul\":10458:10462   */\n      dup2\n        /* \"#utility.yul\":10332:10463   */\n      tag_124\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":10324:10463   */\n      swap1\n      pop\n        /* \"#utility.yul\":10051:10470   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10476:10918   */\n    tag_80:\n        /* \"#utility.yul\":10625:10629   */\n      0x00\n        /* \"#utility.yul\":10663:10665   */\n      0x60\n        /* \"#utility.yul\":10652:10661   */\n      dup3\n        /* \"#utility.yul\":10648:10666   */\n      add\n        /* \"#utility.yul\":10640:10666   */\n      swap1\n      pop\n        /* \"#utility.yul\":10676:10747   */\n      tag_224\n        /* \"#utility.yul\":10744:10745   */\n      0x00\n        /* \"#utility.yul\":10733:10742   */\n      dup4\n        /* \"#utility.yul\":10729:10746   */\n      add\n        /* \"#utility.yul\":10720:10726   */\n      dup7\n        /* \"#utility.yul\":10676:10747   */\n      tag_98\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":10757:10829   */\n      tag_225\n        /* \"#utility.yul\":10825:10827   */\n      0x20\n        /* \"#utility.yul\":10814:10823   */\n      dup4\n        /* \"#utility.yul\":10810:10828   */\n      add\n        /* \"#utility.yul\":10801:10807   */\n      dup6\n        /* \"#utility.yul\":10757:10829   */\n      tag_98\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":10839:10911   */\n      tag_226\n        /* \"#utility.yul\":10907:10909   */\n      0x40\n        /* \"#utility.yul\":10896:10905   */\n      dup4\n        /* \"#utility.yul\":10892:10910   */\n      add\n        /* \"#utility.yul\":10883:10889   */\n      dup5\n        /* \"#utility.yul\":10839:10911   */\n      tag_100\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":10476:10918   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10924:11099   */\n    tag_125:\n        /* \"#utility.yul\":11064:11091   */\n      0x47697665206974206261636b20746f20746865206f776e657200000000000000\n        /* \"#utility.yul\":11060:11061   */\n      0x00\n        /* \"#utility.yul\":11052:11058   */\n      dup3\n        /* \"#utility.yul\":11048:11062   */\n      add\n        /* \"#utility.yul\":11041:11092   */\n      mstore\n        /* \"#utility.yul\":10924:11099   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11105:11471   */\n    tag_126:\n        /* \"#utility.yul\":11247:11250   */\n      0x00\n        /* \"#utility.yul\":11268:11335   */\n      tag_229\n        /* \"#utility.yul\":11332:11334   */\n      0x19\n        /* \"#utility.yul\":11327:11330   */\n      dup4\n        /* \"#utility.yul\":11268:11335   */\n      tag_108\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":11261:11335   */\n      swap2\n      pop\n        /* \"#utility.yul\":11344:11437   */\n      tag_230\n        /* \"#utility.yul\":11433:11436   */\n      dup3\n        /* \"#utility.yul\":11344:11437   */\n      tag_125\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":11462:11464   */\n      0x20\n        /* \"#utility.yul\":11457:11460   */\n      dup3\n        /* \"#utility.yul\":11453:11465   */\n      add\n        /* \"#utility.yul\":11446:11465   */\n      swap1\n      pop\n        /* \"#utility.yul\":11105:11471   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11477:11896   */\n    tag_87:\n        /* \"#utility.yul\":11643:11647   */\n      0x00\n        /* \"#utility.yul\":11681:11683   */\n      0x20\n        /* \"#utility.yul\":11670:11679   */\n      dup3\n        /* \"#utility.yul\":11666:11684   */\n      add\n        /* \"#utility.yul\":11658:11684   */\n      swap1\n      pop\n        /* \"#utility.yul\":11730:11739   */\n      dup2\n        /* \"#utility.yul\":11724:11728   */\n      dup2\n        /* \"#utility.yul\":11720:11740   */\n      sub\n        /* \"#utility.yul\":11716:11717   */\n      0x00\n        /* \"#utility.yul\":11705:11714   */\n      dup4\n        /* \"#utility.yul\":11701:11718   */\n      add\n        /* \"#utility.yul\":11694:11741   */\n      mstore\n        /* \"#utility.yul\":11758:11889   */\n      tag_232\n        /* \"#utility.yul\":11884:11888   */\n      dup2\n        /* \"#utility.yul\":11758:11889   */\n      tag_126\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":11750:11889   */\n      swap1\n      pop\n        /* \"#utility.yul\":11477:11896   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11902:12065   */\n    tag_127:\n        /* \"#utility.yul\":12042:12057   */\n      0x41646472657373207a65726f3f00000000000000000000000000000000000000\n        /* \"#utility.yul\":12038:12039   */\n      0x00\n        /* \"#utility.yul\":12030:12036   */\n      dup3\n        /* \"#utility.yul\":12026:12040   */\n      add\n        /* \"#utility.yul\":12019:12058   */\n      mstore\n        /* \"#utility.yul\":11902:12065   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12071:12437   */\n    tag_128:\n        /* \"#utility.yul\":12213:12216   */\n      0x00\n        /* \"#utility.yul\":12234:12301   */\n      tag_235\n        /* \"#utility.yul\":12298:12300   */\n      0x0d\n        /* \"#utility.yul\":12293:12296   */\n      dup4\n        /* \"#utility.yul\":12234:12301   */\n      tag_108\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":12227:12301   */\n      swap2\n      pop\n        /* \"#utility.yul\":12310:12403   */\n      tag_236\n        /* \"#utility.yul\":12399:12402   */\n      dup3\n        /* \"#utility.yul\":12310:12403   */\n      tag_127\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":12428:12430   */\n      0x20\n        /* \"#utility.yul\":12423:12426   */\n      dup3\n        /* \"#utility.yul\":12419:12431   */\n      add\n        /* \"#utility.yul\":12412:12431   */\n      swap1\n      pop\n        /* \"#utility.yul\":12071:12437   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12443:12862   */\n    tag_90:\n        /* \"#utility.yul\":12609:12613   */\n      0x00\n        /* \"#utility.yul\":12647:12649   */\n      0x20\n        /* \"#utility.yul\":12636:12645   */\n      dup3\n        /* \"#utility.yul\":12632:12650   */\n      add\n        /* \"#utility.yul\":12624:12650   */\n      swap1\n      pop\n        /* \"#utility.yul\":12696:12705   */\n      dup2\n        /* \"#utility.yul\":12690:12694   */\n      dup2\n        /* \"#utility.yul\":12686:12706   */\n      sub\n        /* \"#utility.yul\":12682:12683   */\n      0x00\n        /* \"#utility.yul\":12671:12680   */\n      dup4\n        /* \"#utility.yul\":12667:12684   */\n      add\n        /* \"#utility.yul\":12660:12707   */\n      mstore\n        /* \"#utility.yul\":12724:12855   */\n      tag_238\n        /* \"#utility.yul\":12850:12854   */\n      dup2\n        /* \"#utility.yul\":12724:12855   */\n      tag_128\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":12716:12855   */\n      swap1\n      pop\n        /* \"#utility.yul\":12443:12862   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12868:13200   */\n    tag_92:\n        /* \"#utility.yul\":12989:12993   */\n      0x00\n        /* \"#utility.yul\":13027:13029   */\n      0x40\n        /* \"#utility.yul\":13016:13025   */\n      dup3\n        /* \"#utility.yul\":13012:13030   */\n      add\n        /* \"#utility.yul\":13004:13030   */\n      swap1\n      pop\n        /* \"#utility.yul\":13040:13111   */\n      tag_240\n        /* \"#utility.yul\":13108:13109   */\n      0x00\n        /* \"#utility.yul\":13097:13106   */\n      dup4\n        /* \"#utility.yul\":13093:13110   */\n      add\n        /* \"#utility.yul\":13084:13090   */\n      dup6\n        /* \"#utility.yul\":13040:13111   */\n      tag_98\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":13121:13193   */\n      tag_241\n        /* \"#utility.yul\":13189:13191   */\n      0x20\n        /* \"#utility.yul\":13178:13187   */\n      dup4\n        /* \"#utility.yul\":13174:13192   */\n      add\n        /* \"#utility.yul\":13165:13171   */\n      dup5\n        /* \"#utility.yul\":13121:13193   */\n      tag_98\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":12868:13200   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13206:13386   */\n    tag_129:\n        /* \"#utility.yul\":13254:13331   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13251:13252   */\n      0x00\n        /* \"#utility.yul\":13244:13332   */\n      mstore\n        /* \"#utility.yul\":13351:13355   */\n      0x11\n        /* \"#utility.yul\":13348:13349   */\n      0x04\n        /* \"#utility.yul\":13341:13356   */\n      mstore\n        /* \"#utility.yul\":13375:13379   */\n      0x24\n        /* \"#utility.yul\":13372:13373   */\n      0x00\n        /* \"#utility.yul\":13365:13380   */\n      revert\n        /* \"#utility.yul\":13392:13583   */\n    tag_95:\n        /* \"#utility.yul\":13432:13435   */\n      0x00\n        /* \"#utility.yul\":13451:13471   */\n      tag_244\n        /* \"#utility.yul\":13469:13470   */\n      dup3\n        /* \"#utility.yul\":13451:13471   */\n      tag_99\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":13446:13471   */\n      swap2\n      pop\n        /* \"#utility.yul\":13485:13505   */\n      tag_245\n        /* \"#utility.yul\":13503:13504   */\n      dup4\n        /* \"#utility.yul\":13485:13505   */\n      tag_99\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":13480:13505   */\n      swap3\n      pop\n        /* \"#utility.yul\":13528:13529   */\n      dup3\n        /* \"#utility.yul\":13525:13526   */\n      dup3\n        /* \"#utility.yul\":13521:13530   */\n      add\n        /* \"#utility.yul\":13514:13530   */\n      swap1\n      pop\n        /* \"#utility.yul\":13549:13552   */\n      dup1\n        /* \"#utility.yul\":13546:13547   */\n      dup3\n        /* \"#utility.yul\":13543:13553   */\n      gt\n        /* \"#utility.yul\":13540:13576   */\n      iszero\n      tag_246\n      jumpi\n        /* \"#utility.yul\":13556:13574   */\n      tag_247\n      tag_129\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":13540:13576   */\n    tag_246:\n        /* \"#utility.yul\":13392:13583   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e61da7996d53f9d98f5086fc0b6fac0364b2f8b3bda6f01201716b8ff9886ccb64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_455": {
									"entryPoint": null,
									"id": 455,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 275,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 331,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256_fromMemory": {
									"entryPoint": 353,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 231,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 200,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 297,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 196,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 250,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 306,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1715:3",
										"nodeType": "YulBlock",
										"src": "0:1715:3",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:3",
													"nodeType": "YulBlock",
													"src": "47:35:3",
													"statements": [
														{
															"nativeSrc": "57:19:3",
															"nodeType": "YulAssignment",
															"src": "57:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:3",
																		"nodeType": "YulLiteral",
																		"src": "73:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:3"
																},
																"nativeSrc": "67:9:3",
																"nodeType": "YulFunctionCall",
																"src": "67:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:3",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:3",
														"nodeType": "YulTypedName",
														"src": "40:6:3",
														"type": ""
													}
												],
												"src": "7:75:3"
											},
											{
												"body": {
													"nativeSrc": "177:28:3",
													"nodeType": "YulBlock",
													"src": "177:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:3",
																		"nodeType": "YulLiteral",
																		"src": "194:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:3",
																		"nodeType": "YulLiteral",
																		"src": "197:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:3"
																},
																"nativeSrc": "187:12:3",
																"nodeType": "YulFunctionCall",
																"src": "187:12:3"
															},
															"nativeSrc": "187:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:3"
											},
											{
												"body": {
													"nativeSrc": "300:28:3",
													"nodeType": "YulBlock",
													"src": "300:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:3",
																		"nodeType": "YulLiteral",
																		"src": "317:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:3",
																		"nodeType": "YulLiteral",
																		"src": "320:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:3"
																},
																"nativeSrc": "310:12:3",
																"nodeType": "YulFunctionCall",
																"src": "310:12:3"
															},
															"nativeSrc": "310:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:3"
											},
											{
												"body": {
													"nativeSrc": "379:81:3",
													"nodeType": "YulBlock",
													"src": "379:81:3",
													"statements": [
														{
															"nativeSrc": "389:65:3",
															"nodeType": "YulAssignment",
															"src": "389:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:3",
																		"nodeType": "YulLiteral",
																		"src": "411:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:3"
																},
																"nativeSrc": "400:54:3",
																"nodeType": "YulFunctionCall",
																"src": "400:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:3",
														"nodeType": "YulTypedName",
														"src": "361:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:3",
														"nodeType": "YulTypedName",
														"src": "371:7:3",
														"type": ""
													}
												],
												"src": "334:126:3"
											},
											{
												"body": {
													"nativeSrc": "511:51:3",
													"nodeType": "YulBlock",
													"src": "511:51:3",
													"statements": [
														{
															"nativeSrc": "521:35:3",
															"nodeType": "YulAssignment",
															"src": "521:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:3"
																},
																"nativeSrc": "532:24:3",
																"nodeType": "YulFunctionCall",
																"src": "532:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:3",
														"nodeType": "YulTypedName",
														"src": "493:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:3",
														"nodeType": "YulTypedName",
														"src": "503:7:3",
														"type": ""
													}
												],
												"src": "466:96:3"
											},
											{
												"body": {
													"nativeSrc": "611:79:3",
													"nodeType": "YulBlock",
													"src": "611:79:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:3",
																"nodeType": "YulBlock",
																"src": "668:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:3",
																					"nodeType": "YulLiteral",
																					"src": "677:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:3",
																					"nodeType": "YulLiteral",
																					"src": "680:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:3"
																			},
																			"nativeSrc": "670:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:3"
																		},
																		"nativeSrc": "670:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:3",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:3"
																				},
																				"nativeSrc": "641:24:3",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:3"
																		},
																		"nativeSrc": "631:35:3",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:3"
																},
																"nativeSrc": "624:43:3",
																"nodeType": "YulFunctionCall",
																"src": "624:43:3"
															},
															"nativeSrc": "621:63:3",
															"nodeType": "YulIf",
															"src": "621:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:3",
														"nodeType": "YulTypedName",
														"src": "604:5:3",
														"type": ""
													}
												],
												"src": "568:122:3"
											},
											{
												"body": {
													"nativeSrc": "759:80:3",
													"nodeType": "YulBlock",
													"src": "759:80:3",
													"statements": [
														{
															"nativeSrc": "769:22:3",
															"nodeType": "YulAssignment",
															"src": "769:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:3"
																},
																"nativeSrc": "778:13:3",
																"nodeType": "YulFunctionCall",
																"src": "778:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:3",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:3"
																},
																"nativeSrc": "800:33:3",
																"nodeType": "YulFunctionCall",
																"src": "800:33:3"
															},
															"nativeSrc": "800:33:3",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:3"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:3",
														"nodeType": "YulTypedName",
														"src": "737:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:3",
														"nodeType": "YulTypedName",
														"src": "745:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:3",
														"nodeType": "YulTypedName",
														"src": "753:5:3",
														"type": ""
													}
												],
												"src": "696:143:3"
											},
											{
												"body": {
													"nativeSrc": "890:32:3",
													"nodeType": "YulBlock",
													"src": "890:32:3",
													"statements": [
														{
															"nativeSrc": "900:16:3",
															"nodeType": "YulAssignment",
															"src": "900:16:3",
															"value": {
																"name": "value",
																"nativeSrc": "911:5:3",
																"nodeType": "YulIdentifier",
																"src": "911:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "900:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "900:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "845:77:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "872:5:3",
														"nodeType": "YulTypedName",
														"src": "872:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "882:7:3",
														"nodeType": "YulTypedName",
														"src": "882:7:3",
														"type": ""
													}
												],
												"src": "845:77:3"
											},
											{
												"body": {
													"nativeSrc": "971:79:3",
													"nodeType": "YulBlock",
													"src": "971:79:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "1028:16:3",
																"nodeType": "YulBlock",
																"src": "1028:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1037:1:3",
																					"nodeType": "YulLiteral",
																					"src": "1037:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1040:1:3",
																					"nodeType": "YulLiteral",
																					"src": "1040:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1030:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "1030:6:3"
																			},
																			"nativeSrc": "1030:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "1030:12:3"
																		},
																		"nativeSrc": "1030:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "1030:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "994:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "994:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1019:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "1019:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1001:17:3",
																					"nodeType": "YulIdentifier",
																					"src": "1001:17:3"
																				},
																				"nativeSrc": "1001:24:3",
																				"nodeType": "YulFunctionCall",
																				"src": "1001:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "991:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "991:2:3"
																		},
																		"nativeSrc": "991:35:3",
																		"nodeType": "YulFunctionCall",
																		"src": "991:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "984:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "984:6:3"
																},
																"nativeSrc": "984:43:3",
																"nodeType": "YulFunctionCall",
																"src": "984:43:3"
															},
															"nativeSrc": "981:63:3",
															"nodeType": "YulIf",
															"src": "981:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "928:122:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "964:5:3",
														"nodeType": "YulTypedName",
														"src": "964:5:3",
														"type": ""
													}
												],
												"src": "928:122:3"
											},
											{
												"body": {
													"nativeSrc": "1119:80:3",
													"nodeType": "YulBlock",
													"src": "1119:80:3",
													"statements": [
														{
															"nativeSrc": "1129:22:3",
															"nodeType": "YulAssignment",
															"src": "1129:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1144:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "1144:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1138:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "1138:5:3"
																},
																"nativeSrc": "1138:13:3",
																"nodeType": "YulFunctionCall",
																"src": "1138:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1129:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "1129:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1187:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "1187:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1160:26:3",
																	"nodeType": "YulIdentifier",
																	"src": "1160:26:3"
																},
																"nativeSrc": "1160:33:3",
																"nodeType": "YulFunctionCall",
																"src": "1160:33:3"
															},
															"nativeSrc": "1160:33:3",
															"nodeType": "YulExpressionStatement",
															"src": "1160:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "1056:143:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1097:6:3",
														"nodeType": "YulTypedName",
														"src": "1097:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1105:3:3",
														"nodeType": "YulTypedName",
														"src": "1105:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1113:5:3",
														"nodeType": "YulTypedName",
														"src": "1113:5:3",
														"type": ""
													}
												],
												"src": "1056:143:3"
											},
											{
												"body": {
													"nativeSrc": "1299:413:3",
													"nodeType": "YulBlock",
													"src": "1299:413:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "1345:83:3",
																"nodeType": "YulBlock",
																"src": "1345:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1347:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "1347:77:3"
																			},
																			"nativeSrc": "1347:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "1347:79:3"
																		},
																		"nativeSrc": "1347:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "1347:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1320:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "1320:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1329:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "1329:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1316:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1316:3:3"
																		},
																		"nativeSrc": "1316:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1316:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1341:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1312:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1312:3:3"
																},
																"nativeSrc": "1312:32:3",
																"nodeType": "YulFunctionCall",
																"src": "1312:32:3"
															},
															"nativeSrc": "1309:119:3",
															"nodeType": "YulIf",
															"src": "1309:119:3"
														},
														{
															"nativeSrc": "1438:128:3",
															"nodeType": "YulBlock",
															"src": "1438:128:3",
															"statements": [
																{
																	"nativeSrc": "1453:15:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1453:15:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1467:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1467:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1457:6:3",
																			"nodeType": "YulTypedName",
																			"src": "1457:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1482:74:3",
																	"nodeType": "YulAssignment",
																	"src": "1482:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1528:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "1528:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1539:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "1539:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1524:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "1524:3:3"
																				},
																				"nativeSrc": "1524:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "1524:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1548:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "1548:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1492:31:3",
																			"nodeType": "YulIdentifier",
																			"src": "1492:31:3"
																		},
																		"nativeSrc": "1492:64:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1492:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1482:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "1482:6:3"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1576:129:3",
															"nodeType": "YulBlock",
															"src": "1576:129:3",
															"statements": [
																{
																	"nativeSrc": "1591:16:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1591:16:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1605:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1605:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1595:6:3",
																			"nodeType": "YulTypedName",
																			"src": "1595:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1621:74:3",
																	"nodeType": "YulAssignment",
																	"src": "1621:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1667:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "1667:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1678:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "1678:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1663:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "1663:3:3"
																				},
																				"nativeSrc": "1663:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "1663:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1687:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "1687:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1631:31:3",
																			"nodeType": "YulIdentifier",
																			"src": "1631:31:3"
																		},
																		"nativeSrc": "1631:64:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1631:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1621:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "1621:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256_fromMemory",
												"nativeSrc": "1205:507:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1261:9:3",
														"nodeType": "YulTypedName",
														"src": "1261:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1272:7:3",
														"nodeType": "YulTypedName",
														"src": "1272:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1284:6:3",
														"nodeType": "YulTypedName",
														"src": "1284:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1292:6:3",
														"nodeType": "YulTypedName",
														"src": "1292:6:3",
														"type": ""
													}
												],
												"src": "1205:507:3"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b506040516200122738038062001227833981810160405281019062000036919062000161565b3360015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806002819055505050620001a6565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620000f382620000c8565b9050919050565b6200010581620000e7565b811462000110575f80fd5b50565b5f815190506200012381620000fa565b92915050565b5f819050919050565b6200013d8162000129565b811462000148575f80fd5b50565b5f815190506200015b8162000132565b92915050565b5f80604083850312156200017a5762000179620000c4565b5b5f620001898582860162000113565b92505060206200019c858286016200014b565b9150509250929050565b61107380620001b45f395ff3fe608060405234801561000f575f80fd5b5060043610610086575f3560e01c8063901c947f11610059578063901c947f146100ee5780639168ae721461010c578063a694fc3a1461013d578063f2fde38b1461015957610086565b80633aeaccf51461008a5780633ccfd60b146100a85780638005a7de146100b25780638da5cb5b146100d0575b5f80fd5b610092610175565b60405161009f9190610a4c565b60405180910390f35b6100b0610198565b005b6100ba61041a565b6040516100c79190610a7d565b60405180910390f35b6100d8610420565b6040516100e59190610a4c565b60405180910390f35b6100f6610445565b6040516101039190610a7d565b60405180910390f35b61012660048036038101906101219190610ac4565b6104e3565b604051610134929190610aef565b60405180910390f35b61015760048036038101906101529190610b40565b610503565b005b610173600480360381019061016e9190610ac4565b610859565b005b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015411610219576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021090610bc5565b60405180910390fd5b61026e60025460035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20600101546109f890919063ffffffff16565b4210156102b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102a790610c2d565b60405180910390fd5b5f60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015490505f60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f01819055505f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610391929190610c4b565b6020604051808303815f875af11580156103ad573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103d19190610ca7565b5042813373ffffffffffffffffffffffffffffffffffffffff167f92ccf450a286a957af52509bc1c9939d1a6a481783e142e41e2499f0bb66ebc660405160405180910390a450565b60025481565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161049f9190610a4c565b602060405180830381865afa1580156104ba573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104de9190610ce6565b905090565b6003602052805f5260405f205f91509050805f0154908060010154905082565b5f73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1603610571576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056890610d5b565b60405180910390fd5b5f81116105b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105aa90610dc3565b60405180910390fd5b805f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161060c9190610a4c565b602060405180830381865afa158015610627573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061064b9190610ce6565b101561068c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068390610e2b565b60405180910390fd5b5f60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f01541461070d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070490610e93565b60405180910390fd5b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161076993929190610eb1565b6020604051808303815f875af1158015610785573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107a99190610ca7565b5060405180604001604052808281526020014281525060035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f820151815f01556020820151816001015590505042813373ffffffffffffffffffffffffffffffffffffffff167f1449c6dd7851abc30abf37f57715f492010519147cc2652fbc38202c18a6ee9060405160405180910390a450565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146108e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108df90610f30565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610956576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094d90610f98565b60405180910390fd5b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f8934ce4adea8d9ce0d714d2c22b86790e41b7731c84b926fbbdc1d40ff6533c981836040516109ec929190610fb6565b60405180910390a15050565b5f8183610a05919061100a565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610a3682610a0d565b9050919050565b610a4681610a2c565b82525050565b5f602082019050610a5f5f830184610a3d565b92915050565b5f819050919050565b610a7781610a65565b82525050565b5f602082019050610a905f830184610a6e565b92915050565b5f80fd5b610aa381610a2c565b8114610aad575f80fd5b50565b5f81359050610abe81610a9a565b92915050565b5f60208284031215610ad957610ad8610a96565b5b5f610ae684828501610ab0565b91505092915050565b5f604082019050610b025f830185610a6e565b610b0f6020830184610a6e565b9392505050565b610b1f81610a65565b8114610b29575f80fd5b50565b5f81359050610b3a81610b16565b92915050565b5f60208284031215610b5557610b54610a96565b5b5f610b6284828501610b2c565b91505092915050565b5f82825260208201905092915050565b7f4e6f207374616b656420616d6f756e74000000000000000000000000000000005f82015250565b5f610baf601083610b6b565b9150610bba82610b7b565b602082019050919050565b5f6020820190508181035f830152610bdc81610ba3565b9050919050565b7f5374616b696e6720706572696f64206e6f74206f7665722079657400000000005f82015250565b5f610c17601b83610b6b565b9150610c2282610be3565b602082019050919050565b5f6020820190508181035f830152610c4481610c0b565b9050919050565b5f604082019050610c5e5f830185610a3d565b610c6b6020830184610a6e565b9392505050565b5f8115159050919050565b610c8681610c72565b8114610c90575f80fd5b50565b5f81519050610ca181610c7d565b92915050565b5f60208284031215610cbc57610cbb610a96565b5b5f610cc984828501610c93565b91505092915050565b5f81519050610ce081610b16565b92915050565b5f60208284031215610cfb57610cfa610a96565b5b5f610d0884828501610cd2565b91505092915050565b7f41646472657373207a65726f20646574656374656400000000000000000000005f82015250565b5f610d45601583610b6b565b9150610d5082610d11565b602082019050919050565b5f6020820190508181035f830152610d7281610d39565b9050919050565b7f43616e2774207374616b65206e756c6c2076616c7565000000000000000000005f82015250565b5f610dad601683610b6b565b9150610db882610d79565b602082019050919050565b5f6020820190508181035f830152610dda81610da1565b9050919050565b7f496e73756666696369656e742066756e647300000000000000000000000000005f82015250565b5f610e15601283610b6b565b9150610e2082610de1565b602082019050919050565b5f6020820190508181035f830152610e4281610e09565b9050919050565b7f416c7265616479207374616b65640000000000000000000000000000000000005f82015250565b5f610e7d600e83610b6b565b9150610e8882610e49565b602082019050919050565b5f6020820190508181035f830152610eaa81610e71565b9050919050565b5f606082019050610ec45f830186610a3d565b610ed16020830185610a3d565b610ede6040830184610a6e565b949350505050565b7f47697665206974206261636b20746f20746865206f776e6572000000000000005f82015250565b5f610f1a601983610b6b565b9150610f2582610ee6565b602082019050919050565b5f6020820190508181035f830152610f4781610f0e565b9050919050565b7f41646472657373207a65726f3f000000000000000000000000000000000000005f82015250565b5f610f82600d83610b6b565b9150610f8d82610f4e565b602082019050919050565b5f6020820190508181035f830152610faf81610f76565b9050919050565b5f604082019050610fc95f830185610a3d565b610fd66020830184610a3d565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61101482610a65565b915061101f83610a65565b925082820190508082111561103757611036610fdd565b5b9291505056fea2646970667358221220e61da7996d53f9d98f5086fc0b6fac0364b2f8b3bda6f01201716b8ff9886ccb64736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1227 CODESIZE SUB DUP1 PUSH3 0x1227 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x161 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP POP PUSH3 0x1A6 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0xF3 DUP3 PUSH3 0xC8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x105 DUP2 PUSH3 0xE7 JUMP JUMPDEST DUP2 EQ PUSH3 0x110 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x123 DUP2 PUSH3 0xFA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x13D DUP2 PUSH3 0x129 JUMP JUMPDEST DUP2 EQ PUSH3 0x148 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x15B DUP2 PUSH3 0x132 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x17A JUMPI PUSH3 0x179 PUSH3 0xC4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x189 DUP6 DUP3 DUP7 ADD PUSH3 0x113 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x19C DUP6 DUP3 DUP7 ADD PUSH3 0x14B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1073 DUP1 PUSH3 0x1B4 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x86 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x901C947F GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x901C947F EQ PUSH2 0xEE JUMPI DUP1 PUSH4 0x9168AE72 EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x159 JUMPI PUSH2 0x86 JUMP JUMPDEST DUP1 PUSH4 0x3AEACCF5 EQ PUSH2 0x8A JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0xA8 JUMPI DUP1 PUSH4 0x8005A7DE EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xD0 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x92 PUSH2 0x175 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9F SWAP2 SWAP1 PUSH2 0xA4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB0 PUSH2 0x198 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xBA PUSH2 0x41A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC7 SWAP2 SWAP1 PUSH2 0xA7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD8 PUSH2 0x420 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE5 SWAP2 SWAP1 PUSH2 0xA4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF6 PUSH2 0x445 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x103 SWAP2 SWAP1 PUSH2 0xA7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x126 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xAC4 JUMP JUMPDEST PUSH2 0x4E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x134 SWAP3 SWAP2 SWAP1 PUSH2 0xAEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x152 SWAP2 SWAP1 PUSH2 0xB40 JUMP JUMPDEST PUSH2 0x503 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16E SWAP2 SWAP1 PUSH2 0xAC4 JUMP JUMPDEST PUSH2 0x859 JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD GT PUSH2 0x219 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x210 SWAP1 PUSH2 0xBC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x26E PUSH1 0x2 SLOAD PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x9F8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x2B0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A7 SWAP1 PUSH2 0xC2D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD SWAP1 POP PUSH0 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD DUP2 SWAP1 SSTORE POP PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x391 SWAP3 SWAP2 SWAP1 PUSH2 0xC4B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3AD JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3D1 SWAP2 SWAP1 PUSH2 0xCA7 JUMP JUMPDEST POP TIMESTAMP DUP2 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x92CCF450A286A957AF52509BC1C9939D1A6A481783E142E41E2499F0BB66EBC6 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49F SWAP2 SWAP1 PUSH2 0xA4C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4BA JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4DE SWAP2 SWAP1 PUSH2 0xCE6 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x571 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x568 SWAP1 PUSH2 0xD5B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT PUSH2 0x5B3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5AA SWAP1 PUSH2 0xDC3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60C SWAP2 SWAP1 PUSH2 0xA4C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x627 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x64B SWAP2 SWAP1 PUSH2 0xCE6 JUMP JUMPDEST LT ISZERO PUSH2 0x68C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x683 SWAP1 PUSH2 0xE2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD EQ PUSH2 0x70D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x704 SWAP1 PUSH2 0xE93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x769 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xEB1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x785 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7A9 SWAP2 SWAP1 PUSH2 0xCA7 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE POP PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP TIMESTAMP DUP2 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1449C6DD7851ABC30ABF37F57715F492010519147CC2652FBC38202C18A6EE90 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8DF SWAP1 PUSH2 0xF30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x956 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x94D SWAP1 PUSH2 0xF98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x8934CE4ADEA8D9CE0D714D2C22B86790E41B7731C84B926FBBDC1D40FF6533C9 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH2 0x9EC SWAP3 SWAP2 SWAP1 PUSH2 0xFB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0xA05 SWAP2 SWAP1 PUSH2 0x100A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA36 DUP3 PUSH2 0xA0D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA46 DUP2 PUSH2 0xA2C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA5F PUSH0 DUP4 ADD DUP5 PUSH2 0xA3D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA77 DUP2 PUSH2 0xA65 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA90 PUSH0 DUP4 ADD DUP5 PUSH2 0xA6E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xAA3 DUP2 PUSH2 0xA2C JUMP JUMPDEST DUP2 EQ PUSH2 0xAAD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xABE DUP2 PUSH2 0xA9A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAD9 JUMPI PUSH2 0xAD8 PUSH2 0xA96 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xAE6 DUP5 DUP3 DUP6 ADD PUSH2 0xAB0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xB02 PUSH0 DUP4 ADD DUP6 PUSH2 0xA6E JUMP JUMPDEST PUSH2 0xB0F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xA6E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xB1F DUP2 PUSH2 0xA65 JUMP JUMPDEST DUP2 EQ PUSH2 0xB29 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB3A DUP2 PUSH2 0xB16 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB55 JUMPI PUSH2 0xB54 PUSH2 0xA96 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB62 DUP5 DUP3 DUP6 ADD PUSH2 0xB2C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F207374616B656420616D6F756E7400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xBAF PUSH1 0x10 DUP4 PUSH2 0xB6B JUMP JUMPDEST SWAP2 POP PUSH2 0xBBA DUP3 PUSH2 0xB7B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xBDC DUP2 PUSH2 0xBA3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5374616B696E6720706572696F64206E6F74206F766572207965740000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xC17 PUSH1 0x1B DUP4 PUSH2 0xB6B JUMP JUMPDEST SWAP2 POP PUSH2 0xC22 DUP3 PUSH2 0xBE3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xC44 DUP2 PUSH2 0xC0B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xC5E PUSH0 DUP4 ADD DUP6 PUSH2 0xA3D JUMP JUMPDEST PUSH2 0xC6B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xA6E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC86 DUP2 PUSH2 0xC72 JUMP JUMPDEST DUP2 EQ PUSH2 0xC90 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xCA1 DUP2 PUSH2 0xC7D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCBC JUMPI PUSH2 0xCBB PUSH2 0xA96 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xCC9 DUP5 DUP3 DUP6 ADD PUSH2 0xC93 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xCE0 DUP2 PUSH2 0xB16 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCFB JUMPI PUSH2 0xCFA PUSH2 0xA96 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD08 DUP5 DUP3 DUP6 ADD PUSH2 0xCD2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x41646472657373207A65726F2064657465637465640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xD45 PUSH1 0x15 DUP4 PUSH2 0xB6B JUMP JUMPDEST SWAP2 POP PUSH2 0xD50 DUP3 PUSH2 0xD11 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xD72 DUP2 PUSH2 0xD39 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E2774207374616B65206E756C6C2076616C756500000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xDAD PUSH1 0x16 DUP4 PUSH2 0xB6B JUMP JUMPDEST SWAP2 POP PUSH2 0xDB8 DUP3 PUSH2 0xD79 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xDDA DUP2 PUSH2 0xDA1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742066756E64730000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE15 PUSH1 0x12 DUP4 PUSH2 0xB6B JUMP JUMPDEST SWAP2 POP PUSH2 0xE20 DUP3 PUSH2 0xDE1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE42 DUP2 PUSH2 0xE09 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416C7265616479207374616B6564000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE7D PUSH1 0xE DUP4 PUSH2 0xB6B JUMP JUMPDEST SWAP2 POP PUSH2 0xE88 DUP3 PUSH2 0xE49 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xEAA DUP2 PUSH2 0xE71 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xEC4 PUSH0 DUP4 ADD DUP7 PUSH2 0xA3D JUMP JUMPDEST PUSH2 0xED1 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xA3D JUMP JUMPDEST PUSH2 0xEDE PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xA6E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x47697665206974206261636B20746F20746865206F776E657200000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF1A PUSH1 0x19 DUP4 PUSH2 0xB6B JUMP JUMPDEST SWAP2 POP PUSH2 0xF25 DUP3 PUSH2 0xEE6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF47 DUP2 PUSH2 0xF0E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x41646472657373207A65726F3F00000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF82 PUSH1 0xD DUP4 PUSH2 0xB6B JUMP JUMPDEST SWAP2 POP PUSH2 0xF8D DUP3 PUSH2 0xF4E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xFAF DUP2 PUSH2 0xF76 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xFC9 PUSH0 DUP4 ADD DUP6 PUSH2 0xA3D JUMP JUMPDEST PUSH2 0xFD6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xA3D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1014 DUP3 PUSH2 0xA65 JUMP JUMPDEST SWAP2 POP PUSH2 0x101F DUP4 PUSH2 0xA65 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1037 JUMPI PUSH2 0x1036 PUSH2 0xFDD JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE6 SAR 0xA7 SWAP10 PUSH14 0x53F9D98F5086FC0B6FAC0364B2F8 0xB3 0xBD 0xA6 CREATE SLT ADD PUSH18 0x6B8FF9886CCB64736F6C6343000816003300 ",
							"sourceMap": "182:2346:2:-:0;;;744:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;819:10;811:5;;:18;;;;;;;;;;;;;;;;;;850:8;840:7;;:18;;;;;;;;;;;;;;;;;;887:16;869:15;:34;;;;744:167;;182:2346;;88:117:3;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:77::-;882:7;911:5;900:16;;845:77;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:507::-;1284:6;1292;1341:2;1329:9;1320:7;1316:23;1312:32;1309:119;;;1347:79;;:::i;:::-;1309:119;1467:1;1492:64;1548:7;1539:6;1528:9;1524:22;1492:64;:::i;:::-;1482:74;;1438:128;1605:2;1631:64;1687:7;1678:6;1667:9;1663:22;1631:64;:::i;:::-;1621:74;;1576:129;1205:507;;;;;:::o;182:2346:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@Address_420": {
									"entryPoint": 373,
									"id": 420,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@add_253": {
									"entryPoint": 2552,
									"id": 253,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@owner_422": {
									"entryPoint": 1056,
									"id": 422,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@showContractBalance_614": {
									"entryPoint": 1093,
									"id": 614,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@stake_535": {
									"entryPoint": 1283,
									"id": 535,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stakers_434": {
									"entryPoint": 1251,
									"id": 434,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stakingDuration_429": {
									"entryPoint": 1050,
									"id": 429,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_651": {
									"entryPoint": 2137,
									"id": 651,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdraw_598": {
									"entryPoint": 408,
									"id": 598,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 2736,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 3219,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2860,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 3282,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2756,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 3239,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2880,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 3302,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2621,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_0c522cb2a1af44930a7426d8b6b6dcdc56d85666de7235537f48c5753d7a529a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3385,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1e09d4dedd886667ac7eac43a75f5b8a9137d9605bcdd673e19a127b1e9cc6a0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3083,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3185032968986ab89d0ebf209c76042e88d4e5067b1e1e98d1a33558aa0144ac_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3854,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3593,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_95b7b77e513d16b36a2faa03d539fb2a99e3aaf7b1d9ac931c129d674f579e04_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3697,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b123eca9829844b661c01ef55268688eca28a9866f8c3021d17497c8d41dc63a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3489,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e731ba893c68928f02781756791066f23259e50b4884778db05599c2eb032f36_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2979,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f0db2bf88b6ae8660dc351ea7aea9c51a185bf943e35d1c9bd0b9dc326f0bec5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3958,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2670,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2636,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 4022,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3761,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3147,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0c522cb2a1af44930a7426d8b6b6dcdc56d85666de7235537f48c5753d7a529a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3419,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1e09d4dedd886667ac7eac43a75f5b8a9137d9605bcdd673e19a127b1e9cc6a0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3117,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3185032968986ab89d0ebf209c76042e88d4e5067b1e1e98d1a33558aa0144ac__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3888,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3627,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_95b7b77e513d16b36a2faa03d539fb2a99e3aaf7b1d9ac931c129d674f579e04__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3731,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b123eca9829844b661c01ef55268688eca28a9866f8c3021d17497c8d41dc63a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3523,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e731ba893c68928f02781756791066f23259e50b4884778db05599c2eb032f36__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3013,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f0db2bf88b6ae8660dc351ea7aea9c51a185bf943e35d1c9bd0b9dc326f0bec5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3992,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2685,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2799,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2923,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4106,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2604,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3186,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2573,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2661,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4061,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2710,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_0c522cb2a1af44930a7426d8b6b6dcdc56d85666de7235537f48c5753d7a529a": {
									"entryPoint": 3345,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1e09d4dedd886667ac7eac43a75f5b8a9137d9605bcdd673e19a127b1e9cc6a0": {
									"entryPoint": 3043,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3185032968986ab89d0ebf209c76042e88d4e5067b1e1e98d1a33558aa0144ac": {
									"entryPoint": 3814,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d": {
									"entryPoint": 3553,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_95b7b77e513d16b36a2faa03d539fb2a99e3aaf7b1d9ac931c129d674f579e04": {
									"entryPoint": 3657,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b123eca9829844b661c01ef55268688eca28a9866f8c3021d17497c8d41dc63a": {
									"entryPoint": 3449,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e731ba893c68928f02781756791066f23259e50b4884778db05599c2eb032f36": {
									"entryPoint": 2939,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f0db2bf88b6ae8660dc351ea7aea9c51a185bf943e35d1c9bd0b9dc326f0bec5": {
									"entryPoint": 3918,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2714,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 3197,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2838,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:13586:3",
										"nodeType": "YulBlock",
										"src": "0:13586:3",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:3",
													"nodeType": "YulBlock",
													"src": "52:81:3",
													"statements": [
														{
															"nativeSrc": "62:65:3",
															"nodeType": "YulAssignment",
															"src": "62:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:3",
																		"nodeType": "YulLiteral",
																		"src": "84:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:3"
																},
																"nativeSrc": "73:54:3",
																"nodeType": "YulFunctionCall",
																"src": "73:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:3",
														"nodeType": "YulTypedName",
														"src": "34:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:3",
														"nodeType": "YulTypedName",
														"src": "44:7:3",
														"type": ""
													}
												],
												"src": "7:126:3"
											},
											{
												"body": {
													"nativeSrc": "184:51:3",
													"nodeType": "YulBlock",
													"src": "184:51:3",
													"statements": [
														{
															"nativeSrc": "194:35:3",
															"nodeType": "YulAssignment",
															"src": "194:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:3"
																},
																"nativeSrc": "205:24:3",
																"nodeType": "YulFunctionCall",
																"src": "205:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:3",
														"nodeType": "YulTypedName",
														"src": "166:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:3",
														"nodeType": "YulTypedName",
														"src": "176:7:3",
														"type": ""
													}
												],
												"src": "139:96:3"
											},
											{
												"body": {
													"nativeSrc": "306:53:3",
													"nodeType": "YulBlock",
													"src": "306:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:3"
																		},
																		"nativeSrc": "328:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:3"
																},
																"nativeSrc": "316:37:3",
																"nodeType": "YulFunctionCall",
																"src": "316:37:3"
															},
															"nativeSrc": "316:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:3",
														"nodeType": "YulTypedName",
														"src": "294:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:3",
														"nodeType": "YulTypedName",
														"src": "301:3:3",
														"type": ""
													}
												],
												"src": "241:118:3"
											},
											{
												"body": {
													"nativeSrc": "463:124:3",
													"nodeType": "YulBlock",
													"src": "463:124:3",
													"statements": [
														{
															"nativeSrc": "473:26:3",
															"nodeType": "YulAssignment",
															"src": "473:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "485:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:2:3",
																		"nodeType": "YulLiteral",
																		"src": "496:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:3"
																},
																"nativeSrc": "481:18:3",
																"nodeType": "YulFunctionCall",
																"src": "481:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "553:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "566:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "577:1:3",
																				"nodeType": "YulLiteral",
																				"src": "577:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "562:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:3"
																		},
																		"nativeSrc": "562:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "509:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:3"
																},
																"nativeSrc": "509:71:3",
																"nodeType": "YulFunctionCall",
																"src": "509:71:3"
															},
															"nativeSrc": "509:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "509:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "365:222:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "435:9:3",
														"nodeType": "YulTypedName",
														"src": "435:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "447:6:3",
														"nodeType": "YulTypedName",
														"src": "447:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "458:4:3",
														"nodeType": "YulTypedName",
														"src": "458:4:3",
														"type": ""
													}
												],
												"src": "365:222:3"
											},
											{
												"body": {
													"nativeSrc": "638:32:3",
													"nodeType": "YulBlock",
													"src": "638:32:3",
													"statements": [
														{
															"nativeSrc": "648:16:3",
															"nodeType": "YulAssignment",
															"src": "648:16:3",
															"value": {
																"name": "value",
																"nativeSrc": "659:5:3",
																"nodeType": "YulIdentifier",
																"src": "659:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "648:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "648:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "593:77:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "620:5:3",
														"nodeType": "YulTypedName",
														"src": "620:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "630:7:3",
														"nodeType": "YulTypedName",
														"src": "630:7:3",
														"type": ""
													}
												],
												"src": "593:77:3"
											},
											{
												"body": {
													"nativeSrc": "741:53:3",
													"nodeType": "YulBlock",
													"src": "741:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "758:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "758:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "781:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "781:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "763:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "763:17:3"
																		},
																		"nativeSrc": "763:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "763:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "751:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "751:6:3"
																},
																"nativeSrc": "751:37:3",
																"nodeType": "YulFunctionCall",
																"src": "751:37:3"
															},
															"nativeSrc": "751:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "751:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "676:118:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "729:5:3",
														"nodeType": "YulTypedName",
														"src": "729:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "736:3:3",
														"nodeType": "YulTypedName",
														"src": "736:3:3",
														"type": ""
													}
												],
												"src": "676:118:3"
											},
											{
												"body": {
													"nativeSrc": "898:124:3",
													"nodeType": "YulBlock",
													"src": "898:124:3",
													"statements": [
														{
															"nativeSrc": "908:26:3",
															"nodeType": "YulAssignment",
															"src": "908:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "920:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "920:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "931:2:3",
																		"nodeType": "YulLiteral",
																		"src": "931:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "916:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "916:3:3"
																},
																"nativeSrc": "916:18:3",
																"nodeType": "YulFunctionCall",
																"src": "916:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "908:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "908:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "988:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "988:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1001:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "1001:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1012:1:3",
																				"nodeType": "YulLiteral",
																				"src": "1012:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "997:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "997:3:3"
																		},
																		"nativeSrc": "997:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "997:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "944:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "944:43:3"
																},
																"nativeSrc": "944:71:3",
																"nodeType": "YulFunctionCall",
																"src": "944:71:3"
															},
															"nativeSrc": "944:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "944:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "800:222:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "870:9:3",
														"nodeType": "YulTypedName",
														"src": "870:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "882:6:3",
														"nodeType": "YulTypedName",
														"src": "882:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "893:4:3",
														"nodeType": "YulTypedName",
														"src": "893:4:3",
														"type": ""
													}
												],
												"src": "800:222:3"
											},
											{
												"body": {
													"nativeSrc": "1068:35:3",
													"nodeType": "YulBlock",
													"src": "1068:35:3",
													"statements": [
														{
															"nativeSrc": "1078:19:3",
															"nodeType": "YulAssignment",
															"src": "1078:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1094:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1094:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1088:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "1088:5:3"
																},
																"nativeSrc": "1088:9:3",
																"nodeType": "YulFunctionCall",
																"src": "1088:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1078:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1078:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1028:75:3",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1061:6:3",
														"nodeType": "YulTypedName",
														"src": "1061:6:3",
														"type": ""
													}
												],
												"src": "1028:75:3"
											},
											{
												"body": {
													"nativeSrc": "1198:28:3",
													"nodeType": "YulBlock",
													"src": "1198:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1215:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1215:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1218:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1218:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1208:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1208:6:3"
																},
																"nativeSrc": "1208:12:3",
																"nodeType": "YulFunctionCall",
																"src": "1208:12:3"
															},
															"nativeSrc": "1208:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "1208:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1109:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "1109:117:3"
											},
											{
												"body": {
													"nativeSrc": "1321:28:3",
													"nodeType": "YulBlock",
													"src": "1321:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1338:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1338:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1341:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1331:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1331:6:3"
																},
																"nativeSrc": "1331:12:3",
																"nodeType": "YulFunctionCall",
																"src": "1331:12:3"
															},
															"nativeSrc": "1331:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "1331:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1232:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "1232:117:3"
											},
											{
												"body": {
													"nativeSrc": "1398:79:3",
													"nodeType": "YulBlock",
													"src": "1398:79:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "1455:16:3",
																"nodeType": "YulBlock",
																"src": "1455:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1464:1:3",
																					"nodeType": "YulLiteral",
																					"src": "1464:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1467:1:3",
																					"nodeType": "YulLiteral",
																					"src": "1467:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1457:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "1457:6:3"
																			},
																			"nativeSrc": "1457:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "1457:12:3"
																		},
																		"nativeSrc": "1457:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "1457:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1421:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "1421:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1446:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "1446:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1428:17:3",
																					"nodeType": "YulIdentifier",
																					"src": "1428:17:3"
																				},
																				"nativeSrc": "1428:24:3",
																				"nodeType": "YulFunctionCall",
																				"src": "1428:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1418:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "1418:2:3"
																		},
																		"nativeSrc": "1418:35:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1418:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1411:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1411:6:3"
																},
																"nativeSrc": "1411:43:3",
																"nodeType": "YulFunctionCall",
																"src": "1411:43:3"
															},
															"nativeSrc": "1408:63:3",
															"nodeType": "YulIf",
															"src": "1408:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1355:122:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1391:5:3",
														"nodeType": "YulTypedName",
														"src": "1391:5:3",
														"type": ""
													}
												],
												"src": "1355:122:3"
											},
											{
												"body": {
													"nativeSrc": "1535:87:3",
													"nodeType": "YulBlock",
													"src": "1535:87:3",
													"statements": [
														{
															"nativeSrc": "1545:29:3",
															"nodeType": "YulAssignment",
															"src": "1545:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1567:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "1567:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1554:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "1554:12:3"
																},
																"nativeSrc": "1554:20:3",
																"nodeType": "YulFunctionCall",
																"src": "1554:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1545:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "1545:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1610:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "1610:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1583:26:3",
																	"nodeType": "YulIdentifier",
																	"src": "1583:26:3"
																},
																"nativeSrc": "1583:33:3",
																"nodeType": "YulFunctionCall",
																"src": "1583:33:3"
															},
															"nativeSrc": "1583:33:3",
															"nodeType": "YulExpressionStatement",
															"src": "1583:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1483:139:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1513:6:3",
														"nodeType": "YulTypedName",
														"src": "1513:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1521:3:3",
														"nodeType": "YulTypedName",
														"src": "1521:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1529:5:3",
														"nodeType": "YulTypedName",
														"src": "1529:5:3",
														"type": ""
													}
												],
												"src": "1483:139:3"
											},
											{
												"body": {
													"nativeSrc": "1694:263:3",
													"nodeType": "YulBlock",
													"src": "1694:263:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "1740:83:3",
																"nodeType": "YulBlock",
																"src": "1740:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1742:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "1742:77:3"
																			},
																			"nativeSrc": "1742:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "1742:79:3"
																		},
																		"nativeSrc": "1742:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "1742:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1715:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "1715:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1724:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "1724:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1711:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1711:3:3"
																		},
																		"nativeSrc": "1711:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1711:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1736:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1736:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1707:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1707:3:3"
																},
																"nativeSrc": "1707:32:3",
																"nodeType": "YulFunctionCall",
																"src": "1707:32:3"
															},
															"nativeSrc": "1704:119:3",
															"nodeType": "YulIf",
															"src": "1704:119:3"
														},
														{
															"nativeSrc": "1833:117:3",
															"nodeType": "YulBlock",
															"src": "1833:117:3",
															"statements": [
																{
																	"nativeSrc": "1848:15:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1848:15:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1862:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1862:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1852:6:3",
																			"nodeType": "YulTypedName",
																			"src": "1852:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1877:63:3",
																	"nodeType": "YulAssignment",
																	"src": "1877:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1912:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "1912:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1923:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "1923:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1908:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "1908:3:3"
																				},
																				"nativeSrc": "1908:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "1908:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1932:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "1932:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1887:20:3",
																			"nodeType": "YulIdentifier",
																			"src": "1887:20:3"
																		},
																		"nativeSrc": "1887:53:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1887:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1877:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "1877:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1628:329:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1664:9:3",
														"nodeType": "YulTypedName",
														"src": "1664:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1675:7:3",
														"nodeType": "YulTypedName",
														"src": "1675:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1687:6:3",
														"nodeType": "YulTypedName",
														"src": "1687:6:3",
														"type": ""
													}
												],
												"src": "1628:329:3"
											},
											{
												"body": {
													"nativeSrc": "2089:206:3",
													"nodeType": "YulBlock",
													"src": "2089:206:3",
													"statements": [
														{
															"nativeSrc": "2099:26:3",
															"nodeType": "YulAssignment",
															"src": "2099:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2111:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "2111:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2122:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2122:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2107:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2107:3:3"
																},
																"nativeSrc": "2107:18:3",
																"nodeType": "YulFunctionCall",
																"src": "2107:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2099:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "2099:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2179:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "2179:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2192:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "2192:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2203:1:3",
																				"nodeType": "YulLiteral",
																				"src": "2203:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2188:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2188:3:3"
																		},
																		"nativeSrc": "2188:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2188:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2135:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "2135:43:3"
																},
																"nativeSrc": "2135:71:3",
																"nodeType": "YulFunctionCall",
																"src": "2135:71:3"
															},
															"nativeSrc": "2135:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "2135:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "2260:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "2260:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2273:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "2273:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2284:2:3",
																				"nodeType": "YulLiteral",
																				"src": "2284:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2269:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2269:3:3"
																		},
																		"nativeSrc": "2269:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2269:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2216:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "2216:43:3"
																},
																"nativeSrc": "2216:72:3",
																"nodeType": "YulFunctionCall",
																"src": "2216:72:3"
															},
															"nativeSrc": "2216:72:3",
															"nodeType": "YulExpressionStatement",
															"src": "2216:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "1963:332:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2053:9:3",
														"nodeType": "YulTypedName",
														"src": "2053:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2065:6:3",
														"nodeType": "YulTypedName",
														"src": "2065:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2073:6:3",
														"nodeType": "YulTypedName",
														"src": "2073:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2084:4:3",
														"nodeType": "YulTypedName",
														"src": "2084:4:3",
														"type": ""
													}
												],
												"src": "1963:332:3"
											},
											{
												"body": {
													"nativeSrc": "2344:79:3",
													"nodeType": "YulBlock",
													"src": "2344:79:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "2401:16:3",
																"nodeType": "YulBlock",
																"src": "2401:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2410:1:3",
																					"nodeType": "YulLiteral",
																					"src": "2410:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2413:1:3",
																					"nodeType": "YulLiteral",
																					"src": "2413:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2403:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "2403:6:3"
																			},
																			"nativeSrc": "2403:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "2403:12:3"
																		},
																		"nativeSrc": "2403:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "2403:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2367:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "2367:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2392:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "2392:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2374:17:3",
																					"nodeType": "YulIdentifier",
																					"src": "2374:17:3"
																				},
																				"nativeSrc": "2374:24:3",
																				"nodeType": "YulFunctionCall",
																				"src": "2374:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2364:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "2364:2:3"
																		},
																		"nativeSrc": "2364:35:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2364:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2357:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2357:6:3"
																},
																"nativeSrc": "2357:43:3",
																"nodeType": "YulFunctionCall",
																"src": "2357:43:3"
															},
															"nativeSrc": "2354:63:3",
															"nodeType": "YulIf",
															"src": "2354:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2301:122:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2337:5:3",
														"nodeType": "YulTypedName",
														"src": "2337:5:3",
														"type": ""
													}
												],
												"src": "2301:122:3"
											},
											{
												"body": {
													"nativeSrc": "2481:87:3",
													"nodeType": "YulBlock",
													"src": "2481:87:3",
													"statements": [
														{
															"nativeSrc": "2491:29:3",
															"nodeType": "YulAssignment",
															"src": "2491:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2513:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "2513:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2500:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "2500:12:3"
																},
																"nativeSrc": "2500:20:3",
																"nodeType": "YulFunctionCall",
																"src": "2500:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2491:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "2491:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2556:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "2556:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2529:26:3",
																	"nodeType": "YulIdentifier",
																	"src": "2529:26:3"
																},
																"nativeSrc": "2529:33:3",
																"nodeType": "YulFunctionCall",
																"src": "2529:33:3"
															},
															"nativeSrc": "2529:33:3",
															"nodeType": "YulExpressionStatement",
															"src": "2529:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2429:139:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2459:6:3",
														"nodeType": "YulTypedName",
														"src": "2459:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2467:3:3",
														"nodeType": "YulTypedName",
														"src": "2467:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2475:5:3",
														"nodeType": "YulTypedName",
														"src": "2475:5:3",
														"type": ""
													}
												],
												"src": "2429:139:3"
											},
											{
												"body": {
													"nativeSrc": "2640:263:3",
													"nodeType": "YulBlock",
													"src": "2640:263:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "2686:83:3",
																"nodeType": "YulBlock",
																"src": "2686:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2688:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "2688:77:3"
																			},
																			"nativeSrc": "2688:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "2688:79:3"
																		},
																		"nativeSrc": "2688:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "2688:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2661:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "2661:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2670:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "2670:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2657:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2657:3:3"
																		},
																		"nativeSrc": "2657:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2657:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2682:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2682:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2653:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2653:3:3"
																},
																"nativeSrc": "2653:32:3",
																"nodeType": "YulFunctionCall",
																"src": "2653:32:3"
															},
															"nativeSrc": "2650:119:3",
															"nodeType": "YulIf",
															"src": "2650:119:3"
														},
														{
															"nativeSrc": "2779:117:3",
															"nodeType": "YulBlock",
															"src": "2779:117:3",
															"statements": [
																{
																	"nativeSrc": "2794:15:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2794:15:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2808:1:3",
																		"nodeType": "YulLiteral",
																		"src": "2808:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2798:6:3",
																			"nodeType": "YulTypedName",
																			"src": "2798:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2823:63:3",
																	"nodeType": "YulAssignment",
																	"src": "2823:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2858:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "2858:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2869:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "2869:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2854:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "2854:3:3"
																				},
																				"nativeSrc": "2854:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "2854:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2878:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "2878:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2833:20:3",
																			"nodeType": "YulIdentifier",
																			"src": "2833:20:3"
																		},
																		"nativeSrc": "2833:53:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2833:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2823:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "2823:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "2574:329:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2610:9:3",
														"nodeType": "YulTypedName",
														"src": "2610:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2621:7:3",
														"nodeType": "YulTypedName",
														"src": "2621:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2633:6:3",
														"nodeType": "YulTypedName",
														"src": "2633:6:3",
														"type": ""
													}
												],
												"src": "2574:329:3"
											},
											{
												"body": {
													"nativeSrc": "3005:73:3",
													"nodeType": "YulBlock",
													"src": "3005:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3022:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3022:3:3"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3027:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "3027:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3015:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3015:6:3"
																},
																"nativeSrc": "3015:19:3",
																"nodeType": "YulFunctionCall",
																"src": "3015:19:3"
															},
															"nativeSrc": "3015:19:3",
															"nodeType": "YulExpressionStatement",
															"src": "3015:19:3"
														},
														{
															"nativeSrc": "3043:29:3",
															"nodeType": "YulAssignment",
															"src": "3043:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3062:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3062:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3067:4:3",
																		"nodeType": "YulLiteral",
																		"src": "3067:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3058:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3058:3:3"
																},
																"nativeSrc": "3058:14:3",
																"nodeType": "YulFunctionCall",
																"src": "3058:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "3043:11:3",
																	"nodeType": "YulIdentifier",
																	"src": "3043:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "2909:169:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2977:3:3",
														"nodeType": "YulTypedName",
														"src": "2977:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2982:6:3",
														"nodeType": "YulTypedName",
														"src": "2982:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "2993:11:3",
														"nodeType": "YulTypedName",
														"src": "2993:11:3",
														"type": ""
													}
												],
												"src": "2909:169:3"
											},
											{
												"body": {
													"nativeSrc": "3190:60:3",
													"nodeType": "YulBlock",
													"src": "3190:60:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3212:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "3212:6:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3220:1:3",
																				"nodeType": "YulLiteral",
																				"src": "3220:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3208:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3208:3:3"
																		},
																		"nativeSrc": "3208:14:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3208:14:3"
																	},
																	{
																		"hexValue": "4e6f207374616b656420616d6f756e74",
																		"kind": "string",
																		"nativeSrc": "3224:18:3",
																		"nodeType": "YulLiteral",
																		"src": "3224:18:3",
																		"type": "",
																		"value": "No staked amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3201:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3201:6:3"
																},
																"nativeSrc": "3201:42:3",
																"nodeType": "YulFunctionCall",
																"src": "3201:42:3"
															},
															"nativeSrc": "3201:42:3",
															"nodeType": "YulExpressionStatement",
															"src": "3201:42:3"
														}
													]
												},
												"name": "store_literal_in_memory_e731ba893c68928f02781756791066f23259e50b4884778db05599c2eb032f36",
												"nativeSrc": "3084:166:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3182:6:3",
														"nodeType": "YulTypedName",
														"src": "3182:6:3",
														"type": ""
													}
												],
												"src": "3084:166:3"
											},
											{
												"body": {
													"nativeSrc": "3402:220:3",
													"nodeType": "YulBlock",
													"src": "3402:220:3",
													"statements": [
														{
															"nativeSrc": "3412:74:3",
															"nodeType": "YulAssignment",
															"src": "3412:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3478:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3478:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3483:2:3",
																		"nodeType": "YulLiteral",
																		"src": "3483:2:3",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3419:58:3",
																	"nodeType": "YulIdentifier",
																	"src": "3419:58:3"
																},
																"nativeSrc": "3419:67:3",
																"nodeType": "YulFunctionCall",
																"src": "3419:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3412:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3412:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3584:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3584:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e731ba893c68928f02781756791066f23259e50b4884778db05599c2eb032f36",
																	"nativeSrc": "3495:88:3",
																	"nodeType": "YulIdentifier",
																	"src": "3495:88:3"
																},
																"nativeSrc": "3495:93:3",
																"nodeType": "YulFunctionCall",
																"src": "3495:93:3"
															},
															"nativeSrc": "3495:93:3",
															"nodeType": "YulExpressionStatement",
															"src": "3495:93:3"
														},
														{
															"nativeSrc": "3597:19:3",
															"nodeType": "YulAssignment",
															"src": "3597:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3608:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3608:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3613:2:3",
																		"nodeType": "YulLiteral",
																		"src": "3613:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3604:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3604:3:3"
																},
																"nativeSrc": "3604:12:3",
																"nodeType": "YulFunctionCall",
																"src": "3604:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3597:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3597:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e731ba893c68928f02781756791066f23259e50b4884778db05599c2eb032f36_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3256:366:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3390:3:3",
														"nodeType": "YulTypedName",
														"src": "3390:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3398:3:3",
														"nodeType": "YulTypedName",
														"src": "3398:3:3",
														"type": ""
													}
												],
												"src": "3256:366:3"
											},
											{
												"body": {
													"nativeSrc": "3799:248:3",
													"nodeType": "YulBlock",
													"src": "3799:248:3",
													"statements": [
														{
															"nativeSrc": "3809:26:3",
															"nodeType": "YulAssignment",
															"src": "3809:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3821:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "3821:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3832:2:3",
																		"nodeType": "YulLiteral",
																		"src": "3832:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3817:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3817:3:3"
																},
																"nativeSrc": "3817:18:3",
																"nodeType": "YulFunctionCall",
																"src": "3817:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3809:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "3809:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3856:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "3856:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3867:1:3",
																				"nodeType": "YulLiteral",
																				"src": "3867:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3852:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3852:3:3"
																		},
																		"nativeSrc": "3852:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3852:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "3875:4:3",
																				"nodeType": "YulIdentifier",
																				"src": "3875:4:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3881:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "3881:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3871:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3871:3:3"
																		},
																		"nativeSrc": "3871:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3871:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3845:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3845:6:3"
																},
																"nativeSrc": "3845:47:3",
																"nodeType": "YulFunctionCall",
																"src": "3845:47:3"
															},
															"nativeSrc": "3845:47:3",
															"nodeType": "YulExpressionStatement",
															"src": "3845:47:3"
														},
														{
															"nativeSrc": "3901:139:3",
															"nodeType": "YulAssignment",
															"src": "3901:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "4035:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "4035:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e731ba893c68928f02781756791066f23259e50b4884778db05599c2eb032f36_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3909:124:3",
																	"nodeType": "YulIdentifier",
																	"src": "3909:124:3"
																},
																"nativeSrc": "3909:131:3",
																"nodeType": "YulFunctionCall",
																"src": "3909:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3901:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "3901:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e731ba893c68928f02781756791066f23259e50b4884778db05599c2eb032f36__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3628:419:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3779:9:3",
														"nodeType": "YulTypedName",
														"src": "3779:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3794:4:3",
														"nodeType": "YulTypedName",
														"src": "3794:4:3",
														"type": ""
													}
												],
												"src": "3628:419:3"
											},
											{
												"body": {
													"nativeSrc": "4159:71:3",
													"nodeType": "YulBlock",
													"src": "4159:71:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4181:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "4181:6:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4189:1:3",
																				"nodeType": "YulLiteral",
																				"src": "4189:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4177:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "4177:3:3"
																		},
																		"nativeSrc": "4177:14:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4177:14:3"
																	},
																	{
																		"hexValue": "5374616b696e6720706572696f64206e6f74206f76657220796574",
																		"kind": "string",
																		"nativeSrc": "4193:29:3",
																		"nodeType": "YulLiteral",
																		"src": "4193:29:3",
																		"type": "",
																		"value": "Staking period not over yet"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4170:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4170:6:3"
																},
																"nativeSrc": "4170:53:3",
																"nodeType": "YulFunctionCall",
																"src": "4170:53:3"
															},
															"nativeSrc": "4170:53:3",
															"nodeType": "YulExpressionStatement",
															"src": "4170:53:3"
														}
													]
												},
												"name": "store_literal_in_memory_1e09d4dedd886667ac7eac43a75f5b8a9137d9605bcdd673e19a127b1e9cc6a0",
												"nativeSrc": "4053:177:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4151:6:3",
														"nodeType": "YulTypedName",
														"src": "4151:6:3",
														"type": ""
													}
												],
												"src": "4053:177:3"
											},
											{
												"body": {
													"nativeSrc": "4382:220:3",
													"nodeType": "YulBlock",
													"src": "4382:220:3",
													"statements": [
														{
															"nativeSrc": "4392:74:3",
															"nodeType": "YulAssignment",
															"src": "4392:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4458:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "4458:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4463:2:3",
																		"nodeType": "YulLiteral",
																		"src": "4463:2:3",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4399:58:3",
																	"nodeType": "YulIdentifier",
																	"src": "4399:58:3"
																},
																"nativeSrc": "4399:67:3",
																"nodeType": "YulFunctionCall",
																"src": "4399:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4392:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4392:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4564:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "4564:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1e09d4dedd886667ac7eac43a75f5b8a9137d9605bcdd673e19a127b1e9cc6a0",
																	"nativeSrc": "4475:88:3",
																	"nodeType": "YulIdentifier",
																	"src": "4475:88:3"
																},
																"nativeSrc": "4475:93:3",
																"nodeType": "YulFunctionCall",
																"src": "4475:93:3"
															},
															"nativeSrc": "4475:93:3",
															"nodeType": "YulExpressionStatement",
															"src": "4475:93:3"
														},
														{
															"nativeSrc": "4577:19:3",
															"nodeType": "YulAssignment",
															"src": "4577:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4588:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "4588:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4593:2:3",
																		"nodeType": "YulLiteral",
																		"src": "4593:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4584:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4584:3:3"
																},
																"nativeSrc": "4584:12:3",
																"nodeType": "YulFunctionCall",
																"src": "4584:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4577:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4577:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1e09d4dedd886667ac7eac43a75f5b8a9137d9605bcdd673e19a127b1e9cc6a0_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4236:366:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4370:3:3",
														"nodeType": "YulTypedName",
														"src": "4370:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4378:3:3",
														"nodeType": "YulTypedName",
														"src": "4378:3:3",
														"type": ""
													}
												],
												"src": "4236:366:3"
											},
											{
												"body": {
													"nativeSrc": "4779:248:3",
													"nodeType": "YulBlock",
													"src": "4779:248:3",
													"statements": [
														{
															"nativeSrc": "4789:26:3",
															"nodeType": "YulAssignment",
															"src": "4789:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4801:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "4801:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4812:2:3",
																		"nodeType": "YulLiteral",
																		"src": "4812:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4797:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4797:3:3"
																},
																"nativeSrc": "4797:18:3",
																"nodeType": "YulFunctionCall",
																"src": "4797:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4789:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "4789:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4836:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "4836:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4847:1:3",
																				"nodeType": "YulLiteral",
																				"src": "4847:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4832:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "4832:3:3"
																		},
																		"nativeSrc": "4832:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4832:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4855:4:3",
																				"nodeType": "YulIdentifier",
																				"src": "4855:4:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4861:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "4861:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4851:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "4851:3:3"
																		},
																		"nativeSrc": "4851:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4851:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4825:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4825:6:3"
																},
																"nativeSrc": "4825:47:3",
																"nodeType": "YulFunctionCall",
																"src": "4825:47:3"
															},
															"nativeSrc": "4825:47:3",
															"nodeType": "YulExpressionStatement",
															"src": "4825:47:3"
														},
														{
															"nativeSrc": "4881:139:3",
															"nodeType": "YulAssignment",
															"src": "4881:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "5015:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "5015:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1e09d4dedd886667ac7eac43a75f5b8a9137d9605bcdd673e19a127b1e9cc6a0_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4889:124:3",
																	"nodeType": "YulIdentifier",
																	"src": "4889:124:3"
																},
																"nativeSrc": "4889:131:3",
																"nodeType": "YulFunctionCall",
																"src": "4889:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4881:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "4881:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1e09d4dedd886667ac7eac43a75f5b8a9137d9605bcdd673e19a127b1e9cc6a0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4608:419:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4759:9:3",
														"nodeType": "YulTypedName",
														"src": "4759:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4774:4:3",
														"nodeType": "YulTypedName",
														"src": "4774:4:3",
														"type": ""
													}
												],
												"src": "4608:419:3"
											},
											{
												"body": {
													"nativeSrc": "5159:206:3",
													"nodeType": "YulBlock",
													"src": "5159:206:3",
													"statements": [
														{
															"nativeSrc": "5169:26:3",
															"nodeType": "YulAssignment",
															"src": "5169:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5181:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "5181:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5192:2:3",
																		"nodeType": "YulLiteral",
																		"src": "5192:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5177:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "5177:3:3"
																},
																"nativeSrc": "5177:18:3",
																"nodeType": "YulFunctionCall",
																"src": "5177:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5169:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "5169:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5249:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "5249:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5262:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "5262:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5273:1:3",
																				"nodeType": "YulLiteral",
																				"src": "5273:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5258:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "5258:3:3"
																		},
																		"nativeSrc": "5258:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5258:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5205:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "5205:43:3"
																},
																"nativeSrc": "5205:71:3",
																"nodeType": "YulFunctionCall",
																"src": "5205:71:3"
															},
															"nativeSrc": "5205:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "5205:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "5330:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "5330:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5343:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "5343:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5354:2:3",
																				"nodeType": "YulLiteral",
																				"src": "5354:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5339:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "5339:3:3"
																		},
																		"nativeSrc": "5339:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5339:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5286:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "5286:43:3"
																},
																"nativeSrc": "5286:72:3",
																"nodeType": "YulFunctionCall",
																"src": "5286:72:3"
															},
															"nativeSrc": "5286:72:3",
															"nodeType": "YulExpressionStatement",
															"src": "5286:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "5033:332:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5123:9:3",
														"nodeType": "YulTypedName",
														"src": "5123:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5135:6:3",
														"nodeType": "YulTypedName",
														"src": "5135:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5143:6:3",
														"nodeType": "YulTypedName",
														"src": "5143:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5154:4:3",
														"nodeType": "YulTypedName",
														"src": "5154:4:3",
														"type": ""
													}
												],
												"src": "5033:332:3"
											},
											{
												"body": {
													"nativeSrc": "5413:48:3",
													"nodeType": "YulBlock",
													"src": "5413:48:3",
													"statements": [
														{
															"nativeSrc": "5423:32:3",
															"nodeType": "YulAssignment",
															"src": "5423:32:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5448:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "5448:5:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "5441:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "5441:6:3"
																		},
																		"nativeSrc": "5441:13:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5441:13:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5434:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5434:6:3"
																},
																"nativeSrc": "5434:21:3",
																"nodeType": "YulFunctionCall",
																"src": "5434:21:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5423:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "5423:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "5371:90:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5395:5:3",
														"nodeType": "YulTypedName",
														"src": "5395:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5405:7:3",
														"nodeType": "YulTypedName",
														"src": "5405:7:3",
														"type": ""
													}
												],
												"src": "5371:90:3"
											},
											{
												"body": {
													"nativeSrc": "5507:76:3",
													"nodeType": "YulBlock",
													"src": "5507:76:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "5561:16:3",
																"nodeType": "YulBlock",
																"src": "5561:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5570:1:3",
																					"nodeType": "YulLiteral",
																					"src": "5570:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5573:1:3",
																					"nodeType": "YulLiteral",
																					"src": "5573:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5563:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "5563:6:3"
																			},
																			"nativeSrc": "5563:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "5563:12:3"
																		},
																		"nativeSrc": "5563:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "5563:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5530:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "5530:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5552:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "5552:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "5537:14:3",
																					"nodeType": "YulIdentifier",
																					"src": "5537:14:3"
																				},
																				"nativeSrc": "5537:21:3",
																				"nodeType": "YulFunctionCall",
																				"src": "5537:21:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5527:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "5527:2:3"
																		},
																		"nativeSrc": "5527:32:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5527:32:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5520:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5520:6:3"
																},
																"nativeSrc": "5520:40:3",
																"nodeType": "YulFunctionCall",
																"src": "5520:40:3"
															},
															"nativeSrc": "5517:60:3",
															"nodeType": "YulIf",
															"src": "5517:60:3"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "5467:116:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5500:5:3",
														"nodeType": "YulTypedName",
														"src": "5500:5:3",
														"type": ""
													}
												],
												"src": "5467:116:3"
											},
											{
												"body": {
													"nativeSrc": "5649:77:3",
													"nodeType": "YulBlock",
													"src": "5649:77:3",
													"statements": [
														{
															"nativeSrc": "5659:22:3",
															"nodeType": "YulAssignment",
															"src": "5659:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5674:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "5674:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5668:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "5668:5:3"
																},
																"nativeSrc": "5668:13:3",
																"nodeType": "YulFunctionCall",
																"src": "5668:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5659:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "5659:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5714:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "5714:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "5690:23:3",
																	"nodeType": "YulIdentifier",
																	"src": "5690:23:3"
																},
																"nativeSrc": "5690:30:3",
																"nodeType": "YulFunctionCall",
																"src": "5690:30:3"
															},
															"nativeSrc": "5690:30:3",
															"nodeType": "YulExpressionStatement",
															"src": "5690:30:3"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "5589:137:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5627:6:3",
														"nodeType": "YulTypedName",
														"src": "5627:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5635:3:3",
														"nodeType": "YulTypedName",
														"src": "5635:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5643:5:3",
														"nodeType": "YulTypedName",
														"src": "5643:5:3",
														"type": ""
													}
												],
												"src": "5589:137:3"
											},
											{
												"body": {
													"nativeSrc": "5806:271:3",
													"nodeType": "YulBlock",
													"src": "5806:271:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "5852:83:3",
																"nodeType": "YulBlock",
																"src": "5852:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5854:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "5854:77:3"
																			},
																			"nativeSrc": "5854:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "5854:79:3"
																		},
																		"nativeSrc": "5854:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "5854:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5827:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "5827:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5836:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "5836:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5823:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "5823:3:3"
																		},
																		"nativeSrc": "5823:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5823:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5848:2:3",
																		"nodeType": "YulLiteral",
																		"src": "5848:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5819:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "5819:3:3"
																},
																"nativeSrc": "5819:32:3",
																"nodeType": "YulFunctionCall",
																"src": "5819:32:3"
															},
															"nativeSrc": "5816:119:3",
															"nodeType": "YulIf",
															"src": "5816:119:3"
														},
														{
															"nativeSrc": "5945:125:3",
															"nodeType": "YulBlock",
															"src": "5945:125:3",
															"statements": [
																{
																	"nativeSrc": "5960:15:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5960:15:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5974:1:3",
																		"nodeType": "YulLiteral",
																		"src": "5974:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5964:6:3",
																			"nodeType": "YulTypedName",
																			"src": "5964:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5989:71:3",
																	"nodeType": "YulAssignment",
																	"src": "5989:71:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6032:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "6032:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6043:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "6043:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6028:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "6028:3:3"
																				},
																				"nativeSrc": "6028:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "6028:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6052:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "6052:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "5999:28:3",
																			"nodeType": "YulIdentifier",
																			"src": "5999:28:3"
																		},
																		"nativeSrc": "5999:61:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5999:61:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5989:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "5989:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "5732:345:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5776:9:3",
														"nodeType": "YulTypedName",
														"src": "5776:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5787:7:3",
														"nodeType": "YulTypedName",
														"src": "5787:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5799:6:3",
														"nodeType": "YulTypedName",
														"src": "5799:6:3",
														"type": ""
													}
												],
												"src": "5732:345:3"
											},
											{
												"body": {
													"nativeSrc": "6146:80:3",
													"nodeType": "YulBlock",
													"src": "6146:80:3",
													"statements": [
														{
															"nativeSrc": "6156:22:3",
															"nodeType": "YulAssignment",
															"src": "6156:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6171:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "6171:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6165:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "6165:5:3"
																},
																"nativeSrc": "6165:13:3",
																"nodeType": "YulFunctionCall",
																"src": "6165:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6156:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "6156:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6214:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "6214:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "6187:26:3",
																	"nodeType": "YulIdentifier",
																	"src": "6187:26:3"
																},
																"nativeSrc": "6187:33:3",
																"nodeType": "YulFunctionCall",
																"src": "6187:33:3"
															},
															"nativeSrc": "6187:33:3",
															"nodeType": "YulExpressionStatement",
															"src": "6187:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "6083:143:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6124:6:3",
														"nodeType": "YulTypedName",
														"src": "6124:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6132:3:3",
														"nodeType": "YulTypedName",
														"src": "6132:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6140:5:3",
														"nodeType": "YulTypedName",
														"src": "6140:5:3",
														"type": ""
													}
												],
												"src": "6083:143:3"
											},
											{
												"body": {
													"nativeSrc": "6309:274:3",
													"nodeType": "YulBlock",
													"src": "6309:274:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "6355:83:3",
																"nodeType": "YulBlock",
																"src": "6355:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6357:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "6357:77:3"
																			},
																			"nativeSrc": "6357:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "6357:79:3"
																		},
																		"nativeSrc": "6357:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "6357:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6330:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "6330:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6339:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "6339:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6326:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "6326:3:3"
																		},
																		"nativeSrc": "6326:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "6326:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6351:2:3",
																		"nodeType": "YulLiteral",
																		"src": "6351:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6322:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "6322:3:3"
																},
																"nativeSrc": "6322:32:3",
																"nodeType": "YulFunctionCall",
																"src": "6322:32:3"
															},
															"nativeSrc": "6319:119:3",
															"nodeType": "YulIf",
															"src": "6319:119:3"
														},
														{
															"nativeSrc": "6448:128:3",
															"nodeType": "YulBlock",
															"src": "6448:128:3",
															"statements": [
																{
																	"nativeSrc": "6463:15:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6463:15:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6477:1:3",
																		"nodeType": "YulLiteral",
																		"src": "6477:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6467:6:3",
																			"nodeType": "YulTypedName",
																			"src": "6467:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6492:74:3",
																	"nodeType": "YulAssignment",
																	"src": "6492:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6538:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "6538:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6549:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "6549:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6534:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "6534:3:3"
																				},
																				"nativeSrc": "6534:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "6534:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6558:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "6558:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "6502:31:3",
																			"nodeType": "YulIdentifier",
																			"src": "6502:31:3"
																		},
																		"nativeSrc": "6502:64:3",
																		"nodeType": "YulFunctionCall",
																		"src": "6502:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6492:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "6492:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "6232:351:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6279:9:3",
														"nodeType": "YulTypedName",
														"src": "6279:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6290:7:3",
														"nodeType": "YulTypedName",
														"src": "6290:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6302:6:3",
														"nodeType": "YulTypedName",
														"src": "6302:6:3",
														"type": ""
													}
												],
												"src": "6232:351:3"
											},
											{
												"body": {
													"nativeSrc": "6695:65:3",
													"nodeType": "YulBlock",
													"src": "6695:65:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6717:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "6717:6:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6725:1:3",
																				"nodeType": "YulLiteral",
																				"src": "6725:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6713:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "6713:3:3"
																		},
																		"nativeSrc": "6713:14:3",
																		"nodeType": "YulFunctionCall",
																		"src": "6713:14:3"
																	},
																	{
																		"hexValue": "41646472657373207a65726f206465746563746564",
																		"kind": "string",
																		"nativeSrc": "6729:23:3",
																		"nodeType": "YulLiteral",
																		"src": "6729:23:3",
																		"type": "",
																		"value": "Address zero detected"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6706:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "6706:6:3"
																},
																"nativeSrc": "6706:47:3",
																"nodeType": "YulFunctionCall",
																"src": "6706:47:3"
															},
															"nativeSrc": "6706:47:3",
															"nodeType": "YulExpressionStatement",
															"src": "6706:47:3"
														}
													]
												},
												"name": "store_literal_in_memory_0c522cb2a1af44930a7426d8b6b6dcdc56d85666de7235537f48c5753d7a529a",
												"nativeSrc": "6589:171:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6687:6:3",
														"nodeType": "YulTypedName",
														"src": "6687:6:3",
														"type": ""
													}
												],
												"src": "6589:171:3"
											},
											{
												"body": {
													"nativeSrc": "6912:220:3",
													"nodeType": "YulBlock",
													"src": "6912:220:3",
													"statements": [
														{
															"nativeSrc": "6922:74:3",
															"nodeType": "YulAssignment",
															"src": "6922:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6988:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "6988:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6993:2:3",
																		"nodeType": "YulLiteral",
																		"src": "6993:2:3",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6929:58:3",
																	"nodeType": "YulIdentifier",
																	"src": "6929:58:3"
																},
																"nativeSrc": "6929:67:3",
																"nodeType": "YulFunctionCall",
																"src": "6929:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6922:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "6922:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7094:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "7094:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0c522cb2a1af44930a7426d8b6b6dcdc56d85666de7235537f48c5753d7a529a",
																	"nativeSrc": "7005:88:3",
																	"nodeType": "YulIdentifier",
																	"src": "7005:88:3"
																},
																"nativeSrc": "7005:93:3",
																"nodeType": "YulFunctionCall",
																"src": "7005:93:3"
															},
															"nativeSrc": "7005:93:3",
															"nodeType": "YulExpressionStatement",
															"src": "7005:93:3"
														},
														{
															"nativeSrc": "7107:19:3",
															"nodeType": "YulAssignment",
															"src": "7107:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7118:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "7118:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7123:2:3",
																		"nodeType": "YulLiteral",
																		"src": "7123:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7114:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "7114:3:3"
																},
																"nativeSrc": "7114:12:3",
																"nodeType": "YulFunctionCall",
																"src": "7114:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7107:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "7107:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0c522cb2a1af44930a7426d8b6b6dcdc56d85666de7235537f48c5753d7a529a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6766:366:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6900:3:3",
														"nodeType": "YulTypedName",
														"src": "6900:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6908:3:3",
														"nodeType": "YulTypedName",
														"src": "6908:3:3",
														"type": ""
													}
												],
												"src": "6766:366:3"
											},
											{
												"body": {
													"nativeSrc": "7309:248:3",
													"nodeType": "YulBlock",
													"src": "7309:248:3",
													"statements": [
														{
															"nativeSrc": "7319:26:3",
															"nodeType": "YulAssignment",
															"src": "7319:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7331:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "7331:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7342:2:3",
																		"nodeType": "YulLiteral",
																		"src": "7342:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7327:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "7327:3:3"
																},
																"nativeSrc": "7327:18:3",
																"nodeType": "YulFunctionCall",
																"src": "7327:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7319:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "7319:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7366:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "7366:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7377:1:3",
																				"nodeType": "YulLiteral",
																				"src": "7377:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7362:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "7362:3:3"
																		},
																		"nativeSrc": "7362:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "7362:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7385:4:3",
																				"nodeType": "YulIdentifier",
																				"src": "7385:4:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7391:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "7391:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7381:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "7381:3:3"
																		},
																		"nativeSrc": "7381:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "7381:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7355:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "7355:6:3"
																},
																"nativeSrc": "7355:47:3",
																"nodeType": "YulFunctionCall",
																"src": "7355:47:3"
															},
															"nativeSrc": "7355:47:3",
															"nodeType": "YulExpressionStatement",
															"src": "7355:47:3"
														},
														{
															"nativeSrc": "7411:139:3",
															"nodeType": "YulAssignment",
															"src": "7411:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7545:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "7545:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0c522cb2a1af44930a7426d8b6b6dcdc56d85666de7235537f48c5753d7a529a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7419:124:3",
																	"nodeType": "YulIdentifier",
																	"src": "7419:124:3"
																},
																"nativeSrc": "7419:131:3",
																"nodeType": "YulFunctionCall",
																"src": "7419:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7411:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "7411:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0c522cb2a1af44930a7426d8b6b6dcdc56d85666de7235537f48c5753d7a529a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7138:419:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7289:9:3",
														"nodeType": "YulTypedName",
														"src": "7289:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7304:4:3",
														"nodeType": "YulTypedName",
														"src": "7304:4:3",
														"type": ""
													}
												],
												"src": "7138:419:3"
											},
											{
												"body": {
													"nativeSrc": "7669:66:3",
													"nodeType": "YulBlock",
													"src": "7669:66:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7691:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "7691:6:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7699:1:3",
																				"nodeType": "YulLiteral",
																				"src": "7699:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7687:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "7687:3:3"
																		},
																		"nativeSrc": "7687:14:3",
																		"nodeType": "YulFunctionCall",
																		"src": "7687:14:3"
																	},
																	{
																		"hexValue": "43616e2774207374616b65206e756c6c2076616c7565",
																		"kind": "string",
																		"nativeSrc": "7703:24:3",
																		"nodeType": "YulLiteral",
																		"src": "7703:24:3",
																		"type": "",
																		"value": "Can't stake null value"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7680:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "7680:6:3"
																},
																"nativeSrc": "7680:48:3",
																"nodeType": "YulFunctionCall",
																"src": "7680:48:3"
															},
															"nativeSrc": "7680:48:3",
															"nodeType": "YulExpressionStatement",
															"src": "7680:48:3"
														}
													]
												},
												"name": "store_literal_in_memory_b123eca9829844b661c01ef55268688eca28a9866f8c3021d17497c8d41dc63a",
												"nativeSrc": "7563:172:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7661:6:3",
														"nodeType": "YulTypedName",
														"src": "7661:6:3",
														"type": ""
													}
												],
												"src": "7563:172:3"
											},
											{
												"body": {
													"nativeSrc": "7887:220:3",
													"nodeType": "YulBlock",
													"src": "7887:220:3",
													"statements": [
														{
															"nativeSrc": "7897:74:3",
															"nodeType": "YulAssignment",
															"src": "7897:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7963:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "7963:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7968:2:3",
																		"nodeType": "YulLiteral",
																		"src": "7968:2:3",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7904:58:3",
																	"nodeType": "YulIdentifier",
																	"src": "7904:58:3"
																},
																"nativeSrc": "7904:67:3",
																"nodeType": "YulFunctionCall",
																"src": "7904:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7897:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "7897:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8069:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "8069:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b123eca9829844b661c01ef55268688eca28a9866f8c3021d17497c8d41dc63a",
																	"nativeSrc": "7980:88:3",
																	"nodeType": "YulIdentifier",
																	"src": "7980:88:3"
																},
																"nativeSrc": "7980:93:3",
																"nodeType": "YulFunctionCall",
																"src": "7980:93:3"
															},
															"nativeSrc": "7980:93:3",
															"nodeType": "YulExpressionStatement",
															"src": "7980:93:3"
														},
														{
															"nativeSrc": "8082:19:3",
															"nodeType": "YulAssignment",
															"src": "8082:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8093:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "8093:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8098:2:3",
																		"nodeType": "YulLiteral",
																		"src": "8098:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8089:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "8089:3:3"
																},
																"nativeSrc": "8089:12:3",
																"nodeType": "YulFunctionCall",
																"src": "8089:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8082:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "8082:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b123eca9829844b661c01ef55268688eca28a9866f8c3021d17497c8d41dc63a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7741:366:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7875:3:3",
														"nodeType": "YulTypedName",
														"src": "7875:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7883:3:3",
														"nodeType": "YulTypedName",
														"src": "7883:3:3",
														"type": ""
													}
												],
												"src": "7741:366:3"
											},
											{
												"body": {
													"nativeSrc": "8284:248:3",
													"nodeType": "YulBlock",
													"src": "8284:248:3",
													"statements": [
														{
															"nativeSrc": "8294:26:3",
															"nodeType": "YulAssignment",
															"src": "8294:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8306:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "8306:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8317:2:3",
																		"nodeType": "YulLiteral",
																		"src": "8317:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8302:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "8302:3:3"
																},
																"nativeSrc": "8302:18:3",
																"nodeType": "YulFunctionCall",
																"src": "8302:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8294:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "8294:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8341:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "8341:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8352:1:3",
																				"nodeType": "YulLiteral",
																				"src": "8352:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8337:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "8337:3:3"
																		},
																		"nativeSrc": "8337:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "8337:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8360:4:3",
																				"nodeType": "YulIdentifier",
																				"src": "8360:4:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8366:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "8366:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8356:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "8356:3:3"
																		},
																		"nativeSrc": "8356:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "8356:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8330:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "8330:6:3"
																},
																"nativeSrc": "8330:47:3",
																"nodeType": "YulFunctionCall",
																"src": "8330:47:3"
															},
															"nativeSrc": "8330:47:3",
															"nodeType": "YulExpressionStatement",
															"src": "8330:47:3"
														},
														{
															"nativeSrc": "8386:139:3",
															"nodeType": "YulAssignment",
															"src": "8386:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8520:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "8520:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b123eca9829844b661c01ef55268688eca28a9866f8c3021d17497c8d41dc63a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8394:124:3",
																	"nodeType": "YulIdentifier",
																	"src": "8394:124:3"
																},
																"nativeSrc": "8394:131:3",
																"nodeType": "YulFunctionCall",
																"src": "8394:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8386:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "8386:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b123eca9829844b661c01ef55268688eca28a9866f8c3021d17497c8d41dc63a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8113:419:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8264:9:3",
														"nodeType": "YulTypedName",
														"src": "8264:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8279:4:3",
														"nodeType": "YulTypedName",
														"src": "8279:4:3",
														"type": ""
													}
												],
												"src": "8113:419:3"
											},
											{
												"body": {
													"nativeSrc": "8644:62:3",
													"nodeType": "YulBlock",
													"src": "8644:62:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8666:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "8666:6:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8674:1:3",
																				"nodeType": "YulLiteral",
																				"src": "8674:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8662:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "8662:3:3"
																		},
																		"nativeSrc": "8662:14:3",
																		"nodeType": "YulFunctionCall",
																		"src": "8662:14:3"
																	},
																	{
																		"hexValue": "496e73756666696369656e742066756e6473",
																		"kind": "string",
																		"nativeSrc": "8678:20:3",
																		"nodeType": "YulLiteral",
																		"src": "8678:20:3",
																		"type": "",
																		"value": "Insufficient funds"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8655:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "8655:6:3"
																},
																"nativeSrc": "8655:44:3",
																"nodeType": "YulFunctionCall",
																"src": "8655:44:3"
															},
															"nativeSrc": "8655:44:3",
															"nodeType": "YulExpressionStatement",
															"src": "8655:44:3"
														}
													]
												},
												"name": "store_literal_in_memory_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d",
												"nativeSrc": "8538:168:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8636:6:3",
														"nodeType": "YulTypedName",
														"src": "8636:6:3",
														"type": ""
													}
												],
												"src": "8538:168:3"
											},
											{
												"body": {
													"nativeSrc": "8858:220:3",
													"nodeType": "YulBlock",
													"src": "8858:220:3",
													"statements": [
														{
															"nativeSrc": "8868:74:3",
															"nodeType": "YulAssignment",
															"src": "8868:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8934:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "8934:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8939:2:3",
																		"nodeType": "YulLiteral",
																		"src": "8939:2:3",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8875:58:3",
																	"nodeType": "YulIdentifier",
																	"src": "8875:58:3"
																},
																"nativeSrc": "8875:67:3",
																"nodeType": "YulFunctionCall",
																"src": "8875:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8868:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "8868:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9040:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "9040:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d",
																	"nativeSrc": "8951:88:3",
																	"nodeType": "YulIdentifier",
																	"src": "8951:88:3"
																},
																"nativeSrc": "8951:93:3",
																"nodeType": "YulFunctionCall",
																"src": "8951:93:3"
															},
															"nativeSrc": "8951:93:3",
															"nodeType": "YulExpressionStatement",
															"src": "8951:93:3"
														},
														{
															"nativeSrc": "9053:19:3",
															"nodeType": "YulAssignment",
															"src": "9053:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9064:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "9064:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9069:2:3",
																		"nodeType": "YulLiteral",
																		"src": "9069:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9060:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "9060:3:3"
																},
																"nativeSrc": "9060:12:3",
																"nodeType": "YulFunctionCall",
																"src": "9060:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9053:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "9053:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8712:366:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8846:3:3",
														"nodeType": "YulTypedName",
														"src": "8846:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8854:3:3",
														"nodeType": "YulTypedName",
														"src": "8854:3:3",
														"type": ""
													}
												],
												"src": "8712:366:3"
											},
											{
												"body": {
													"nativeSrc": "9255:248:3",
													"nodeType": "YulBlock",
													"src": "9255:248:3",
													"statements": [
														{
															"nativeSrc": "9265:26:3",
															"nodeType": "YulAssignment",
															"src": "9265:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9277:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "9277:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9288:2:3",
																		"nodeType": "YulLiteral",
																		"src": "9288:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9273:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "9273:3:3"
																},
																"nativeSrc": "9273:18:3",
																"nodeType": "YulFunctionCall",
																"src": "9273:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9265:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "9265:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9312:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "9312:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9323:1:3",
																				"nodeType": "YulLiteral",
																				"src": "9323:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9308:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "9308:3:3"
																		},
																		"nativeSrc": "9308:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "9308:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9331:4:3",
																				"nodeType": "YulIdentifier",
																				"src": "9331:4:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9337:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "9337:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9327:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "9327:3:3"
																		},
																		"nativeSrc": "9327:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "9327:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9301:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "9301:6:3"
																},
																"nativeSrc": "9301:47:3",
																"nodeType": "YulFunctionCall",
																"src": "9301:47:3"
															},
															"nativeSrc": "9301:47:3",
															"nodeType": "YulExpressionStatement",
															"src": "9301:47:3"
														},
														{
															"nativeSrc": "9357:139:3",
															"nodeType": "YulAssignment",
															"src": "9357:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9491:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "9491:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9365:124:3",
																	"nodeType": "YulIdentifier",
																	"src": "9365:124:3"
																},
																"nativeSrc": "9365:131:3",
																"nodeType": "YulFunctionCall",
																"src": "9365:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9357:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "9357:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9084:419:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9235:9:3",
														"nodeType": "YulTypedName",
														"src": "9235:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9250:4:3",
														"nodeType": "YulTypedName",
														"src": "9250:4:3",
														"type": ""
													}
												],
												"src": "9084:419:3"
											},
											{
												"body": {
													"nativeSrc": "9615:58:3",
													"nodeType": "YulBlock",
													"src": "9615:58:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9637:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "9637:6:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9645:1:3",
																				"nodeType": "YulLiteral",
																				"src": "9645:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9633:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "9633:3:3"
																		},
																		"nativeSrc": "9633:14:3",
																		"nodeType": "YulFunctionCall",
																		"src": "9633:14:3"
																	},
																	{
																		"hexValue": "416c7265616479207374616b6564",
																		"kind": "string",
																		"nativeSrc": "9649:16:3",
																		"nodeType": "YulLiteral",
																		"src": "9649:16:3",
																		"type": "",
																		"value": "Already staked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9626:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "9626:6:3"
																},
																"nativeSrc": "9626:40:3",
																"nodeType": "YulFunctionCall",
																"src": "9626:40:3"
															},
															"nativeSrc": "9626:40:3",
															"nodeType": "YulExpressionStatement",
															"src": "9626:40:3"
														}
													]
												},
												"name": "store_literal_in_memory_95b7b77e513d16b36a2faa03d539fb2a99e3aaf7b1d9ac931c129d674f579e04",
												"nativeSrc": "9509:164:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9607:6:3",
														"nodeType": "YulTypedName",
														"src": "9607:6:3",
														"type": ""
													}
												],
												"src": "9509:164:3"
											},
											{
												"body": {
													"nativeSrc": "9825:220:3",
													"nodeType": "YulBlock",
													"src": "9825:220:3",
													"statements": [
														{
															"nativeSrc": "9835:74:3",
															"nodeType": "YulAssignment",
															"src": "9835:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9901:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "9901:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9906:2:3",
																		"nodeType": "YulLiteral",
																		"src": "9906:2:3",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9842:58:3",
																	"nodeType": "YulIdentifier",
																	"src": "9842:58:3"
																},
																"nativeSrc": "9842:67:3",
																"nodeType": "YulFunctionCall",
																"src": "9842:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9835:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "9835:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10007:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "10007:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_95b7b77e513d16b36a2faa03d539fb2a99e3aaf7b1d9ac931c129d674f579e04",
																	"nativeSrc": "9918:88:3",
																	"nodeType": "YulIdentifier",
																	"src": "9918:88:3"
																},
																"nativeSrc": "9918:93:3",
																"nodeType": "YulFunctionCall",
																"src": "9918:93:3"
															},
															"nativeSrc": "9918:93:3",
															"nodeType": "YulExpressionStatement",
															"src": "9918:93:3"
														},
														{
															"nativeSrc": "10020:19:3",
															"nodeType": "YulAssignment",
															"src": "10020:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10031:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "10031:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10036:2:3",
																		"nodeType": "YulLiteral",
																		"src": "10036:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10027:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "10027:3:3"
																},
																"nativeSrc": "10027:12:3",
																"nodeType": "YulFunctionCall",
																"src": "10027:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10020:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "10020:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_95b7b77e513d16b36a2faa03d539fb2a99e3aaf7b1d9ac931c129d674f579e04_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9679:366:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9813:3:3",
														"nodeType": "YulTypedName",
														"src": "9813:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9821:3:3",
														"nodeType": "YulTypedName",
														"src": "9821:3:3",
														"type": ""
													}
												],
												"src": "9679:366:3"
											},
											{
												"body": {
													"nativeSrc": "10222:248:3",
													"nodeType": "YulBlock",
													"src": "10222:248:3",
													"statements": [
														{
															"nativeSrc": "10232:26:3",
															"nodeType": "YulAssignment",
															"src": "10232:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10244:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "10244:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10255:2:3",
																		"nodeType": "YulLiteral",
																		"src": "10255:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10240:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "10240:3:3"
																},
																"nativeSrc": "10240:18:3",
																"nodeType": "YulFunctionCall",
																"src": "10240:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10232:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "10232:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10279:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "10279:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10290:1:3",
																				"nodeType": "YulLiteral",
																				"src": "10290:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10275:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "10275:3:3"
																		},
																		"nativeSrc": "10275:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "10275:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10298:4:3",
																				"nodeType": "YulIdentifier",
																				"src": "10298:4:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10304:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "10304:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10294:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "10294:3:3"
																		},
																		"nativeSrc": "10294:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "10294:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10268:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "10268:6:3"
																},
																"nativeSrc": "10268:47:3",
																"nodeType": "YulFunctionCall",
																"src": "10268:47:3"
															},
															"nativeSrc": "10268:47:3",
															"nodeType": "YulExpressionStatement",
															"src": "10268:47:3"
														},
														{
															"nativeSrc": "10324:139:3",
															"nodeType": "YulAssignment",
															"src": "10324:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10458:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "10458:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_95b7b77e513d16b36a2faa03d539fb2a99e3aaf7b1d9ac931c129d674f579e04_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10332:124:3",
																	"nodeType": "YulIdentifier",
																	"src": "10332:124:3"
																},
																"nativeSrc": "10332:131:3",
																"nodeType": "YulFunctionCall",
																"src": "10332:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10324:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "10324:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_95b7b77e513d16b36a2faa03d539fb2a99e3aaf7b1d9ac931c129d674f579e04__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10051:419:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10202:9:3",
														"nodeType": "YulTypedName",
														"src": "10202:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10217:4:3",
														"nodeType": "YulTypedName",
														"src": "10217:4:3",
														"type": ""
													}
												],
												"src": "10051:419:3"
											},
											{
												"body": {
													"nativeSrc": "10630:288:3",
													"nodeType": "YulBlock",
													"src": "10630:288:3",
													"statements": [
														{
															"nativeSrc": "10640:26:3",
															"nodeType": "YulAssignment",
															"src": "10640:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10652:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "10652:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10663:2:3",
																		"nodeType": "YulLiteral",
																		"src": "10663:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10648:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "10648:3:3"
																},
																"nativeSrc": "10648:18:3",
																"nodeType": "YulFunctionCall",
																"src": "10648:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10640:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "10640:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10720:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "10720:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10733:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "10733:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10744:1:3",
																				"nodeType": "YulLiteral",
																				"src": "10744:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10729:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "10729:3:3"
																		},
																		"nativeSrc": "10729:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "10729:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10676:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "10676:43:3"
																},
																"nativeSrc": "10676:71:3",
																"nodeType": "YulFunctionCall",
																"src": "10676:71:3"
															},
															"nativeSrc": "10676:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "10676:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10801:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "10801:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10814:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "10814:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10825:2:3",
																				"nodeType": "YulLiteral",
																				"src": "10825:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10810:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "10810:3:3"
																		},
																		"nativeSrc": "10810:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "10810:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10757:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "10757:43:3"
																},
																"nativeSrc": "10757:72:3",
																"nodeType": "YulFunctionCall",
																"src": "10757:72:3"
															},
															"nativeSrc": "10757:72:3",
															"nodeType": "YulExpressionStatement",
															"src": "10757:72:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "10883:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "10883:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10896:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "10896:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10907:2:3",
																				"nodeType": "YulLiteral",
																				"src": "10907:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10892:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "10892:3:3"
																		},
																		"nativeSrc": "10892:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "10892:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10839:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "10839:43:3"
																},
																"nativeSrc": "10839:72:3",
																"nodeType": "YulFunctionCall",
																"src": "10839:72:3"
															},
															"nativeSrc": "10839:72:3",
															"nodeType": "YulExpressionStatement",
															"src": "10839:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "10476:442:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10586:9:3",
														"nodeType": "YulTypedName",
														"src": "10586:9:3",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10598:6:3",
														"nodeType": "YulTypedName",
														"src": "10598:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10606:6:3",
														"nodeType": "YulTypedName",
														"src": "10606:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10614:6:3",
														"nodeType": "YulTypedName",
														"src": "10614:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10625:4:3",
														"nodeType": "YulTypedName",
														"src": "10625:4:3",
														"type": ""
													}
												],
												"src": "10476:442:3"
											},
											{
												"body": {
													"nativeSrc": "11030:69:3",
													"nodeType": "YulBlock",
													"src": "11030:69:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11052:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "11052:6:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11060:1:3",
																				"nodeType": "YulLiteral",
																				"src": "11060:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11048:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "11048:3:3"
																		},
																		"nativeSrc": "11048:14:3",
																		"nodeType": "YulFunctionCall",
																		"src": "11048:14:3"
																	},
																	{
																		"hexValue": "47697665206974206261636b20746f20746865206f776e6572",
																		"kind": "string",
																		"nativeSrc": "11064:27:3",
																		"nodeType": "YulLiteral",
																		"src": "11064:27:3",
																		"type": "",
																		"value": "Give it back to the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11041:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "11041:6:3"
																},
																"nativeSrc": "11041:51:3",
																"nodeType": "YulFunctionCall",
																"src": "11041:51:3"
															},
															"nativeSrc": "11041:51:3",
															"nodeType": "YulExpressionStatement",
															"src": "11041:51:3"
														}
													]
												},
												"name": "store_literal_in_memory_3185032968986ab89d0ebf209c76042e88d4e5067b1e1e98d1a33558aa0144ac",
												"nativeSrc": "10924:175:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11022:6:3",
														"nodeType": "YulTypedName",
														"src": "11022:6:3",
														"type": ""
													}
												],
												"src": "10924:175:3"
											},
											{
												"body": {
													"nativeSrc": "11251:220:3",
													"nodeType": "YulBlock",
													"src": "11251:220:3",
													"statements": [
														{
															"nativeSrc": "11261:74:3",
															"nodeType": "YulAssignment",
															"src": "11261:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11327:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "11327:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11332:2:3",
																		"nodeType": "YulLiteral",
																		"src": "11332:2:3",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11268:58:3",
																	"nodeType": "YulIdentifier",
																	"src": "11268:58:3"
																},
																"nativeSrc": "11268:67:3",
																"nodeType": "YulFunctionCall",
																"src": "11268:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11261:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "11261:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11433:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "11433:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3185032968986ab89d0ebf209c76042e88d4e5067b1e1e98d1a33558aa0144ac",
																	"nativeSrc": "11344:88:3",
																	"nodeType": "YulIdentifier",
																	"src": "11344:88:3"
																},
																"nativeSrc": "11344:93:3",
																"nodeType": "YulFunctionCall",
																"src": "11344:93:3"
															},
															"nativeSrc": "11344:93:3",
															"nodeType": "YulExpressionStatement",
															"src": "11344:93:3"
														},
														{
															"nativeSrc": "11446:19:3",
															"nodeType": "YulAssignment",
															"src": "11446:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11457:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "11457:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11462:2:3",
																		"nodeType": "YulLiteral",
																		"src": "11462:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11453:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "11453:3:3"
																},
																"nativeSrc": "11453:12:3",
																"nodeType": "YulFunctionCall",
																"src": "11453:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11446:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "11446:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3185032968986ab89d0ebf209c76042e88d4e5067b1e1e98d1a33558aa0144ac_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11105:366:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11239:3:3",
														"nodeType": "YulTypedName",
														"src": "11239:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11247:3:3",
														"nodeType": "YulTypedName",
														"src": "11247:3:3",
														"type": ""
													}
												],
												"src": "11105:366:3"
											},
											{
												"body": {
													"nativeSrc": "11648:248:3",
													"nodeType": "YulBlock",
													"src": "11648:248:3",
													"statements": [
														{
															"nativeSrc": "11658:26:3",
															"nodeType": "YulAssignment",
															"src": "11658:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11670:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "11670:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11681:2:3",
																		"nodeType": "YulLiteral",
																		"src": "11681:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11666:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "11666:3:3"
																},
																"nativeSrc": "11666:18:3",
																"nodeType": "YulFunctionCall",
																"src": "11666:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11658:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "11658:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11705:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "11705:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11716:1:3",
																				"nodeType": "YulLiteral",
																				"src": "11716:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11701:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "11701:3:3"
																		},
																		"nativeSrc": "11701:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "11701:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11724:4:3",
																				"nodeType": "YulIdentifier",
																				"src": "11724:4:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11730:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "11730:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11720:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "11720:3:3"
																		},
																		"nativeSrc": "11720:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "11720:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11694:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "11694:6:3"
																},
																"nativeSrc": "11694:47:3",
																"nodeType": "YulFunctionCall",
																"src": "11694:47:3"
															},
															"nativeSrc": "11694:47:3",
															"nodeType": "YulExpressionStatement",
															"src": "11694:47:3"
														},
														{
															"nativeSrc": "11750:139:3",
															"nodeType": "YulAssignment",
															"src": "11750:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11884:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "11884:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3185032968986ab89d0ebf209c76042e88d4e5067b1e1e98d1a33558aa0144ac_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11758:124:3",
																	"nodeType": "YulIdentifier",
																	"src": "11758:124:3"
																},
																"nativeSrc": "11758:131:3",
																"nodeType": "YulFunctionCall",
																"src": "11758:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11750:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "11750:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3185032968986ab89d0ebf209c76042e88d4e5067b1e1e98d1a33558aa0144ac__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11477:419:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11628:9:3",
														"nodeType": "YulTypedName",
														"src": "11628:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11643:4:3",
														"nodeType": "YulTypedName",
														"src": "11643:4:3",
														"type": ""
													}
												],
												"src": "11477:419:3"
											},
											{
												"body": {
													"nativeSrc": "12008:57:3",
													"nodeType": "YulBlock",
													"src": "12008:57:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12030:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "12030:6:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12038:1:3",
																				"nodeType": "YulLiteral",
																				"src": "12038:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12026:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "12026:3:3"
																		},
																		"nativeSrc": "12026:14:3",
																		"nodeType": "YulFunctionCall",
																		"src": "12026:14:3"
																	},
																	{
																		"hexValue": "41646472657373207a65726f3f",
																		"kind": "string",
																		"nativeSrc": "12042:15:3",
																		"nodeType": "YulLiteral",
																		"src": "12042:15:3",
																		"type": "",
																		"value": "Address zero?"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12019:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "12019:6:3"
																},
																"nativeSrc": "12019:39:3",
																"nodeType": "YulFunctionCall",
																"src": "12019:39:3"
															},
															"nativeSrc": "12019:39:3",
															"nodeType": "YulExpressionStatement",
															"src": "12019:39:3"
														}
													]
												},
												"name": "store_literal_in_memory_f0db2bf88b6ae8660dc351ea7aea9c51a185bf943e35d1c9bd0b9dc326f0bec5",
												"nativeSrc": "11902:163:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12000:6:3",
														"nodeType": "YulTypedName",
														"src": "12000:6:3",
														"type": ""
													}
												],
												"src": "11902:163:3"
											},
											{
												"body": {
													"nativeSrc": "12217:220:3",
													"nodeType": "YulBlock",
													"src": "12217:220:3",
													"statements": [
														{
															"nativeSrc": "12227:74:3",
															"nodeType": "YulAssignment",
															"src": "12227:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12293:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "12293:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12298:2:3",
																		"nodeType": "YulLiteral",
																		"src": "12298:2:3",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12234:58:3",
																	"nodeType": "YulIdentifier",
																	"src": "12234:58:3"
																},
																"nativeSrc": "12234:67:3",
																"nodeType": "YulFunctionCall",
																"src": "12234:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12227:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "12227:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12399:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "12399:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f0db2bf88b6ae8660dc351ea7aea9c51a185bf943e35d1c9bd0b9dc326f0bec5",
																	"nativeSrc": "12310:88:3",
																	"nodeType": "YulIdentifier",
																	"src": "12310:88:3"
																},
																"nativeSrc": "12310:93:3",
																"nodeType": "YulFunctionCall",
																"src": "12310:93:3"
															},
															"nativeSrc": "12310:93:3",
															"nodeType": "YulExpressionStatement",
															"src": "12310:93:3"
														},
														{
															"nativeSrc": "12412:19:3",
															"nodeType": "YulAssignment",
															"src": "12412:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12423:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "12423:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12428:2:3",
																		"nodeType": "YulLiteral",
																		"src": "12428:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12419:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "12419:3:3"
																},
																"nativeSrc": "12419:12:3",
																"nodeType": "YulFunctionCall",
																"src": "12419:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12412:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "12412:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f0db2bf88b6ae8660dc351ea7aea9c51a185bf943e35d1c9bd0b9dc326f0bec5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12071:366:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12205:3:3",
														"nodeType": "YulTypedName",
														"src": "12205:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12213:3:3",
														"nodeType": "YulTypedName",
														"src": "12213:3:3",
														"type": ""
													}
												],
												"src": "12071:366:3"
											},
											{
												"body": {
													"nativeSrc": "12614:248:3",
													"nodeType": "YulBlock",
													"src": "12614:248:3",
													"statements": [
														{
															"nativeSrc": "12624:26:3",
															"nodeType": "YulAssignment",
															"src": "12624:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12636:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "12636:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12647:2:3",
																		"nodeType": "YulLiteral",
																		"src": "12647:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12632:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "12632:3:3"
																},
																"nativeSrc": "12632:18:3",
																"nodeType": "YulFunctionCall",
																"src": "12632:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12624:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "12624:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12671:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "12671:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12682:1:3",
																				"nodeType": "YulLiteral",
																				"src": "12682:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12667:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "12667:3:3"
																		},
																		"nativeSrc": "12667:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "12667:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12690:4:3",
																				"nodeType": "YulIdentifier",
																				"src": "12690:4:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12696:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "12696:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12686:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "12686:3:3"
																		},
																		"nativeSrc": "12686:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "12686:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12660:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "12660:6:3"
																},
																"nativeSrc": "12660:47:3",
																"nodeType": "YulFunctionCall",
																"src": "12660:47:3"
															},
															"nativeSrc": "12660:47:3",
															"nodeType": "YulExpressionStatement",
															"src": "12660:47:3"
														},
														{
															"nativeSrc": "12716:139:3",
															"nodeType": "YulAssignment",
															"src": "12716:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12850:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "12850:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f0db2bf88b6ae8660dc351ea7aea9c51a185bf943e35d1c9bd0b9dc326f0bec5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12724:124:3",
																	"nodeType": "YulIdentifier",
																	"src": "12724:124:3"
																},
																"nativeSrc": "12724:131:3",
																"nodeType": "YulFunctionCall",
																"src": "12724:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12716:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "12716:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f0db2bf88b6ae8660dc351ea7aea9c51a185bf943e35d1c9bd0b9dc326f0bec5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12443:419:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12594:9:3",
														"nodeType": "YulTypedName",
														"src": "12594:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12609:4:3",
														"nodeType": "YulTypedName",
														"src": "12609:4:3",
														"type": ""
													}
												],
												"src": "12443:419:3"
											},
											{
												"body": {
													"nativeSrc": "12994:206:3",
													"nodeType": "YulBlock",
													"src": "12994:206:3",
													"statements": [
														{
															"nativeSrc": "13004:26:3",
															"nodeType": "YulAssignment",
															"src": "13004:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13016:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "13016:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13027:2:3",
																		"nodeType": "YulLiteral",
																		"src": "13027:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13012:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "13012:3:3"
																},
																"nativeSrc": "13012:18:3",
																"nodeType": "YulFunctionCall",
																"src": "13012:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13004:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "13004:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13084:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "13084:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13097:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "13097:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13108:1:3",
																				"nodeType": "YulLiteral",
																				"src": "13108:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13093:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "13093:3:3"
																		},
																		"nativeSrc": "13093:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "13093:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13040:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "13040:43:3"
																},
																"nativeSrc": "13040:71:3",
																"nodeType": "YulFunctionCall",
																"src": "13040:71:3"
															},
															"nativeSrc": "13040:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "13040:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13165:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "13165:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13178:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "13178:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13189:2:3",
																				"nodeType": "YulLiteral",
																				"src": "13189:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13174:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "13174:3:3"
																		},
																		"nativeSrc": "13174:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "13174:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13121:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "13121:43:3"
																},
																"nativeSrc": "13121:72:3",
																"nodeType": "YulFunctionCall",
																"src": "13121:72:3"
															},
															"nativeSrc": "13121:72:3",
															"nodeType": "YulExpressionStatement",
															"src": "13121:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "12868:332:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12958:9:3",
														"nodeType": "YulTypedName",
														"src": "12958:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12970:6:3",
														"nodeType": "YulTypedName",
														"src": "12970:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12978:6:3",
														"nodeType": "YulTypedName",
														"src": "12978:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12989:4:3",
														"nodeType": "YulTypedName",
														"src": "12989:4:3",
														"type": ""
													}
												],
												"src": "12868:332:3"
											},
											{
												"body": {
													"nativeSrc": "13234:152:3",
													"nodeType": "YulBlock",
													"src": "13234:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13251:1:3",
																		"nodeType": "YulLiteral",
																		"src": "13251:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13254:77:3",
																		"nodeType": "YulLiteral",
																		"src": "13254:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13244:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "13244:6:3"
																},
																"nativeSrc": "13244:88:3",
																"nodeType": "YulFunctionCall",
																"src": "13244:88:3"
															},
															"nativeSrc": "13244:88:3",
															"nodeType": "YulExpressionStatement",
															"src": "13244:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13348:1:3",
																		"nodeType": "YulLiteral",
																		"src": "13348:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13351:4:3",
																		"nodeType": "YulLiteral",
																		"src": "13351:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13341:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "13341:6:3"
																},
																"nativeSrc": "13341:15:3",
																"nodeType": "YulFunctionCall",
																"src": "13341:15:3"
															},
															"nativeSrc": "13341:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "13341:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13372:1:3",
																		"nodeType": "YulLiteral",
																		"src": "13372:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13375:4:3",
																		"nodeType": "YulLiteral",
																		"src": "13375:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "13365:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "13365:6:3"
																},
																"nativeSrc": "13365:15:3",
																"nodeType": "YulFunctionCall",
																"src": "13365:15:3"
															},
															"nativeSrc": "13365:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "13365:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "13206:180:3",
												"nodeType": "YulFunctionDefinition",
												"src": "13206:180:3"
											},
											{
												"body": {
													"nativeSrc": "13436:147:3",
													"nodeType": "YulBlock",
													"src": "13436:147:3",
													"statements": [
														{
															"nativeSrc": "13446:25:3",
															"nodeType": "YulAssignment",
															"src": "13446:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13469:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "13469:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13451:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "13451:17:3"
																},
																"nativeSrc": "13451:20:3",
																"nodeType": "YulFunctionCall",
																"src": "13451:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "13446:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "13446:1:3"
																}
															]
														},
														{
															"nativeSrc": "13480:25:3",
															"nodeType": "YulAssignment",
															"src": "13480:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13503:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "13503:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13485:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "13485:17:3"
																},
																"nativeSrc": "13485:20:3",
																"nodeType": "YulFunctionCall",
																"src": "13485:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "13480:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "13480:1:3"
																}
															]
														},
														{
															"nativeSrc": "13514:16:3",
															"nodeType": "YulAssignment",
															"src": "13514:16:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13525:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "13525:1:3"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "13528:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "13528:1:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13521:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "13521:3:3"
																},
																"nativeSrc": "13521:9:3",
																"nodeType": "YulFunctionCall",
																"src": "13521:9:3"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "13514:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "13514:3:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13554:22:3",
																"nodeType": "YulBlock",
																"src": "13554:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "13556:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "13556:16:3"
																			},
																			"nativeSrc": "13556:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "13556:18:3"
																		},
																		"nativeSrc": "13556:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "13556:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13546:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "13546:1:3"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "13549:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "13549:3:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13543:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "13543:2:3"
																},
																"nativeSrc": "13543:10:3",
																"nodeType": "YulFunctionCall",
																"src": "13543:10:3"
															},
															"nativeSrc": "13540:36:3",
															"nodeType": "YulIf",
															"src": "13540:36:3"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "13392:191:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13423:1:3",
														"nodeType": "YulTypedName",
														"src": "13423:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13426:1:3",
														"nodeType": "YulTypedName",
														"src": "13426:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "13432:3:3",
														"nodeType": "YulTypedName",
														"src": "13432:3:3",
														"type": ""
													}
												],
												"src": "13392:191:3"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_e731ba893c68928f02781756791066f23259e50b4884778db05599c2eb032f36(memPtr) {\n\n        mstore(add(memPtr, 0), \"No staked amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_e731ba893c68928f02781756791066f23259e50b4884778db05599c2eb032f36_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_e731ba893c68928f02781756791066f23259e50b4884778db05599c2eb032f36(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e731ba893c68928f02781756791066f23259e50b4884778db05599c2eb032f36__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e731ba893c68928f02781756791066f23259e50b4884778db05599c2eb032f36_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1e09d4dedd886667ac7eac43a75f5b8a9137d9605bcdd673e19a127b1e9cc6a0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Staking period not over yet\")\n\n    }\n\n    function abi_encode_t_stringliteral_1e09d4dedd886667ac7eac43a75f5b8a9137d9605bcdd673e19a127b1e9cc6a0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_1e09d4dedd886667ac7eac43a75f5b8a9137d9605bcdd673e19a127b1e9cc6a0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1e09d4dedd886667ac7eac43a75f5b8a9137d9605bcdd673e19a127b1e9cc6a0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1e09d4dedd886667ac7eac43a75f5b8a9137d9605bcdd673e19a127b1e9cc6a0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_0c522cb2a1af44930a7426d8b6b6dcdc56d85666de7235537f48c5753d7a529a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address zero detected\")\n\n    }\n\n    function abi_encode_t_stringliteral_0c522cb2a1af44930a7426d8b6b6dcdc56d85666de7235537f48c5753d7a529a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_0c522cb2a1af44930a7426d8b6b6dcdc56d85666de7235537f48c5753d7a529a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0c522cb2a1af44930a7426d8b6b6dcdc56d85666de7235537f48c5753d7a529a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0c522cb2a1af44930a7426d8b6b6dcdc56d85666de7235537f48c5753d7a529a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b123eca9829844b661c01ef55268688eca28a9866f8c3021d17497c8d41dc63a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Can't stake null value\")\n\n    }\n\n    function abi_encode_t_stringliteral_b123eca9829844b661c01ef55268688eca28a9866f8c3021d17497c8d41dc63a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_b123eca9829844b661c01ef55268688eca28a9866f8c3021d17497c8d41dc63a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b123eca9829844b661c01ef55268688eca28a9866f8c3021d17497c8d41dc63a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b123eca9829844b661c01ef55268688eca28a9866f8c3021d17497c8d41dc63a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient funds\")\n\n    }\n\n    function abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_95b7b77e513d16b36a2faa03d539fb2a99e3aaf7b1d9ac931c129d674f579e04(memPtr) {\n\n        mstore(add(memPtr, 0), \"Already staked\")\n\n    }\n\n    function abi_encode_t_stringliteral_95b7b77e513d16b36a2faa03d539fb2a99e3aaf7b1d9ac931c129d674f579e04_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_95b7b77e513d16b36a2faa03d539fb2a99e3aaf7b1d9ac931c129d674f579e04(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_95b7b77e513d16b36a2faa03d539fb2a99e3aaf7b1d9ac931c129d674f579e04__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_95b7b77e513d16b36a2faa03d539fb2a99e3aaf7b1d9ac931c129d674f579e04_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_3185032968986ab89d0ebf209c76042e88d4e5067b1e1e98d1a33558aa0144ac(memPtr) {\n\n        mstore(add(memPtr, 0), \"Give it back to the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_3185032968986ab89d0ebf209c76042e88d4e5067b1e1e98d1a33558aa0144ac_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_3185032968986ab89d0ebf209c76042e88d4e5067b1e1e98d1a33558aa0144ac(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3185032968986ab89d0ebf209c76042e88d4e5067b1e1e98d1a33558aa0144ac__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3185032968986ab89d0ebf209c76042e88d4e5067b1e1e98d1a33558aa0144ac_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_f0db2bf88b6ae8660dc351ea7aea9c51a185bf943e35d1c9bd0b9dc326f0bec5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address zero?\")\n\n    }\n\n    function abi_encode_t_stringliteral_f0db2bf88b6ae8660dc351ea7aea9c51a185bf943e35d1c9bd0b9dc326f0bec5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_f0db2bf88b6ae8660dc351ea7aea9c51a185bf943e35d1c9bd0b9dc326f0bec5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f0db2bf88b6ae8660dc351ea7aea9c51a185bf943e35d1c9bd0b9dc326f0bec5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f0db2bf88b6ae8660dc351ea7aea9c51a185bf943e35d1c9bd0b9dc326f0bec5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610086575f3560e01c8063901c947f11610059578063901c947f146100ee5780639168ae721461010c578063a694fc3a1461013d578063f2fde38b1461015957610086565b80633aeaccf51461008a5780633ccfd60b146100a85780638005a7de146100b25780638da5cb5b146100d0575b5f80fd5b610092610175565b60405161009f9190610a4c565b60405180910390f35b6100b0610198565b005b6100ba61041a565b6040516100c79190610a7d565b60405180910390f35b6100d8610420565b6040516100e59190610a4c565b60405180910390f35b6100f6610445565b6040516101039190610a7d565b60405180910390f35b61012660048036038101906101219190610ac4565b6104e3565b604051610134929190610aef565b60405180910390f35b61015760048036038101906101529190610b40565b610503565b005b610173600480360381019061016e9190610ac4565b610859565b005b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015411610219576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021090610bc5565b60405180910390fd5b61026e60025460035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20600101546109f890919063ffffffff16565b4210156102b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102a790610c2d565b60405180910390fd5b5f60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015490505f60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f01819055505f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610391929190610c4b565b6020604051808303815f875af11580156103ad573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103d19190610ca7565b5042813373ffffffffffffffffffffffffffffffffffffffff167f92ccf450a286a957af52509bc1c9939d1a6a481783e142e41e2499f0bb66ebc660405160405180910390a450565b60025481565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161049f9190610a4c565b602060405180830381865afa1580156104ba573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104de9190610ce6565b905090565b6003602052805f5260405f205f91509050805f0154908060010154905082565b5f73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1603610571576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056890610d5b565b60405180910390fd5b5f81116105b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105aa90610dc3565b60405180910390fd5b805f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161060c9190610a4c565b602060405180830381865afa158015610627573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061064b9190610ce6565b101561068c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068390610e2b565b60405180910390fd5b5f60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f01541461070d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070490610e93565b60405180910390fd5b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161076993929190610eb1565b6020604051808303815f875af1158015610785573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107a99190610ca7565b5060405180604001604052808281526020014281525060035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f820151815f01556020820151816001015590505042813373ffffffffffffffffffffffffffffffffffffffff167f1449c6dd7851abc30abf37f57715f492010519147cc2652fbc38202c18a6ee9060405160405180910390a450565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146108e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108df90610f30565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610956576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094d90610f98565b60405180910390fd5b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f8934ce4adea8d9ce0d714d2c22b86790e41b7731c84b926fbbdc1d40ff6533c981836040516109ec929190610fb6565b60405180910390a15050565b5f8183610a05919061100a565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610a3682610a0d565b9050919050565b610a4681610a2c565b82525050565b5f602082019050610a5f5f830184610a3d565b92915050565b5f819050919050565b610a7781610a65565b82525050565b5f602082019050610a905f830184610a6e565b92915050565b5f80fd5b610aa381610a2c565b8114610aad575f80fd5b50565b5f81359050610abe81610a9a565b92915050565b5f60208284031215610ad957610ad8610a96565b5b5f610ae684828501610ab0565b91505092915050565b5f604082019050610b025f830185610a6e565b610b0f6020830184610a6e565b9392505050565b610b1f81610a65565b8114610b29575f80fd5b50565b5f81359050610b3a81610b16565b92915050565b5f60208284031215610b5557610b54610a96565b5b5f610b6284828501610b2c565b91505092915050565b5f82825260208201905092915050565b7f4e6f207374616b656420616d6f756e74000000000000000000000000000000005f82015250565b5f610baf601083610b6b565b9150610bba82610b7b565b602082019050919050565b5f6020820190508181035f830152610bdc81610ba3565b9050919050565b7f5374616b696e6720706572696f64206e6f74206f7665722079657400000000005f82015250565b5f610c17601b83610b6b565b9150610c2282610be3565b602082019050919050565b5f6020820190508181035f830152610c4481610c0b565b9050919050565b5f604082019050610c5e5f830185610a3d565b610c6b6020830184610a6e565b9392505050565b5f8115159050919050565b610c8681610c72565b8114610c90575f80fd5b50565b5f81519050610ca181610c7d565b92915050565b5f60208284031215610cbc57610cbb610a96565b5b5f610cc984828501610c93565b91505092915050565b5f81519050610ce081610b16565b92915050565b5f60208284031215610cfb57610cfa610a96565b5b5f610d0884828501610cd2565b91505092915050565b7f41646472657373207a65726f20646574656374656400000000000000000000005f82015250565b5f610d45601583610b6b565b9150610d5082610d11565b602082019050919050565b5f6020820190508181035f830152610d7281610d39565b9050919050565b7f43616e2774207374616b65206e756c6c2076616c7565000000000000000000005f82015250565b5f610dad601683610b6b565b9150610db882610d79565b602082019050919050565b5f6020820190508181035f830152610dda81610da1565b9050919050565b7f496e73756666696369656e742066756e647300000000000000000000000000005f82015250565b5f610e15601283610b6b565b9150610e2082610de1565b602082019050919050565b5f6020820190508181035f830152610e4281610e09565b9050919050565b7f416c7265616479207374616b65640000000000000000000000000000000000005f82015250565b5f610e7d600e83610b6b565b9150610e8882610e49565b602082019050919050565b5f6020820190508181035f830152610eaa81610e71565b9050919050565b5f606082019050610ec45f830186610a3d565b610ed16020830185610a3d565b610ede6040830184610a6e565b949350505050565b7f47697665206974206261636b20746f20746865206f776e6572000000000000005f82015250565b5f610f1a601983610b6b565b9150610f2582610ee6565b602082019050919050565b5f6020820190508181035f830152610f4781610f0e565b9050919050565b7f41646472657373207a65726f3f000000000000000000000000000000000000005f82015250565b5f610f82600d83610b6b565b9150610f8d82610f4e565b602082019050919050565b5f6020820190508181035f830152610faf81610f76565b9050919050565b5f604082019050610fc95f830185610a3d565b610fd66020830184610a3d565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61101482610a65565b915061101f83610a65565b925082820190508082111561103757611036610fdd565b5b9291505056fea2646970667358221220e61da7996d53f9d98f5086fc0b6fac0364b2f8b3bda6f01201716b8ff9886ccb64736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x86 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x901C947F GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x901C947F EQ PUSH2 0xEE JUMPI DUP1 PUSH4 0x9168AE72 EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x159 JUMPI PUSH2 0x86 JUMP JUMPDEST DUP1 PUSH4 0x3AEACCF5 EQ PUSH2 0x8A JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0xA8 JUMPI DUP1 PUSH4 0x8005A7DE EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xD0 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x92 PUSH2 0x175 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9F SWAP2 SWAP1 PUSH2 0xA4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB0 PUSH2 0x198 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xBA PUSH2 0x41A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC7 SWAP2 SWAP1 PUSH2 0xA7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD8 PUSH2 0x420 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE5 SWAP2 SWAP1 PUSH2 0xA4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF6 PUSH2 0x445 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x103 SWAP2 SWAP1 PUSH2 0xA7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x126 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xAC4 JUMP JUMPDEST PUSH2 0x4E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x134 SWAP3 SWAP2 SWAP1 PUSH2 0xAEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x152 SWAP2 SWAP1 PUSH2 0xB40 JUMP JUMPDEST PUSH2 0x503 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16E SWAP2 SWAP1 PUSH2 0xAC4 JUMP JUMPDEST PUSH2 0x859 JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD GT PUSH2 0x219 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x210 SWAP1 PUSH2 0xBC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x26E PUSH1 0x2 SLOAD PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x9F8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x2B0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A7 SWAP1 PUSH2 0xC2D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD SWAP1 POP PUSH0 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD DUP2 SWAP1 SSTORE POP PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x391 SWAP3 SWAP2 SWAP1 PUSH2 0xC4B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3AD JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3D1 SWAP2 SWAP1 PUSH2 0xCA7 JUMP JUMPDEST POP TIMESTAMP DUP2 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x92CCF450A286A957AF52509BC1C9939D1A6A481783E142E41E2499F0BB66EBC6 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49F SWAP2 SWAP1 PUSH2 0xA4C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4BA JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4DE SWAP2 SWAP1 PUSH2 0xCE6 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x571 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x568 SWAP1 PUSH2 0xD5B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT PUSH2 0x5B3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5AA SWAP1 PUSH2 0xDC3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60C SWAP2 SWAP1 PUSH2 0xA4C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x627 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x64B SWAP2 SWAP1 PUSH2 0xCE6 JUMP JUMPDEST LT ISZERO PUSH2 0x68C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x683 SWAP1 PUSH2 0xE2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD EQ PUSH2 0x70D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x704 SWAP1 PUSH2 0xE93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x769 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xEB1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x785 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7A9 SWAP2 SWAP1 PUSH2 0xCA7 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE POP PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP TIMESTAMP DUP2 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1449C6DD7851ABC30ABF37F57715F492010519147CC2652FBC38202C18A6EE90 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8DF SWAP1 PUSH2 0xF30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x956 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x94D SWAP1 PUSH2 0xF98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x8934CE4ADEA8D9CE0D714D2C22B86790E41B7731C84B926FBBDC1D40FF6533C9 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH2 0x9EC SWAP3 SWAP2 SWAP1 PUSH2 0xFB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0xA05 SWAP2 SWAP1 PUSH2 0x100A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA36 DUP3 PUSH2 0xA0D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA46 DUP2 PUSH2 0xA2C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA5F PUSH0 DUP4 ADD DUP5 PUSH2 0xA3D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA77 DUP2 PUSH2 0xA65 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA90 PUSH0 DUP4 ADD DUP5 PUSH2 0xA6E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xAA3 DUP2 PUSH2 0xA2C JUMP JUMPDEST DUP2 EQ PUSH2 0xAAD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xABE DUP2 PUSH2 0xA9A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAD9 JUMPI PUSH2 0xAD8 PUSH2 0xA96 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xAE6 DUP5 DUP3 DUP6 ADD PUSH2 0xAB0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xB02 PUSH0 DUP4 ADD DUP6 PUSH2 0xA6E JUMP JUMPDEST PUSH2 0xB0F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xA6E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xB1F DUP2 PUSH2 0xA65 JUMP JUMPDEST DUP2 EQ PUSH2 0xB29 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB3A DUP2 PUSH2 0xB16 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB55 JUMPI PUSH2 0xB54 PUSH2 0xA96 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB62 DUP5 DUP3 DUP6 ADD PUSH2 0xB2C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F207374616B656420616D6F756E7400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xBAF PUSH1 0x10 DUP4 PUSH2 0xB6B JUMP JUMPDEST SWAP2 POP PUSH2 0xBBA DUP3 PUSH2 0xB7B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xBDC DUP2 PUSH2 0xBA3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5374616B696E6720706572696F64206E6F74206F766572207965740000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xC17 PUSH1 0x1B DUP4 PUSH2 0xB6B JUMP JUMPDEST SWAP2 POP PUSH2 0xC22 DUP3 PUSH2 0xBE3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xC44 DUP2 PUSH2 0xC0B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xC5E PUSH0 DUP4 ADD DUP6 PUSH2 0xA3D JUMP JUMPDEST PUSH2 0xC6B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xA6E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC86 DUP2 PUSH2 0xC72 JUMP JUMPDEST DUP2 EQ PUSH2 0xC90 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xCA1 DUP2 PUSH2 0xC7D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCBC JUMPI PUSH2 0xCBB PUSH2 0xA96 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xCC9 DUP5 DUP3 DUP6 ADD PUSH2 0xC93 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xCE0 DUP2 PUSH2 0xB16 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCFB JUMPI PUSH2 0xCFA PUSH2 0xA96 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD08 DUP5 DUP3 DUP6 ADD PUSH2 0xCD2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x41646472657373207A65726F2064657465637465640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xD45 PUSH1 0x15 DUP4 PUSH2 0xB6B JUMP JUMPDEST SWAP2 POP PUSH2 0xD50 DUP3 PUSH2 0xD11 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xD72 DUP2 PUSH2 0xD39 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E2774207374616B65206E756C6C2076616C756500000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xDAD PUSH1 0x16 DUP4 PUSH2 0xB6B JUMP JUMPDEST SWAP2 POP PUSH2 0xDB8 DUP3 PUSH2 0xD79 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xDDA DUP2 PUSH2 0xDA1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742066756E64730000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE15 PUSH1 0x12 DUP4 PUSH2 0xB6B JUMP JUMPDEST SWAP2 POP PUSH2 0xE20 DUP3 PUSH2 0xDE1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE42 DUP2 PUSH2 0xE09 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416C7265616479207374616B6564000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE7D PUSH1 0xE DUP4 PUSH2 0xB6B JUMP JUMPDEST SWAP2 POP PUSH2 0xE88 DUP3 PUSH2 0xE49 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xEAA DUP2 PUSH2 0xE71 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xEC4 PUSH0 DUP4 ADD DUP7 PUSH2 0xA3D JUMP JUMPDEST PUSH2 0xED1 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xA3D JUMP JUMPDEST PUSH2 0xEDE PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xA6E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x47697665206974206261636B20746F20746865206F776E657200000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF1A PUSH1 0x19 DUP4 PUSH2 0xB6B JUMP JUMPDEST SWAP2 POP PUSH2 0xF25 DUP3 PUSH2 0xEE6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF47 DUP2 PUSH2 0xF0E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x41646472657373207A65726F3F00000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF82 PUSH1 0xD DUP4 PUSH2 0xB6B JUMP JUMPDEST SWAP2 POP PUSH2 0xF8D DUP3 PUSH2 0xF4E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xFAF DUP2 PUSH2 0xF76 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xFC9 PUSH0 DUP4 ADD DUP6 PUSH2 0xA3D JUMP JUMPDEST PUSH2 0xFD6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xA3D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1014 DUP3 PUSH2 0xA65 JUMP JUMPDEST SWAP2 POP PUSH2 0x101F DUP4 PUSH2 0xA65 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1037 JUMPI PUSH2 0x1036 PUSH2 0xFDD JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE6 SAR 0xA7 SWAP10 PUSH14 0x53F9D98F5086FC0B6FAC0364B2F8 0xB3 0xBD 0xA6 CREATE SLT ADD PUSH18 0x6B8FF9886CCB64736F6C6343000816003300 ",
							"sourceMap": "182:2346:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;510:22;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1590:481;;;:::i;:::-;;657:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;539:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2079:129;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;694:41;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;919:663;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2216:309;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;510:22;;;;;;;;;;;;:::o;1590:481::-;1673:1;1638:7;:19;1646:10;1638:19;;;;;;;;;;;;;;;:32;;;:36;1630:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;1733:50;1767:15;;1733:7;:19;1741:10;1733:19;;;;;;;;;;;;;;;:29;;;:33;;:50;;;;:::i;:::-;1714:15;:69;;1706:109;;;;;;;;;;;;:::i;:::-;;;;;;;;;1828:20;1851:7;:19;1859:10;1851:19;;;;;;;;;;;;;;;:32;;;1828:55;;1929:1;1894:7;:19;1902:10;1894:19;;;;;;;;;;;;;;;:32;;:36;;;;1950:7;;;;;;;;;;1943:24;;;1968:10;1980:12;1943:50;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2047:15;2033:12;2021:10;2011:52;;;;;;;;;;;;1619:452;1590:481::o;657:30::-;;;;:::o;539:20::-;;;;;;;;;;;;;:::o;2079:129::-;2133:7;2167;;;;;;;;;;;2160:25;;;2194:4;2160:40;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2153:47;;2079:129;:::o;694:41::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;919:663::-;1001:1;979:24;;:10;:24;;;971:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;1058:1;1048:7;:11;1040:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;1146:7;1112;;;;;;;;;;1105:25;;;1131:10;1105:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:48;;1097:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;1284:1;1248:7;:19;1256:10;1248:19;;;;;;;;;;;;;;;:32;;;:37;1240:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;1324:7;;;;;;;;;;1317:28;;;1346:10;1366:4;1373:7;1317:64;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1416:96;;;;;;;;1452:7;1416:96;;;;1485:15;1416:96;;;1394:7;:19;1402:10;1394:19;;;;;;;;;;;;;;;:118;;;;;;;;;;;;;;;;;;;1558:15;1549:7;1537:10;1530:44;;;;;;;;;;;;919:663;:::o;2216:309::-;2303:5;;;;;;;;;;;2289:19;;:10;:19;;;2281:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;2377:1;2357:22;;:8;:22;;;2349:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;2410:16;2429:5;;;;;;;;;;;2410:24;;2455:8;2447:5;;:16;;;;;;;;;;;;;;;;;;2481:36;2498:8;2508;2481:36;;;;;;;:::i;:::-;;;;;;;;2270:255;2216:309;:::o;2755:96:1:-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;7:126:3:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;593:77::-;630:7;659:5;648:16;;593:77;;;:::o;676:118::-;763:24;781:5;763:24;:::i;:::-;758:3;751:37;676:118;;:::o;800:222::-;893:4;931:2;920:9;916:18;908:26;;944:71;1012:1;1001:9;997:17;988:6;944:71;:::i;:::-;800:222;;;;:::o;1109:117::-;1218:1;1215;1208:12;1355:122;1428:24;1446:5;1428:24;:::i;:::-;1421:5;1418:35;1408:63;;1467:1;1464;1457:12;1408:63;1355:122;:::o;1483:139::-;1529:5;1567:6;1554:20;1545:29;;1583:33;1610:5;1583:33;:::i;:::-;1483:139;;;;:::o;1628:329::-;1687:6;1736:2;1724:9;1715:7;1711:23;1707:32;1704:119;;;1742:79;;:::i;:::-;1704:119;1862:1;1887:53;1932:7;1923:6;1912:9;1908:22;1887:53;:::i;:::-;1877:63;;1833:117;1628:329;;;;:::o;1963:332::-;2084:4;2122:2;2111:9;2107:18;2099:26;;2135:71;2203:1;2192:9;2188:17;2179:6;2135:71;:::i;:::-;2216:72;2284:2;2273:9;2269:18;2260:6;2216:72;:::i;:::-;1963:332;;;;;:::o;2301:122::-;2374:24;2392:5;2374:24;:::i;:::-;2367:5;2364:35;2354:63;;2413:1;2410;2403:12;2354:63;2301:122;:::o;2429:139::-;2475:5;2513:6;2500:20;2491:29;;2529:33;2556:5;2529:33;:::i;:::-;2429:139;;;;:::o;2574:329::-;2633:6;2682:2;2670:9;2661:7;2657:23;2653:32;2650:119;;;2688:79;;:::i;:::-;2650:119;2808:1;2833:53;2878:7;2869:6;2858:9;2854:22;2833:53;:::i;:::-;2823:63;;2779:117;2574:329;;;;:::o;2909:169::-;2993:11;3027:6;3022:3;3015:19;3067:4;3062:3;3058:14;3043:29;;2909:169;;;;:::o;3084:166::-;3224:18;3220:1;3212:6;3208:14;3201:42;3084:166;:::o;3256:366::-;3398:3;3419:67;3483:2;3478:3;3419:67;:::i;:::-;3412:74;;3495:93;3584:3;3495:93;:::i;:::-;3613:2;3608:3;3604:12;3597:19;;3256:366;;;:::o;3628:419::-;3794:4;3832:2;3821:9;3817:18;3809:26;;3881:9;3875:4;3871:20;3867:1;3856:9;3852:17;3845:47;3909:131;4035:4;3909:131;:::i;:::-;3901:139;;3628:419;;;:::o;4053:177::-;4193:29;4189:1;4181:6;4177:14;4170:53;4053:177;:::o;4236:366::-;4378:3;4399:67;4463:2;4458:3;4399:67;:::i;:::-;4392:74;;4475:93;4564:3;4475:93;:::i;:::-;4593:2;4588:3;4584:12;4577:19;;4236:366;;;:::o;4608:419::-;4774:4;4812:2;4801:9;4797:18;4789:26;;4861:9;4855:4;4851:20;4847:1;4836:9;4832:17;4825:47;4889:131;5015:4;4889:131;:::i;:::-;4881:139;;4608:419;;;:::o;5033:332::-;5154:4;5192:2;5181:9;5177:18;5169:26;;5205:71;5273:1;5262:9;5258:17;5249:6;5205:71;:::i;:::-;5286:72;5354:2;5343:9;5339:18;5330:6;5286:72;:::i;:::-;5033:332;;;;;:::o;5371:90::-;5405:7;5448:5;5441:13;5434:21;5423:32;;5371:90;;;:::o;5467:116::-;5537:21;5552:5;5537:21;:::i;:::-;5530:5;5527:32;5517:60;;5573:1;5570;5563:12;5517:60;5467:116;:::o;5589:137::-;5643:5;5674:6;5668:13;5659:22;;5690:30;5714:5;5690:30;:::i;:::-;5589:137;;;;:::o;5732:345::-;5799:6;5848:2;5836:9;5827:7;5823:23;5819:32;5816:119;;;5854:79;;:::i;:::-;5816:119;5974:1;5999:61;6052:7;6043:6;6032:9;6028:22;5999:61;:::i;:::-;5989:71;;5945:125;5732:345;;;;:::o;6083:143::-;6140:5;6171:6;6165:13;6156:22;;6187:33;6214:5;6187:33;:::i;:::-;6083:143;;;;:::o;6232:351::-;6302:6;6351:2;6339:9;6330:7;6326:23;6322:32;6319:119;;;6357:79;;:::i;:::-;6319:119;6477:1;6502:64;6558:7;6549:6;6538:9;6534:22;6502:64;:::i;:::-;6492:74;;6448:128;6232:351;;;;:::o;6589:171::-;6729:23;6725:1;6717:6;6713:14;6706:47;6589:171;:::o;6766:366::-;6908:3;6929:67;6993:2;6988:3;6929:67;:::i;:::-;6922:74;;7005:93;7094:3;7005:93;:::i;:::-;7123:2;7118:3;7114:12;7107:19;;6766:366;;;:::o;7138:419::-;7304:4;7342:2;7331:9;7327:18;7319:26;;7391:9;7385:4;7381:20;7377:1;7366:9;7362:17;7355:47;7419:131;7545:4;7419:131;:::i;:::-;7411:139;;7138:419;;;:::o;7563:172::-;7703:24;7699:1;7691:6;7687:14;7680:48;7563:172;:::o;7741:366::-;7883:3;7904:67;7968:2;7963:3;7904:67;:::i;:::-;7897:74;;7980:93;8069:3;7980:93;:::i;:::-;8098:2;8093:3;8089:12;8082:19;;7741:366;;;:::o;8113:419::-;8279:4;8317:2;8306:9;8302:18;8294:26;;8366:9;8360:4;8356:20;8352:1;8341:9;8337:17;8330:47;8394:131;8520:4;8394:131;:::i;:::-;8386:139;;8113:419;;;:::o;8538:168::-;8678:20;8674:1;8666:6;8662:14;8655:44;8538:168;:::o;8712:366::-;8854:3;8875:67;8939:2;8934:3;8875:67;:::i;:::-;8868:74;;8951:93;9040:3;8951:93;:::i;:::-;9069:2;9064:3;9060:12;9053:19;;8712:366;;;:::o;9084:419::-;9250:4;9288:2;9277:9;9273:18;9265:26;;9337:9;9331:4;9327:20;9323:1;9312:9;9308:17;9301:47;9365:131;9491:4;9365:131;:::i;:::-;9357:139;;9084:419;;;:::o;9509:164::-;9649:16;9645:1;9637:6;9633:14;9626:40;9509:164;:::o;9679:366::-;9821:3;9842:67;9906:2;9901:3;9842:67;:::i;:::-;9835:74;;9918:93;10007:3;9918:93;:::i;:::-;10036:2;10031:3;10027:12;10020:19;;9679:366;;;:::o;10051:419::-;10217:4;10255:2;10244:9;10240:18;10232:26;;10304:9;10298:4;10294:20;10290:1;10279:9;10275:17;10268:47;10332:131;10458:4;10332:131;:::i;:::-;10324:139;;10051:419;;;:::o;10476:442::-;10625:4;10663:2;10652:9;10648:18;10640:26;;10676:71;10744:1;10733:9;10729:17;10720:6;10676:71;:::i;:::-;10757:72;10825:2;10814:9;10810:18;10801:6;10757:72;:::i;:::-;10839;10907:2;10896:9;10892:18;10883:6;10839:72;:::i;:::-;10476:442;;;;;;:::o;10924:175::-;11064:27;11060:1;11052:6;11048:14;11041:51;10924:175;:::o;11105:366::-;11247:3;11268:67;11332:2;11327:3;11268:67;:::i;:::-;11261:74;;11344:93;11433:3;11344:93;:::i;:::-;11462:2;11457:3;11453:12;11446:19;;11105:366;;;:::o;11477:419::-;11643:4;11681:2;11670:9;11666:18;11658:26;;11730:9;11724:4;11720:20;11716:1;11705:9;11701:17;11694:47;11758:131;11884:4;11758:131;:::i;:::-;11750:139;;11477:419;;;:::o;11902:163::-;12042:15;12038:1;12030:6;12026:14;12019:39;11902:163;:::o;12071:366::-;12213:3;12234:67;12298:2;12293:3;12234:67;:::i;:::-;12227:74;;12310:93;12399:3;12310:93;:::i;:::-;12428:2;12423:3;12419:12;12412:19;;12071:366;;;:::o;12443:419::-;12609:4;12647:2;12636:9;12632:18;12624:26;;12696:9;12690:4;12686:20;12682:1;12671:9;12667:17;12660:47;12724:131;12850:4;12724:131;:::i;:::-;12716:139;;12443:419;;;:::o;12868:332::-;12989:4;13027:2;13016:9;13012:18;13004:26;;13040:71;13108:1;13097:9;13093:17;13084:6;13040:71;:::i;:::-;13121:72;13189:2;13178:9;13174:18;13165:6;13121:72;:::i;:::-;12868:332;;;;;:::o;13206:180::-;13254:77;13251:1;13244:88;13351:4;13348:1;13341:15;13375:4;13372:1;13365:15;13392:191;13432:3;13451:20;13469:1;13451:20;:::i;:::-;13446:25;;13485:20;13503:1;13485:20;:::i;:::-;13480:25;;13528:1;13525;13521:9;13514:16;;13549:3;13546:1;13543:10;13540:36;;;13556:18;;:::i;:::-;13540:36;13392:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "842200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"Address()": "2506",
								"owner()": "2575",
								"showContractBalance()": "infinite",
								"stake(uint256)": "infinite",
								"stakers(address)": "infinite",
								"stakingDuration()": "2470",
								"transferOwnership(address)": "infinite",
								"withdraw()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 182,
									"end": 2528,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 182,
									"end": 2528,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 182,
									"end": 2528,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 744,
									"end": 911,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 744,
									"end": 911,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 744,
									"end": 911,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 744,
									"end": 911,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 744,
									"end": 911,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 744,
									"end": 911,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 744,
									"end": 911,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 744,
									"end": 911,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 744,
									"end": 911,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 744,
									"end": 911,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 744,
									"end": 911,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 744,
									"end": 911,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 744,
									"end": 911,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 744,
									"end": 911,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 744,
									"end": 911,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 744,
									"end": 911,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 744,
									"end": 911,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 744,
									"end": 911,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 744,
									"end": 911,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 744,
									"end": 911,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 744,
									"end": 911,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 744,
									"end": 911,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 744,
									"end": 911,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 744,
									"end": 911,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 744,
									"end": 911,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 744,
									"end": 911,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 744,
									"end": 911,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 744,
									"end": 911,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 744,
									"end": 911,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 744,
									"end": 911,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 744,
									"end": 911,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 744,
									"end": 911,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 744,
									"end": 911,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 744,
									"end": 911,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 744,
									"end": 911,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 819,
									"end": 829,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 811,
									"end": 816,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 811,
									"end": 816,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 811,
									"end": 829,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 811,
									"end": 829,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 811,
									"end": 829,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 811,
									"end": 829,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 811,
									"end": 829,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 811,
									"end": 829,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 811,
									"end": 829,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 811,
									"end": 829,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 811,
									"end": 829,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 811,
									"end": 829,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 811,
									"end": 829,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 811,
									"end": 829,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 811,
									"end": 829,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 811,
									"end": 829,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 811,
									"end": 829,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 811,
									"end": 829,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 811,
									"end": 829,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 811,
									"end": 829,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 850,
									"end": 858,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 840,
									"end": 847,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 840,
									"end": 847,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 840,
									"end": 858,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 840,
									"end": 858,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 840,
									"end": 858,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 840,
									"end": 858,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 840,
									"end": 858,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 840,
									"end": 858,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 840,
									"end": 858,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 840,
									"end": 858,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 840,
									"end": 858,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 840,
									"end": 858,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 840,
									"end": 858,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 840,
									"end": 858,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 840,
									"end": 858,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 840,
									"end": 858,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 840,
									"end": 858,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 840,
									"end": 858,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 840,
									"end": 858,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 840,
									"end": 858,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 887,
									"end": 903,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 869,
									"end": 884,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 869,
									"end": 903,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 869,
									"end": 903,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 869,
									"end": 903,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 869,
									"end": 903,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 744,
									"end": 911,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 744,
									"end": 911,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 182,
									"end": 2528,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 182,
									"end": 2528,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "26"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 3,
									"value": "26"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 922,
									"name": "tag",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 845,
									"end": 922,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 882,
									"end": 889,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 911,
									"end": 916,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 900,
									"end": 916,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 900,
									"end": 916,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 845,
									"end": 922,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 922,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "tag",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 1019,
									"end": 1024,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 1001,
									"end": 1025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "tag",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 994,
									"end": 999,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 991,
									"end": 1026,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "32"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1040,
									"end": 1041,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1030,
									"end": 1042,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "tag",
									"source": 3,
									"value": "32"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 928,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "tag",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1113,
									"end": 1118,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1144,
									"end": 1150,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "34"
								},
								{
									"begin": 1187,
									"end": 1192,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 1160,
									"end": 1193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "tag",
									"source": 3,
									"value": "34"
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1056,
									"end": 1199,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "tag",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1284,
									"end": 1290,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1292,
									"end": 1298,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1341,
									"end": 1343,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1329,
									"end": 1338,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1320,
									"end": 1327,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1316,
									"end": 1339,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1312,
									"end": 1344,
									"name": "SLT",
									"source": 3
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1347,
									"end": 1426,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "37"
								},
								{
									"begin": 1347,
									"end": 1426,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1347,
									"end": 1426,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1347,
									"end": 1426,
									"name": "tag",
									"source": 3,
									"value": "37"
								},
								{
									"begin": 1347,
									"end": 1426,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "tag",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1467,
									"end": 1468,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1492,
									"end": 1556,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 1548,
									"end": 1555,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1539,
									"end": 1545,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1528,
									"end": 1537,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 1524,
									"end": 1546,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1492,
									"end": 1556,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 1492,
									"end": 1556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1492,
									"end": 1556,
									"name": "tag",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 1492,
									"end": 1556,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1482,
									"end": 1556,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1482,
									"end": 1556,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1438,
									"end": 1566,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1605,
									"end": 1607,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1631,
									"end": 1695,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "39"
								},
								{
									"begin": 1687,
									"end": 1694,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1678,
									"end": 1684,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1676,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 1663,
									"end": 1685,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1631,
									"end": 1695,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 1631,
									"end": 1695,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1631,
									"end": 1695,
									"name": "tag",
									"source": 3,
									"value": "39"
								},
								{
									"begin": 1631,
									"end": 1695,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1621,
									"end": 1695,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1621,
									"end": 1695,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1576,
									"end": 1705,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1205,
									"end": 1712,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 182,
									"end": 2528,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 182,
									"end": 2528,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 182,
									"end": 2528,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 182,
									"end": 2528,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 182,
									"end": 2528,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 182,
									"end": 2528,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 182,
									"end": 2528,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 182,
									"end": 2528,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 182,
									"end": 2528,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e61da7996d53f9d98f5086fc0b6fac0364b2f8b3bda6f01201716b8ff9886ccb64736f6c63430008160033",
									".code": [
										{
											"begin": 182,
											"end": 2528,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 182,
											"end": 2528,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 182,
											"end": 2528,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 182,
											"end": 2528,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 182,
											"end": 2528,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 182,
											"end": 2528,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 182,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 182,
											"end": 2528,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 182,
											"end": 2528,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 182,
											"end": 2528,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 182,
											"end": 2528,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 182,
											"end": 2528,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 182,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 182,
											"end": 2528,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 182,
											"end": 2528,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 182,
											"end": 2528,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 182,
											"end": 2528,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 182,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 182,
											"end": 2528,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 182,
											"end": 2528,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 182,
											"end": 2528,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 182,
											"end": 2528,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 182,
											"end": 2528,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 182,
											"end": 2528,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 182,
											"end": 2528,
											"name": "PUSH",
											"source": 2,
											"value": "901C947F"
										},
										{
											"begin": 182,
											"end": 2528,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 182,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 182,
											"end": 2528,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 182,
											"end": 2528,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 182,
											"end": 2528,
											"name": "PUSH",
											"source": 2,
											"value": "901C947F"
										},
										{
											"begin": 182,
											"end": 2528,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 182,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 182,
											"end": 2528,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 182,
											"end": 2528,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 182,
											"end": 2528,
											"name": "PUSH",
											"source": 2,
											"value": "9168AE72"
										},
										{
											"begin": 182,
											"end": 2528,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 182,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 182,
											"end": 2528,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 182,
											"end": 2528,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 182,
											"end": 2528,
											"name": "PUSH",
											"source": 2,
											"value": "A694FC3A"
										},
										{
											"begin": 182,
											"end": 2528,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 182,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 182,
											"end": 2528,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 182,
											"end": 2528,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 182,
											"end": 2528,
											"name": "PUSH",
											"source": 2,
											"value": "F2FDE38B"
										},
										{
											"begin": 182,
											"end": 2528,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 182,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 182,
											"end": 2528,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 182,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 182,
											"end": 2528,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 182,
											"end": 2528,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 182,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 182,
											"end": 2528,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 182,
											"end": 2528,
											"name": "PUSH",
											"source": 2,
											"value": "3AEACCF5"
										},
										{
											"begin": 182,
											"end": 2528,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 182,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 182,
											"end": 2528,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 182,
											"end": 2528,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 182,
											"end": 2528,
											"name": "PUSH",
											"source": 2,
											"value": "3CCFD60B"
										},
										{
											"begin": 182,
											"end": 2528,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 182,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 182,
											"end": 2528,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 182,
											"end": 2528,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 182,
											"end": 2528,
											"name": "PUSH",
											"source": 2,
											"value": "8005A7DE"
										},
										{
											"begin": 182,
											"end": 2528,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 182,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 182,
											"end": 2528,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 182,
											"end": 2528,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 182,
											"end": 2528,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 182,
											"end": 2528,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 182,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 182,
											"end": 2528,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 182,
											"end": 2528,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 182,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 182,
											"end": 2528,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 182,
											"end": 2528,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 182,
											"end": 2528,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 510,
											"end": 532,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 510,
											"end": 532,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 510,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 510,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 510,
											"end": 532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 510,
											"end": 532,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 510,
											"end": 532,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 510,
											"end": 532,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 510,
											"end": 532,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 510,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 510,
											"end": 532,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 510,
											"end": 532,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 510,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 510,
											"end": 532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 510,
											"end": 532,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 510,
											"end": 532,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 510,
											"end": 532,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 510,
											"end": 532,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 510,
											"end": 532,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 510,
											"end": 532,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 510,
											"end": 532,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 510,
											"end": 532,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 510,
											"end": 532,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1590,
											"end": 2071,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1590,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1590,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1590,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1590,
											"end": 2071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1590,
											"end": 2071,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1590,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1590,
											"end": 2071,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 657,
											"end": 687,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 657,
											"end": 687,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 657,
											"end": 687,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 657,
											"end": 687,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 657,
											"end": 687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 657,
											"end": 687,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 657,
											"end": 687,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 657,
											"end": 687,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 657,
											"end": 687,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 657,
											"end": 687,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 657,
											"end": 687,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 657,
											"end": 687,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 657,
											"end": 687,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 657,
											"end": 687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 657,
											"end": 687,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 657,
											"end": 687,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 657,
											"end": 687,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 657,
											"end": 687,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 657,
											"end": 687,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 657,
											"end": 687,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 657,
											"end": 687,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 657,
											"end": 687,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 657,
											"end": 687,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 539,
											"end": 559,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 539,
											"end": 559,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 539,
											"end": 559,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 539,
											"end": 559,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 539,
											"end": 559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 539,
											"end": 559,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 539,
											"end": 559,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 539,
											"end": 559,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 539,
											"end": 559,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 539,
											"end": 559,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 539,
											"end": 559,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 539,
											"end": 559,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 539,
											"end": 559,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 539,
											"end": 559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 539,
											"end": 559,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 539,
											"end": 559,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 539,
											"end": 559,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 539,
											"end": 559,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 539,
											"end": 559,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 539,
											"end": 559,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 539,
											"end": 559,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 539,
											"end": 559,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 539,
											"end": 559,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2079,
											"end": 2208,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 2079,
											"end": 2208,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2079,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2079,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2079,
											"end": 2208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2079,
											"end": 2208,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2079,
											"end": 2208,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2079,
											"end": 2208,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2079,
											"end": 2208,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2079,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2079,
											"end": 2208,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2079,
											"end": 2208,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2079,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 2079,
											"end": 2208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2079,
											"end": 2208,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2079,
											"end": 2208,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2079,
											"end": 2208,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2079,
											"end": 2208,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2079,
											"end": 2208,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2079,
											"end": 2208,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2079,
											"end": 2208,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2079,
											"end": 2208,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2079,
											"end": 2208,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 694,
											"end": 735,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 694,
											"end": 735,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 694,
											"end": 735,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 694,
											"end": 735,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 694,
											"end": 735,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 694,
											"end": 735,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 694,
											"end": 735,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 694,
											"end": 735,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 694,
											"end": 735,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 694,
											"end": 735,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 694,
											"end": 735,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 694,
											"end": 735,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 694,
											"end": 735,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 694,
											"end": 735,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 694,
											"end": 735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 694,
											"end": 735,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 694,
											"end": 735,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 694,
											"end": 735,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 694,
											"end": 735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 694,
											"end": 735,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 694,
											"end": 735,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 694,
											"end": 735,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 694,
											"end": 735,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 694,
											"end": 735,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 694,
											"end": 735,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 694,
											"end": 735,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 694,
											"end": 735,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 694,
											"end": 735,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 694,
											"end": 735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 694,
											"end": 735,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 694,
											"end": 735,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 694,
											"end": 735,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 694,
											"end": 735,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 694,
											"end": 735,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 694,
											"end": 735,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 694,
											"end": 735,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 694,
											"end": 735,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 694,
											"end": 735,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 919,
											"end": 1582,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 919,
											"end": 1582,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 919,
											"end": 1582,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 919,
											"end": 1582,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 919,
											"end": 1582,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 919,
											"end": 1582,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 919,
											"end": 1582,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 919,
											"end": 1582,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 919,
											"end": 1582,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 919,
											"end": 1582,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 919,
											"end": 1582,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 919,
											"end": 1582,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 919,
											"end": 1582,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 919,
											"end": 1582,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 919,
											"end": 1582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 919,
											"end": 1582,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 919,
											"end": 1582,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 919,
											"end": 1582,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 919,
											"end": 1582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 919,
											"end": 1582,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 919,
											"end": 1582,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 919,
											"end": 1582,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2216,
											"end": 2525,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2216,
											"end": 2525,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2216,
											"end": 2525,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2216,
											"end": 2525,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2216,
											"end": 2525,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2216,
											"end": 2525,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2216,
											"end": 2525,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2216,
											"end": 2525,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2216,
											"end": 2525,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2216,
											"end": 2525,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2216,
											"end": 2525,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2216,
											"end": 2525,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2216,
											"end": 2525,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2216,
											"end": 2525,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2216,
											"end": 2525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2216,
											"end": 2525,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2216,
											"end": 2525,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2216,
											"end": 2525,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2216,
											"end": 2525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2216,
											"end": 2525,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2216,
											"end": 2525,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2216,
											"end": 2525,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 510,
											"end": 532,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 510,
											"end": 532,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 510,
											"end": 532,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 510,
											"end": 532,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 510,
											"end": 532,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 510,
											"end": 532,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 510,
											"end": 532,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 510,
											"end": 532,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 510,
											"end": 532,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 510,
											"end": 532,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 510,
											"end": 532,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 510,
											"end": 532,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 510,
											"end": 532,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 510,
											"end": 532,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1590,
											"end": 2071,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1590,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1673,
											"end": 1674,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1645,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1638,
											"end": 1657,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1656,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1657,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1638,
											"end": 1657,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1657,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1638,
											"end": 1657,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1657,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1657,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1657,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1638,
											"end": 1657,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1657,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1657,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1657,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1657,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1638,
											"end": 1657,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1657,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1657,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1670,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1670,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1670,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1674,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1630,
											"end": 1695,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1630,
											"end": 1695,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1630,
											"end": 1695,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1630,
											"end": 1695,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1630,
											"end": 1695,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1630,
											"end": 1695,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1630,
											"end": 1695,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1630,
											"end": 1695,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1630,
											"end": 1695,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1630,
											"end": 1695,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1630,
											"end": 1695,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1630,
											"end": 1695,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1630,
											"end": 1695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1630,
											"end": 1695,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1630,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1630,
											"end": 1695,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1630,
											"end": 1695,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1630,
											"end": 1695,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1630,
											"end": 1695,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1630,
											"end": 1695,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1630,
											"end": 1695,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1630,
											"end": 1695,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1630,
											"end": 1695,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1630,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1783,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1767,
											"end": 1782,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1767,
											"end": 1782,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1740,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1751,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1762,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1733,
											"end": 1762,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1762,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1766,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1733,
											"end": 1766,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1783,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1783,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1783,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1733,
											"end": 1783,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1783,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1733,
											"end": 1783,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1714,
											"end": 1729,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 1714,
											"end": 1783,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1714,
											"end": 1783,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1706,
											"end": 1815,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1706,
											"end": 1815,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1706,
											"end": 1815,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1706,
											"end": 1815,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1706,
											"end": 1815,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1706,
											"end": 1815,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1706,
											"end": 1815,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1706,
											"end": 1815,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1706,
											"end": 1815,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1706,
											"end": 1815,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1706,
											"end": 1815,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1706,
											"end": 1815,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1706,
											"end": 1815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1706,
											"end": 1815,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1706,
											"end": 1815,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1706,
											"end": 1815,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1706,
											"end": 1815,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1706,
											"end": 1815,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1706,
											"end": 1815,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1706,
											"end": 1815,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1706,
											"end": 1815,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1706,
											"end": 1815,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1706,
											"end": 1815,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1706,
											"end": 1815,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1848,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1851,
											"end": 1858,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1851,
											"end": 1870,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1859,
											"end": 1869,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1870,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1851,
											"end": 1870,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1870,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1851,
											"end": 1870,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1870,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1870,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1870,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1851,
											"end": 1870,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1870,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1870,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1870,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1870,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1851,
											"end": 1870,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1870,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1851,
											"end": 1870,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1883,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1851,
											"end": 1883,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1883,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1883,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1883,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 1930,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1894,
											"end": 1901,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1894,
											"end": 1913,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1902,
											"end": 1912,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1894,
											"end": 1913,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1894,
											"end": 1913,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1894,
											"end": 1913,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1894,
											"end": 1913,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1894,
											"end": 1913,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1894,
											"end": 1913,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1894,
											"end": 1913,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1894,
											"end": 1913,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1894,
											"end": 1913,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1894,
											"end": 1913,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1894,
											"end": 1913,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1894,
											"end": 1913,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1894,
											"end": 1913,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1894,
											"end": 1913,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1894,
											"end": 1913,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1894,
											"end": 1926,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1894,
											"end": 1926,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1894,
											"end": 1930,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1894,
											"end": 1930,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1894,
											"end": 1930,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1894,
											"end": 1930,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1950,
											"end": 1957,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1950,
											"end": 1957,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1950,
											"end": 1957,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1950,
											"end": 1957,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1950,
											"end": 1957,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1950,
											"end": 1957,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1950,
											"end": 1957,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1950,
											"end": 1957,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1950,
											"end": 1957,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1950,
											"end": 1957,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 1967,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1943,
											"end": 1967,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 1967,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 1968,
											"end": 1978,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1980,
											"end": 1992,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 1993,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1943,
											"end": 1993,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 1993,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 1993,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1943,
											"end": 1993,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 1993,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1943,
											"end": 1993,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 1993,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 1993,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 1993,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1943,
											"end": 1993,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 1993,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1943,
											"end": 1993,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 1993,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 1993,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 1993,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1943,
											"end": 1993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 1993,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1943,
											"end": 1993,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 1993,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1943,
											"end": 1993,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1943,
											"end": 1993,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 1993,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 1993,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 1993,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 1993,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 1993,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1943,
											"end": 1993,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 1993,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 1993,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 1993,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 1993,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 1993,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 1993,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1943,
											"end": 1993,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 1993,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 1993,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1943,
											"end": 1993,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 1993,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 1993,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 1993,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1943,
											"end": 1993,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 1993,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1943,
											"end": 1993,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 1993,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 1993,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 1993,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 1993,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 1993,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1943,
											"end": 1993,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 1993,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 1993,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1943,
											"end": 1993,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 1993,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1943,
											"end": 1993,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 1993,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 1993,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 1993,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 1993,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 1993,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 1993,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1943,
											"end": 1993,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 1993,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 1993,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 1993,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 1993,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 1993,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1943,
											"end": 1993,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 1993,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 1993,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1943,
											"end": 1993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 1993,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1943,
											"end": 1993,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 1993,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2047,
											"end": 2062,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 2033,
											"end": 2045,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2021,
											"end": 2031,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2011,
											"end": 2063,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2011,
											"end": 2063,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2011,
											"end": 2063,
											"name": "PUSH",
											"source": 2,
											"value": "92CCF450A286A957AF52509BC1C9939D1A6A481783E142E41E2499F0BB66EBC6"
										},
										{
											"begin": 2011,
											"end": 2063,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2011,
											"end": 2063,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2011,
											"end": 2063,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2011,
											"end": 2063,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2011,
											"end": 2063,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2011,
											"end": 2063,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2011,
											"end": 2063,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2011,
											"end": 2063,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2011,
											"end": 2063,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 1619,
											"end": 2071,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1590,
											"end": 2071,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 657,
											"end": 687,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 657,
											"end": 687,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 657,
											"end": 687,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 657,
											"end": 687,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 657,
											"end": 687,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 657,
											"end": 687,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 539,
											"end": 559,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 539,
											"end": 559,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 539,
											"end": 559,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 539,
											"end": 559,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 539,
											"end": 559,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 539,
											"end": 559,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 539,
											"end": 559,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 539,
											"end": 559,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 539,
											"end": 559,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 539,
											"end": 559,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 539,
											"end": 559,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 539,
											"end": 559,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 539,
											"end": 559,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 539,
											"end": 559,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 539,
											"end": 559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2079,
											"end": 2208,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2079,
											"end": 2208,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2133,
											"end": 2140,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2174,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2167,
											"end": 2174,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2174,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2167,
											"end": 2174,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2167,
											"end": 2174,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2167,
											"end": 2174,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2167,
											"end": 2174,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2167,
											"end": 2174,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2167,
											"end": 2174,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2167,
											"end": 2174,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2167,
											"end": 2174,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2160,
											"end": 2185,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2160,
											"end": 2185,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2160,
											"end": 2185,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 2194,
											"end": 2198,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 2160,
											"end": 2200,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2160,
											"end": 2200,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2160,
											"end": 2200,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2160,
											"end": 2200,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2160,
											"end": 2200,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2160,
											"end": 2200,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2160,
											"end": 2200,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2160,
											"end": 2200,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2160,
											"end": 2200,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2160,
											"end": 2200,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2160,
											"end": 2200,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2160,
											"end": 2200,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2160,
											"end": 2200,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2160,
											"end": 2200,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2160,
											"end": 2200,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2160,
											"end": 2200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2160,
											"end": 2200,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2160,
											"end": 2200,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2160,
											"end": 2200,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2160,
											"end": 2200,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2160,
											"end": 2200,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2160,
											"end": 2200,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2160,
											"end": 2200,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2160,
											"end": 2200,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2160,
											"end": 2200,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2160,
											"end": 2200,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2160,
											"end": 2200,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2160,
											"end": 2200,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 2160,
											"end": 2200,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2160,
											"end": 2200,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2160,
											"end": 2200,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2160,
											"end": 2200,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2160,
											"end": 2200,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2160,
											"end": 2200,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2160,
											"end": 2200,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2160,
											"end": 2200,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2160,
											"end": 2200,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2160,
											"end": 2200,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2160,
											"end": 2200,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2160,
											"end": 2200,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2160,
											"end": 2200,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2160,
											"end": 2200,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2160,
											"end": 2200,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2160,
											"end": 2200,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2160,
											"end": 2200,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2160,
											"end": 2200,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2160,
											"end": 2200,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2160,
											"end": 2200,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2160,
											"end": 2200,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2160,
											"end": 2200,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2160,
											"end": 2200,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2160,
											"end": 2200,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2160,
											"end": 2200,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2160,
											"end": 2200,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2160,
											"end": 2200,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2160,
											"end": 2200,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2160,
											"end": 2200,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2160,
											"end": 2200,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2160,
											"end": 2200,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2160,
											"end": 2200,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2160,
											"end": 2200,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2160,
											"end": 2200,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2160,
											"end": 2200,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2160,
											"end": 2200,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2160,
											"end": 2200,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2160,
											"end": 2200,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2160,
											"end": 2200,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2160,
											"end": 2200,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2160,
											"end": 2200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2160,
											"end": 2200,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2160,
											"end": 2200,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2200,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2200,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2079,
											"end": 2208,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2079,
											"end": 2208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 694,
											"end": 735,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 694,
											"end": 735,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 694,
											"end": 735,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 694,
											"end": 735,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 694,
											"end": 735,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 694,
											"end": 735,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 694,
											"end": 735,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 694,
											"end": 735,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 694,
											"end": 735,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 694,
											"end": 735,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 694,
											"end": 735,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 694,
											"end": 735,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 694,
											"end": 735,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 694,
											"end": 735,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 694,
											"end": 735,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 694,
											"end": 735,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 694,
											"end": 735,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 694,
											"end": 735,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 694,
											"end": 735,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 694,
											"end": 735,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 694,
											"end": 735,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 694,
											"end": 735,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 694,
											"end": 735,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 694,
											"end": 735,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 694,
											"end": 735,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 694,
											"end": 735,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 694,
											"end": 735,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 694,
											"end": 735,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 694,
											"end": 735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 919,
											"end": 1582,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 919,
											"end": 1582,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1001,
											"end": 1002,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 979,
											"end": 1003,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 979,
											"end": 1003,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 979,
											"end": 989,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1003,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 979,
											"end": 1003,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1003,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 971,
											"end": 1029,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 971,
											"end": 1029,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 971,
											"end": 1029,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 971,
											"end": 1029,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 971,
											"end": 1029,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 971,
											"end": 1029,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 971,
											"end": 1029,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 971,
											"end": 1029,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 971,
											"end": 1029,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 971,
											"end": 1029,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 971,
											"end": 1029,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 971,
											"end": 1029,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 971,
											"end": 1029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 971,
											"end": 1029,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 971,
											"end": 1029,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 971,
											"end": 1029,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 971,
											"end": 1029,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 971,
											"end": 1029,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 971,
											"end": 1029,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 971,
											"end": 1029,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 971,
											"end": 1029,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 971,
											"end": 1029,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 971,
											"end": 1029,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 971,
											"end": 1029,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1058,
											"end": 1059,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1048,
											"end": 1055,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1048,
											"end": 1059,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1040,
											"end": 1086,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1040,
											"end": 1086,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1040,
											"end": 1086,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1040,
											"end": 1086,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1040,
											"end": 1086,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1040,
											"end": 1086,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1040,
											"end": 1086,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1040,
											"end": 1086,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1040,
											"end": 1086,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1040,
											"end": 1086,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1040,
											"end": 1086,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1040,
											"end": 1086,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1040,
											"end": 1086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1040,
											"end": 1086,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1040,
											"end": 1086,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1040,
											"end": 1086,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1040,
											"end": 1086,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1040,
											"end": 1086,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1040,
											"end": 1086,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1040,
											"end": 1086,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1040,
											"end": 1086,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1040,
											"end": 1086,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1040,
											"end": 1086,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1040,
											"end": 1086,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1146,
											"end": 1153,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1112,
											"end": 1119,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1112,
											"end": 1119,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1112,
											"end": 1119,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1112,
											"end": 1119,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1112,
											"end": 1119,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1112,
											"end": 1119,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1112,
											"end": 1119,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1112,
											"end": 1119,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1112,
											"end": 1119,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1112,
											"end": 1119,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1130,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1105,
											"end": 1130,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1130,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 1131,
											"end": 1141,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1105,
											"end": 1142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1105,
											"end": 1142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1105,
											"end": 1142,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1153,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1153,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1097,
											"end": 1176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1097,
											"end": 1176,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1284,
											"end": 1285,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1248,
											"end": 1267,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1256,
											"end": 1266,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1248,
											"end": 1267,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1267,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1248,
											"end": 1267,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1267,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1248,
											"end": 1267,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1248,
											"end": 1267,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1248,
											"end": 1267,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1248,
											"end": 1267,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1248,
											"end": 1267,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1248,
											"end": 1267,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1248,
											"end": 1267,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1248,
											"end": 1267,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1248,
											"end": 1267,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1248,
											"end": 1267,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1248,
											"end": 1267,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1248,
											"end": 1280,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1248,
											"end": 1280,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1248,
											"end": 1280,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1248,
											"end": 1285,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1240,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1240,
											"end": 1304,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1240,
											"end": 1304,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1304,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1240,
											"end": 1304,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1304,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1240,
											"end": 1304,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1240,
											"end": 1304,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1304,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1240,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1240,
											"end": 1304,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1240,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1240,
											"end": 1304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1240,
											"end": 1304,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1240,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1240,
											"end": 1304,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1304,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1240,
											"end": 1304,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1240,
											"end": 1304,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1240,
											"end": 1304,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1240,
											"end": 1304,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1240,
											"end": 1304,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1240,
											"end": 1304,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1240,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1324,
											"end": 1331,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1324,
											"end": 1331,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1324,
											"end": 1331,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1324,
											"end": 1331,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1324,
											"end": 1331,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1324,
											"end": 1331,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1324,
											"end": 1331,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1324,
											"end": 1331,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1324,
											"end": 1331,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1324,
											"end": 1331,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1345,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1317,
											"end": 1345,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1345,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 1346,
											"end": 1356,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1366,
											"end": 1370,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1373,
											"end": 1380,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1317,
											"end": 1381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1317,
											"end": 1381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1416,
											"end": 1512,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1416,
											"end": 1512,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1416,
											"end": 1512,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1416,
											"end": 1512,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1416,
											"end": 1512,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1416,
											"end": 1512,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1416,
											"end": 1512,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1416,
											"end": 1512,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1452,
											"end": 1459,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1416,
											"end": 1512,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1416,
											"end": 1512,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1416,
											"end": 1512,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1512,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1485,
											"end": 1500,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 1416,
											"end": 1512,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1416,
											"end": 1512,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1416,
											"end": 1512,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1394,
											"end": 1401,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1394,
											"end": 1413,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1402,
											"end": 1412,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1394,
											"end": 1413,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1394,
											"end": 1413,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1394,
											"end": 1413,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1394,
											"end": 1413,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1394,
											"end": 1413,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1394,
											"end": 1413,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1394,
											"end": 1413,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1394,
											"end": 1413,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1394,
											"end": 1413,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1394,
											"end": 1413,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1394,
											"end": 1413,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1394,
											"end": 1413,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1394,
											"end": 1413,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1394,
											"end": 1413,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1394,
											"end": 1413,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1394,
											"end": 1512,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1394,
											"end": 1512,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1394,
											"end": 1512,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1394,
											"end": 1512,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1394,
											"end": 1512,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1394,
											"end": 1512,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1394,
											"end": 1512,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1394,
											"end": 1512,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1394,
											"end": 1512,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1394,
											"end": 1512,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1394,
											"end": 1512,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1394,
											"end": 1512,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1394,
											"end": 1512,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1394,
											"end": 1512,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1394,
											"end": 1512,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1394,
											"end": 1512,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1394,
											"end": 1512,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1394,
											"end": 1512,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1394,
											"end": 1512,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1558,
											"end": 1573,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 1549,
											"end": 1556,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1537,
											"end": 1547,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1530,
											"end": 1574,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1530,
											"end": 1574,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1530,
											"end": 1574,
											"name": "PUSH",
											"source": 2,
											"value": "1449C6DD7851ABC30ABF37F57715F492010519147CC2652FBC38202C18A6EE90"
										},
										{
											"begin": 1530,
											"end": 1574,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1530,
											"end": 1574,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1530,
											"end": 1574,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1530,
											"end": 1574,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1530,
											"end": 1574,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1530,
											"end": 1574,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1530,
											"end": 1574,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1530,
											"end": 1574,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1530,
											"end": 1574,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 919,
											"end": 1582,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 919,
											"end": 1582,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2216,
											"end": 2525,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2216,
											"end": 2525,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2303,
											"end": 2308,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2303,
											"end": 2308,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2303,
											"end": 2308,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2303,
											"end": 2308,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2303,
											"end": 2308,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2303,
											"end": 2308,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2303,
											"end": 2308,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2303,
											"end": 2308,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2303,
											"end": 2308,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2303,
											"end": 2308,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2303,
											"end": 2308,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2289,
											"end": 2308,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2289,
											"end": 2308,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2289,
											"end": 2299,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2289,
											"end": 2308,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2289,
											"end": 2308,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2289,
											"end": 2308,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2281,
											"end": 2338,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2281,
											"end": 2338,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2281,
											"end": 2338,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2281,
											"end": 2338,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2281,
											"end": 2338,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2281,
											"end": 2338,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2281,
											"end": 2338,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2281,
											"end": 2338,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2281,
											"end": 2338,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2281,
											"end": 2338,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2281,
											"end": 2338,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2281,
											"end": 2338,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2281,
											"end": 2338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2281,
											"end": 2338,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2281,
											"end": 2338,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2281,
											"end": 2338,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2281,
											"end": 2338,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2281,
											"end": 2338,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2281,
											"end": 2338,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2281,
											"end": 2338,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2281,
											"end": 2338,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2281,
											"end": 2338,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2281,
											"end": 2338,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2281,
											"end": 2338,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2377,
											"end": 2378,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2379,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2357,
											"end": 2379,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2357,
											"end": 2365,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2357,
											"end": 2379,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2357,
											"end": 2379,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2357,
											"end": 2379,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2397,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2349,
											"end": 2397,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2397,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2349,
											"end": 2397,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2397,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2349,
											"end": 2397,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2397,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2397,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2349,
											"end": 2397,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2397,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2349,
											"end": 2397,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2397,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 2349,
											"end": 2397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2397,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2349,
											"end": 2397,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2397,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2349,
											"end": 2397,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2397,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2397,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2397,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2397,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2397,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2397,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2349,
											"end": 2397,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2410,
											"end": 2426,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2429,
											"end": 2434,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2429,
											"end": 2434,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2429,
											"end": 2434,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2429,
											"end": 2434,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2429,
											"end": 2434,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2429,
											"end": 2434,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2429,
											"end": 2434,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2429,
											"end": 2434,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2429,
											"end": 2434,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2429,
											"end": 2434,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2429,
											"end": 2434,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2410,
											"end": 2434,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2410,
											"end": 2434,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2455,
											"end": 2463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2447,
											"end": 2452,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2447,
											"end": 2452,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2447,
											"end": 2463,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2447,
											"end": 2463,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2447,
											"end": 2463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2447,
											"end": 2463,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2447,
											"end": 2463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2447,
											"end": 2463,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2447,
											"end": 2463,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2447,
											"end": 2463,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2447,
											"end": 2463,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2447,
											"end": 2463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2447,
											"end": 2463,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2447,
											"end": 2463,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2447,
											"end": 2463,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2447,
											"end": 2463,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2447,
											"end": 2463,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2447,
											"end": 2463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2447,
											"end": 2463,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2447,
											"end": 2463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2481,
											"end": 2517,
											"name": "PUSH",
											"source": 2,
											"value": "8934CE4ADEA8D9CE0D714D2C22B86790E41B7731C84B926FBBDC1D40FF6533C9"
										},
										{
											"begin": 2498,
											"end": 2506,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2508,
											"end": 2516,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2481,
											"end": 2517,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2481,
											"end": 2517,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2481,
											"end": 2517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 2481,
											"end": 2517,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2481,
											"end": 2517,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2481,
											"end": 2517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2481,
											"end": 2517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2481,
											"end": 2517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2481,
											"end": 2517,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 2481,
											"end": 2517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2481,
											"end": 2517,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2481,
											"end": 2517,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2481,
											"end": 2517,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2481,
											"end": 2517,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2481,
											"end": 2517,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2481,
											"end": 2517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2481,
											"end": 2517,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 2270,
											"end": 2525,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2216,
											"end": 2525,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2216,
											"end": 2525,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2839,
											"end": 2844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 509,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 365,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 593,
											"end": 670,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 593,
											"end": 670,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 630,
											"end": 637,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 648,
											"end": 664,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 648,
											"end": 664,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 593,
											"end": 670,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 593,
											"end": 670,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 593,
											"end": 670,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 593,
											"end": 670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 676,
											"end": 794,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 676,
											"end": 794,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 763,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 781,
											"end": 786,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 763,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 763,
											"end": 787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 763,
											"end": 787,
											"name": "tag",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 763,
											"end": 787,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 758,
											"end": 761,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 751,
											"end": 788,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 676,
											"end": 794,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 676,
											"end": 794,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 676,
											"end": 794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 893,
											"end": 897,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 931,
											"end": 933,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 920,
											"end": 929,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 916,
											"end": 934,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 908,
											"end": 934,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 908,
											"end": 934,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 1012,
											"end": 1013,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1001,
											"end": 1010,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 997,
											"end": 1014,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 988,
											"end": 994,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 944,
											"end": 1015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "tag",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 800,
											"end": 1022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1226,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 1109,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1219,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1215,
											"end": 1216,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1208,
											"end": 1220,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1355,
											"end": 1477,
											"name": "tag",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 1355,
											"end": 1477,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1428,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 1446,
											"end": 1451,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1428,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 1428,
											"end": 1452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1428,
											"end": 1452,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 1428,
											"end": 1452,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1421,
											"end": 1426,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1418,
											"end": 1453,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1408,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 1408,
											"end": 1471,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1467,
											"end": 1468,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1464,
											"end": 1465,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1457,
											"end": 1469,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1408,
											"end": 1471,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 1408,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1355,
											"end": 1477,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1355,
											"end": 1477,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1529,
											"end": 1534,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1567,
											"end": 1573,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1554,
											"end": 1574,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 1574,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 1574,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1583,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 1610,
											"end": 1615,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1583,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 1583,
											"end": 1616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1583,
											"end": 1616,
											"name": "tag",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 1583,
											"end": 1616,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1483,
											"end": 1622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1957,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 1628,
											"end": 1957,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1687,
											"end": 1693,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1736,
											"end": 1738,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1724,
											"end": 1733,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1715,
											"end": 1722,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1711,
											"end": 1734,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1707,
											"end": 1739,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1704,
											"end": 1823,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1704,
											"end": 1823,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 1704,
											"end": 1823,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1742,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 1742,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 1742,
											"end": 1821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1742,
											"end": 1821,
											"name": "tag",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 1742,
											"end": 1821,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1704,
											"end": 1823,
											"name": "tag",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 1704,
											"end": 1823,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1862,
											"end": 1863,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1887,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 1932,
											"end": 1939,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1923,
											"end": 1929,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1912,
											"end": 1921,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1908,
											"end": 1930,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1887,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 1887,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1887,
											"end": 1940,
											"name": "tag",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 1887,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1877,
											"end": 1940,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1877,
											"end": 1940,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1833,
											"end": 1950,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1957,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1957,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1957,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1957,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1957,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1963,
											"end": 2295,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 1963,
											"end": 2295,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2084,
											"end": 2088,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2124,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2111,
											"end": 2120,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 2125,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2099,
											"end": 2125,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2099,
											"end": 2125,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2135,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 2203,
											"end": 2204,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2192,
											"end": 2201,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2188,
											"end": 2205,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2179,
											"end": 2185,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2135,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2135,
											"end": 2206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2135,
											"end": 2206,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 2135,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2216,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 2284,
											"end": 2286,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2269,
											"end": 2287,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2260,
											"end": 2266,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2216,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2216,
											"end": 2288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2216,
											"end": 2288,
											"name": "tag",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 2216,
											"end": 2288,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1963,
											"end": 2295,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1963,
											"end": 2295,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1963,
											"end": 2295,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1963,
											"end": 2295,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1963,
											"end": 2295,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1963,
											"end": 2295,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2301,
											"end": 2423,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 2301,
											"end": 2423,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2374,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 2392,
											"end": 2397,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2374,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 2374,
											"end": 2398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2374,
											"end": 2398,
											"name": "tag",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 2374,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2372,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2364,
											"end": 2399,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2354,
											"end": 2417,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 2354,
											"end": 2417,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2413,
											"end": 2414,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2410,
											"end": 2411,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2403,
											"end": 2415,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2354,
											"end": 2417,
											"name": "tag",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 2354,
											"end": 2417,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2301,
											"end": 2423,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2301,
											"end": 2423,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2429,
											"end": 2568,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 2429,
											"end": 2568,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2475,
											"end": 2480,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2513,
											"end": 2519,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2520,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2520,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2520,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2529,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 2556,
											"end": 2561,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2529,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 2529,
											"end": 2562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2529,
											"end": 2562,
											"name": "tag",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 2529,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2429,
											"end": 2568,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2429,
											"end": 2568,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2429,
											"end": 2568,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2429,
											"end": 2568,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2429,
											"end": 2568,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2574,
											"end": 2903,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 2574,
											"end": 2903,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2633,
											"end": 2639,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2682,
											"end": 2684,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2670,
											"end": 2679,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2661,
											"end": 2668,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2657,
											"end": 2680,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2653,
											"end": 2685,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 2650,
											"end": 2769,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2650,
											"end": 2769,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 2650,
											"end": 2769,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 2688,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 2688,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2767,
											"name": "tag",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 2688,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2650,
											"end": 2769,
											"name": "tag",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 2650,
											"end": 2769,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2808,
											"end": 2809,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2833,
											"end": 2886,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 2878,
											"end": 2885,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2869,
											"end": 2875,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2858,
											"end": 2867,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2854,
											"end": 2876,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2833,
											"end": 2886,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 2833,
											"end": 2886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2833,
											"end": 2886,
											"name": "tag",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 2833,
											"end": 2886,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2823,
											"end": 2886,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2823,
											"end": 2886,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2779,
											"end": 2896,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2574,
											"end": 2903,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2574,
											"end": 2903,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2574,
											"end": 2903,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2574,
											"end": 2903,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2574,
											"end": 2903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2909,
											"end": 3078,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 2909,
											"end": 3078,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2993,
											"end": 3004,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3027,
											"end": 3033,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3022,
											"end": 3025,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3015,
											"end": 3034,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3067,
											"end": 3071,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3062,
											"end": 3065,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3058,
											"end": 3072,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3043,
											"end": 3072,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3043,
											"end": 3072,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2909,
											"end": 3078,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2909,
											"end": 3078,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2909,
											"end": 3078,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2909,
											"end": 3078,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2909,
											"end": 3078,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3084,
											"end": 3250,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 3084,
											"end": 3250,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3224,
											"end": 3242,
											"name": "PUSH",
											"source": 3,
											"value": "4E6F207374616B656420616D6F756E7400000000000000000000000000000000"
										},
										{
											"begin": 3220,
											"end": 3221,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3212,
											"end": 3218,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3208,
											"end": 3222,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3201,
											"end": 3243,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3084,
											"end": 3250,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3084,
											"end": 3250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3256,
											"end": 3622,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 3256,
											"end": 3622,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3398,
											"end": 3401,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3419,
											"end": 3486,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 3483,
											"end": 3485,
											"name": "PUSH",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 3478,
											"end": 3481,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3419,
											"end": 3486,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 3419,
											"end": 3486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3419,
											"end": 3486,
											"name": "tag",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 3419,
											"end": 3486,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3412,
											"end": 3486,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3412,
											"end": 3486,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3495,
											"end": 3588,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 3584,
											"end": 3587,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3495,
											"end": 3588,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 3495,
											"end": 3588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3495,
											"end": 3588,
											"name": "tag",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 3495,
											"end": 3588,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3613,
											"end": 3615,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3608,
											"end": 3611,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3604,
											"end": 3616,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3597,
											"end": 3616,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3597,
											"end": 3616,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3256,
											"end": 3622,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3256,
											"end": 3622,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3256,
											"end": 3622,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3256,
											"end": 3622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3628,
											"end": 4047,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 3628,
											"end": 4047,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3794,
											"end": 3798,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3832,
											"end": 3834,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3821,
											"end": 3830,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3817,
											"end": 3835,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3835,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3881,
											"end": 3890,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3875,
											"end": 3879,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3871,
											"end": 3891,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3867,
											"end": 3868,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3856,
											"end": 3865,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3852,
											"end": 3869,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3845,
											"end": 3892,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3909,
											"end": 4040,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 4035,
											"end": 4039,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3909,
											"end": 4040,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 3909,
											"end": 4040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3909,
											"end": 4040,
											"name": "tag",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 3909,
											"end": 4040,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3901,
											"end": 4040,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3901,
											"end": 4040,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3628,
											"end": 4047,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3628,
											"end": 4047,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3628,
											"end": 4047,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3628,
											"end": 4047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4053,
											"end": 4230,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 4053,
											"end": 4230,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4193,
											"end": 4222,
											"name": "PUSH",
											"source": 3,
											"value": "5374616B696E6720706572696F64206E6F74206F766572207965740000000000"
										},
										{
											"begin": 4189,
											"end": 4190,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4181,
											"end": 4187,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4177,
											"end": 4191,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4170,
											"end": 4223,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4053,
											"end": 4230,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4053,
											"end": 4230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4236,
											"end": 4602,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 4236,
											"end": 4602,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4378,
											"end": 4381,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4399,
											"end": 4466,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 4463,
											"end": 4465,
											"name": "PUSH",
											"source": 3,
											"value": "1B"
										},
										{
											"begin": 4458,
											"end": 4461,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4399,
											"end": 4466,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 4399,
											"end": 4466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4399,
											"end": 4466,
											"name": "tag",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 4399,
											"end": 4466,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4392,
											"end": 4466,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4392,
											"end": 4466,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4475,
											"end": 4568,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 4564,
											"end": 4567,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4475,
											"end": 4568,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 4475,
											"end": 4568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4475,
											"end": 4568,
											"name": "tag",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 4475,
											"end": 4568,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4593,
											"end": 4595,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4588,
											"end": 4591,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4584,
											"end": 4596,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4577,
											"end": 4596,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4577,
											"end": 4596,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4236,
											"end": 4602,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4236,
											"end": 4602,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4236,
											"end": 4602,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4236,
											"end": 4602,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4608,
											"end": 5027,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 4608,
											"end": 5027,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4774,
											"end": 4778,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4812,
											"end": 4814,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4801,
											"end": 4810,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4797,
											"end": 4815,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4789,
											"end": 4815,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4789,
											"end": 4815,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4861,
											"end": 4870,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4855,
											"end": 4859,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4851,
											"end": 4871,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4847,
											"end": 4848,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4836,
											"end": 4845,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4832,
											"end": 4849,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4825,
											"end": 4872,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4889,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 5015,
											"end": 5019,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4889,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 4889,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4889,
											"end": 5020,
											"name": "tag",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 4889,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4881,
											"end": 5020,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4881,
											"end": 5020,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4608,
											"end": 5027,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4608,
											"end": 5027,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4608,
											"end": 5027,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4608,
											"end": 5027,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5033,
											"end": 5365,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 5033,
											"end": 5365,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5154,
											"end": 5158,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5192,
											"end": 5194,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5181,
											"end": 5190,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5177,
											"end": 5195,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5169,
											"end": 5195,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5169,
											"end": 5195,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5205,
											"end": 5276,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 5273,
											"end": 5274,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5262,
											"end": 5271,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5258,
											"end": 5275,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5249,
											"end": 5255,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5205,
											"end": 5276,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 5205,
											"end": 5276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5205,
											"end": 5276,
											"name": "tag",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 5205,
											"end": 5276,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5286,
											"end": 5358,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 5354,
											"end": 5356,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5343,
											"end": 5352,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5339,
											"end": 5357,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5330,
											"end": 5336,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5286,
											"end": 5358,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 5286,
											"end": 5358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5286,
											"end": 5358,
											"name": "tag",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 5286,
											"end": 5358,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5033,
											"end": 5365,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 5033,
											"end": 5365,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5033,
											"end": 5365,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5033,
											"end": 5365,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5033,
											"end": 5365,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5033,
											"end": 5365,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5371,
											"end": 5461,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 5371,
											"end": 5461,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5405,
											"end": 5412,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5448,
											"end": 5453,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5434,
											"end": 5455,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5423,
											"end": 5455,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5423,
											"end": 5455,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5371,
											"end": 5461,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5371,
											"end": 5461,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5371,
											"end": 5461,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5371,
											"end": 5461,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5467,
											"end": 5583,
											"name": "tag",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 5467,
											"end": 5583,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 5552,
											"end": 5557,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 5537,
											"end": 5558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5558,
											"name": "tag",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 5537,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5530,
											"end": 5535,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5527,
											"end": 5559,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5577,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 5517,
											"end": 5577,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5573,
											"end": 5574,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5570,
											"end": 5571,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5563,
											"end": 5575,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5577,
											"name": "tag",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 5517,
											"end": 5577,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5467,
											"end": 5583,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5467,
											"end": 5583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5726,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 5589,
											"end": 5726,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5643,
											"end": 5648,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5674,
											"end": 5680,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5668,
											"end": 5681,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5659,
											"end": 5681,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5659,
											"end": 5681,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5690,
											"end": 5720,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 5714,
											"end": 5719,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5690,
											"end": 5720,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 5690,
											"end": 5720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5690,
											"end": 5720,
											"name": "tag",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 5690,
											"end": 5720,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5726,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5726,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5726,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5726,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5726,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5732,
											"end": 6077,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 5732,
											"end": 6077,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5805,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5848,
											"end": 5850,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5836,
											"end": 5845,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5827,
											"end": 5834,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5823,
											"end": 5846,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5819,
											"end": 5851,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 5816,
											"end": 5935,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5816,
											"end": 5935,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 5816,
											"end": 5935,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5854,
											"end": 5933,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 5854,
											"end": 5933,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 5854,
											"end": 5933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5854,
											"end": 5933,
											"name": "tag",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 5854,
											"end": 5933,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5816,
											"end": 5935,
											"name": "tag",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 5816,
											"end": 5935,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5974,
											"end": 5975,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5999,
											"end": 6060,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 6052,
											"end": 6059,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6043,
											"end": 6049,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6032,
											"end": 6041,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6028,
											"end": 6050,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5999,
											"end": 6060,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 5999,
											"end": 6060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5999,
											"end": 6060,
											"name": "tag",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 5999,
											"end": 6060,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5989,
											"end": 6060,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5989,
											"end": 6060,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5945,
											"end": 6070,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5732,
											"end": 6077,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5732,
											"end": 6077,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5732,
											"end": 6077,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5732,
											"end": 6077,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5732,
											"end": 6077,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6083,
											"end": 6226,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 6083,
											"end": 6226,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6140,
											"end": 6145,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6171,
											"end": 6177,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6165,
											"end": 6178,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6178,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6178,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6187,
											"end": 6220,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 6214,
											"end": 6219,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6187,
											"end": 6220,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 6187,
											"end": 6220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6187,
											"end": 6220,
											"name": "tag",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 6187,
											"end": 6220,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6083,
											"end": 6226,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6083,
											"end": 6226,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6083,
											"end": 6226,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6083,
											"end": 6226,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6083,
											"end": 6226,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6232,
											"end": 6583,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 6232,
											"end": 6583,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6302,
											"end": 6308,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6351,
											"end": 6353,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6339,
											"end": 6348,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6330,
											"end": 6337,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6326,
											"end": 6349,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6322,
											"end": 6354,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 6319,
											"end": 6438,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6319,
											"end": 6438,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 6319,
											"end": 6438,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6357,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 6357,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 6357,
											"end": 6436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6357,
											"end": 6436,
											"name": "tag",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 6357,
											"end": 6436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6319,
											"end": 6438,
											"name": "tag",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 6319,
											"end": 6438,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6477,
											"end": 6478,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6502,
											"end": 6566,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 6558,
											"end": 6565,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6549,
											"end": 6555,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6538,
											"end": 6547,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6534,
											"end": 6556,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6502,
											"end": 6566,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 6502,
											"end": 6566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6502,
											"end": 6566,
											"name": "tag",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 6502,
											"end": 6566,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6492,
											"end": 6566,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6492,
											"end": 6566,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6448,
											"end": 6576,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6232,
											"end": 6583,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6232,
											"end": 6583,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6232,
											"end": 6583,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6232,
											"end": 6583,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6232,
											"end": 6583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6589,
											"end": 6760,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 6589,
											"end": 6760,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6729,
											"end": 6752,
											"name": "PUSH",
											"source": 3,
											"value": "41646472657373207A65726F2064657465637465640000000000000000000000"
										},
										{
											"begin": 6725,
											"end": 6726,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6717,
											"end": 6723,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6713,
											"end": 6727,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6706,
											"end": 6753,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6589,
											"end": 6760,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6589,
											"end": 6760,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6766,
											"end": 7132,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 6766,
											"end": 7132,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6908,
											"end": 6911,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6929,
											"end": 6996,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 6993,
											"end": 6995,
											"name": "PUSH",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 6988,
											"end": 6991,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6929,
											"end": 6996,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 6929,
											"end": 6996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6929,
											"end": 6996,
											"name": "tag",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 6929,
											"end": 6996,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6922,
											"end": 6996,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6922,
											"end": 6996,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7005,
											"end": 7098,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 7094,
											"end": 7097,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7005,
											"end": 7098,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 7005,
											"end": 7098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7005,
											"end": 7098,
											"name": "tag",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 7005,
											"end": 7098,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7123,
											"end": 7125,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7118,
											"end": 7121,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7114,
											"end": 7126,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7107,
											"end": 7126,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7107,
											"end": 7126,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6766,
											"end": 7132,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6766,
											"end": 7132,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6766,
											"end": 7132,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6766,
											"end": 7132,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7138,
											"end": 7557,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 7138,
											"end": 7557,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7304,
											"end": 7308,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7342,
											"end": 7344,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7331,
											"end": 7340,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7327,
											"end": 7345,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7319,
											"end": 7345,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7319,
											"end": 7345,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7391,
											"end": 7400,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7385,
											"end": 7389,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7381,
											"end": 7401,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7377,
											"end": 7378,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7366,
											"end": 7375,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7362,
											"end": 7379,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7355,
											"end": 7402,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7419,
											"end": 7550,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 7545,
											"end": 7549,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7419,
											"end": 7550,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 7419,
											"end": 7550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7419,
											"end": 7550,
											"name": "tag",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 7419,
											"end": 7550,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7411,
											"end": 7550,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7411,
											"end": 7550,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7138,
											"end": 7557,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7138,
											"end": 7557,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7138,
											"end": 7557,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7138,
											"end": 7557,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7563,
											"end": 7735,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 7563,
											"end": 7735,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7703,
											"end": 7727,
											"name": "PUSH",
											"source": 3,
											"value": "43616E2774207374616B65206E756C6C2076616C756500000000000000000000"
										},
										{
											"begin": 7699,
											"end": 7700,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7691,
											"end": 7697,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7687,
											"end": 7701,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7680,
											"end": 7728,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7563,
											"end": 7735,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7563,
											"end": 7735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7741,
											"end": 8107,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 7741,
											"end": 8107,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7883,
											"end": 7886,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7904,
											"end": 7971,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 7968,
											"end": 7970,
											"name": "PUSH",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 7963,
											"end": 7966,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7904,
											"end": 7971,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 7904,
											"end": 7971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7904,
											"end": 7971,
											"name": "tag",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 7904,
											"end": 7971,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7897,
											"end": 7971,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7897,
											"end": 7971,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7980,
											"end": 8073,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 8069,
											"end": 8072,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7980,
											"end": 8073,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 7980,
											"end": 8073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7980,
											"end": 8073,
											"name": "tag",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 7980,
											"end": 8073,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8098,
											"end": 8100,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8093,
											"end": 8096,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8089,
											"end": 8101,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8082,
											"end": 8101,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8082,
											"end": 8101,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7741,
											"end": 8107,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7741,
											"end": 8107,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7741,
											"end": 8107,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7741,
											"end": 8107,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8113,
											"end": 8532,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 8113,
											"end": 8532,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8279,
											"end": 8283,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8317,
											"end": 8319,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8306,
											"end": 8315,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8302,
											"end": 8320,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8294,
											"end": 8320,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8294,
											"end": 8320,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8366,
											"end": 8375,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8360,
											"end": 8364,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8356,
											"end": 8376,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8352,
											"end": 8353,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8341,
											"end": 8350,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8337,
											"end": 8354,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8330,
											"end": 8377,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8394,
											"end": 8525,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 8520,
											"end": 8524,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8394,
											"end": 8525,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 8394,
											"end": 8525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8394,
											"end": 8525,
											"name": "tag",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 8394,
											"end": 8525,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8386,
											"end": 8525,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8386,
											"end": 8525,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8113,
											"end": 8532,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8113,
											"end": 8532,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8113,
											"end": 8532,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8113,
											"end": 8532,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8538,
											"end": 8706,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 8538,
											"end": 8706,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8678,
											"end": 8698,
											"name": "PUSH",
											"source": 3,
											"value": "496E73756666696369656E742066756E64730000000000000000000000000000"
										},
										{
											"begin": 8674,
											"end": 8675,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8666,
											"end": 8672,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8662,
											"end": 8676,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8655,
											"end": 8699,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8538,
											"end": 8706,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8538,
											"end": 8706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8712,
											"end": 9078,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 8712,
											"end": 9078,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8854,
											"end": 8857,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8875,
											"end": 8942,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 8939,
											"end": 8941,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 8934,
											"end": 8937,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8875,
											"end": 8942,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 8875,
											"end": 8942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8875,
											"end": 8942,
											"name": "tag",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 8875,
											"end": 8942,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8868,
											"end": 8942,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8868,
											"end": 8942,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8951,
											"end": 9044,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 9040,
											"end": 9043,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8951,
											"end": 9044,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 8951,
											"end": 9044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8951,
											"end": 9044,
											"name": "tag",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 8951,
											"end": 9044,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9069,
											"end": 9071,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9064,
											"end": 9067,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9060,
											"end": 9072,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9053,
											"end": 9072,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9053,
											"end": 9072,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8712,
											"end": 9078,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8712,
											"end": 9078,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8712,
											"end": 9078,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8712,
											"end": 9078,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9084,
											"end": 9503,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 9084,
											"end": 9503,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9250,
											"end": 9254,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9288,
											"end": 9290,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9277,
											"end": 9286,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9273,
											"end": 9291,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9265,
											"end": 9291,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9265,
											"end": 9291,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9337,
											"end": 9346,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9331,
											"end": 9335,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9327,
											"end": 9347,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9323,
											"end": 9324,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9312,
											"end": 9321,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9308,
											"end": 9325,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9301,
											"end": 9348,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9365,
											"end": 9496,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 9491,
											"end": 9495,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9365,
											"end": 9496,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 9365,
											"end": 9496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9365,
											"end": 9496,
											"name": "tag",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 9365,
											"end": 9496,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9357,
											"end": 9496,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9357,
											"end": 9496,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9084,
											"end": 9503,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9084,
											"end": 9503,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9084,
											"end": 9503,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9084,
											"end": 9503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9509,
											"end": 9673,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 9509,
											"end": 9673,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9649,
											"end": 9665,
											"name": "PUSH",
											"source": 3,
											"value": "416C7265616479207374616B6564000000000000000000000000000000000000"
										},
										{
											"begin": 9645,
											"end": 9646,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9637,
											"end": 9643,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9633,
											"end": 9647,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9626,
											"end": 9666,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9509,
											"end": 9673,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9509,
											"end": 9673,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9679,
											"end": 10045,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 9679,
											"end": 10045,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9821,
											"end": 9824,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9842,
											"end": 9909,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 9906,
											"end": 9908,
											"name": "PUSH",
											"source": 3,
											"value": "E"
										},
										{
											"begin": 9901,
											"end": 9904,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9842,
											"end": 9909,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 9842,
											"end": 9909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9842,
											"end": 9909,
											"name": "tag",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 9842,
											"end": 9909,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9835,
											"end": 9909,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9835,
											"end": 9909,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9918,
											"end": 10011,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 10007,
											"end": 10010,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9918,
											"end": 10011,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 9918,
											"end": 10011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9918,
											"end": 10011,
											"name": "tag",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 9918,
											"end": 10011,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10036,
											"end": 10038,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10031,
											"end": 10034,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10027,
											"end": 10039,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10020,
											"end": 10039,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10020,
											"end": 10039,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9679,
											"end": 10045,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9679,
											"end": 10045,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9679,
											"end": 10045,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9679,
											"end": 10045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10051,
											"end": 10470,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 10051,
											"end": 10470,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10217,
											"end": 10221,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10255,
											"end": 10257,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10244,
											"end": 10253,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10240,
											"end": 10258,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10232,
											"end": 10258,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10232,
											"end": 10258,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10304,
											"end": 10313,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10298,
											"end": 10302,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10294,
											"end": 10314,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10290,
											"end": 10291,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10279,
											"end": 10288,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10275,
											"end": 10292,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10268,
											"end": 10315,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10332,
											"end": 10463,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 10458,
											"end": 10462,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10332,
											"end": 10463,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 10332,
											"end": 10463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10332,
											"end": 10463,
											"name": "tag",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 10332,
											"end": 10463,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10324,
											"end": 10463,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10324,
											"end": 10463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10051,
											"end": 10470,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10051,
											"end": 10470,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10051,
											"end": 10470,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10051,
											"end": 10470,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10476,
											"end": 10918,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 10476,
											"end": 10918,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10625,
											"end": 10629,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10663,
											"end": 10665,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 10652,
											"end": 10661,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10648,
											"end": 10666,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10640,
											"end": 10666,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10640,
											"end": 10666,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10676,
											"end": 10747,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 10744,
											"end": 10745,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10733,
											"end": 10742,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10729,
											"end": 10746,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10720,
											"end": 10726,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 10676,
											"end": 10747,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 10676,
											"end": 10747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10676,
											"end": 10747,
											"name": "tag",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 10676,
											"end": 10747,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10757,
											"end": 10829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 10825,
											"end": 10827,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10814,
											"end": 10823,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10810,
											"end": 10828,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10801,
											"end": 10807,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 10757,
											"end": 10829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 10757,
											"end": 10829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10757,
											"end": 10829,
											"name": "tag",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 10757,
											"end": 10829,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10839,
											"end": 10911,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 10907,
											"end": 10909,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10896,
											"end": 10905,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10892,
											"end": 10910,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10883,
											"end": 10889,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10839,
											"end": 10911,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 10839,
											"end": 10911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10839,
											"end": 10911,
											"name": "tag",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 10839,
											"end": 10911,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10476,
											"end": 10918,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 10476,
											"end": 10918,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 10476,
											"end": 10918,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10476,
											"end": 10918,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10476,
											"end": 10918,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10476,
											"end": 10918,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10476,
											"end": 10918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10924,
											"end": 11099,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 10924,
											"end": 11099,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11064,
											"end": 11091,
											"name": "PUSH",
											"source": 3,
											"value": "47697665206974206261636B20746F20746865206F776E657200000000000000"
										},
										{
											"begin": 11060,
											"end": 11061,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11052,
											"end": 11058,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11048,
											"end": 11062,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11041,
											"end": 11092,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10924,
											"end": 11099,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10924,
											"end": 11099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11105,
											"end": 11471,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 11105,
											"end": 11471,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11247,
											"end": 11250,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11268,
											"end": 11335,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 11332,
											"end": 11334,
											"name": "PUSH",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 11327,
											"end": 11330,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11268,
											"end": 11335,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 11268,
											"end": 11335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11268,
											"end": 11335,
											"name": "tag",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 11268,
											"end": 11335,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11261,
											"end": 11335,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11261,
											"end": 11335,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11344,
											"end": 11437,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 11433,
											"end": 11436,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11344,
											"end": 11437,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 11344,
											"end": 11437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11344,
											"end": 11437,
											"name": "tag",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 11344,
											"end": 11437,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11462,
											"end": 11464,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11457,
											"end": 11460,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11453,
											"end": 11465,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11446,
											"end": 11465,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11446,
											"end": 11465,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11105,
											"end": 11471,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11105,
											"end": 11471,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11105,
											"end": 11471,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11105,
											"end": 11471,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11477,
											"end": 11896,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 11477,
											"end": 11896,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11643,
											"end": 11647,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11681,
											"end": 11683,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11670,
											"end": 11679,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11666,
											"end": 11684,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11658,
											"end": 11684,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11658,
											"end": 11684,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11730,
											"end": 11739,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11724,
											"end": 11728,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11720,
											"end": 11740,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11716,
											"end": 11717,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11705,
											"end": 11714,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11701,
											"end": 11718,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11694,
											"end": 11741,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11758,
											"end": 11889,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 11884,
											"end": 11888,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11758,
											"end": 11889,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 11758,
											"end": 11889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11758,
											"end": 11889,
											"name": "tag",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 11758,
											"end": 11889,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11750,
											"end": 11889,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11750,
											"end": 11889,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11477,
											"end": 11896,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11477,
											"end": 11896,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11477,
											"end": 11896,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11477,
											"end": 11896,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11902,
											"end": 12065,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 11902,
											"end": 12065,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12042,
											"end": 12057,
											"name": "PUSH",
											"source": 3,
											"value": "41646472657373207A65726F3F00000000000000000000000000000000000000"
										},
										{
											"begin": 12038,
											"end": 12039,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12030,
											"end": 12036,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12026,
											"end": 12040,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12019,
											"end": 12058,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11902,
											"end": 12065,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11902,
											"end": 12065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12071,
											"end": 12437,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 12071,
											"end": 12437,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12213,
											"end": 12216,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12234,
											"end": 12301,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 12298,
											"end": 12300,
											"name": "PUSH",
											"source": 3,
											"value": "D"
										},
										{
											"begin": 12293,
											"end": 12296,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12234,
											"end": 12301,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 12234,
											"end": 12301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12234,
											"end": 12301,
											"name": "tag",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 12234,
											"end": 12301,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12227,
											"end": 12301,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12227,
											"end": 12301,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12310,
											"end": 12403,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "236"
										},
										{
											"begin": 12399,
											"end": 12402,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12310,
											"end": 12403,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 12310,
											"end": 12403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12310,
											"end": 12403,
											"name": "tag",
											"source": 3,
											"value": "236"
										},
										{
											"begin": 12310,
											"end": 12403,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12428,
											"end": 12430,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 12423,
											"end": 12426,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12419,
											"end": 12431,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12412,
											"end": 12431,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12412,
											"end": 12431,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12071,
											"end": 12437,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12071,
											"end": 12437,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12071,
											"end": 12437,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12071,
											"end": 12437,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12443,
											"end": 12862,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 12443,
											"end": 12862,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12609,
											"end": 12613,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12647,
											"end": 12649,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 12636,
											"end": 12645,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12632,
											"end": 12650,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12624,
											"end": 12650,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12624,
											"end": 12650,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12696,
											"end": 12705,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12690,
											"end": 12694,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12686,
											"end": 12706,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 12682,
											"end": 12683,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12671,
											"end": 12680,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12667,
											"end": 12684,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12660,
											"end": 12707,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12724,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 12850,
											"end": 12854,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12724,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 12724,
											"end": 12855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12724,
											"end": 12855,
											"name": "tag",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 12724,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12716,
											"end": 12855,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12716,
											"end": 12855,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12443,
											"end": 12862,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12443,
											"end": 12862,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12443,
											"end": 12862,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12443,
											"end": 12862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12868,
											"end": 13200,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 12868,
											"end": 13200,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12989,
											"end": 12993,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13027,
											"end": 13029,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 13016,
											"end": 13025,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13012,
											"end": 13030,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13004,
											"end": 13030,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13004,
											"end": 13030,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13040,
											"end": 13111,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 13108,
											"end": 13109,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13097,
											"end": 13106,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 13093,
											"end": 13110,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13084,
											"end": 13090,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 13040,
											"end": 13111,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 13040,
											"end": 13111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13040,
											"end": 13111,
											"name": "tag",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 13040,
											"end": 13111,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13121,
											"end": 13193,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 13189,
											"end": 13191,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 13178,
											"end": 13187,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 13174,
											"end": 13192,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13165,
											"end": 13171,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 13121,
											"end": 13193,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 13121,
											"end": 13193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13121,
											"end": 13193,
											"name": "tag",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 13121,
											"end": 13193,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12868,
											"end": 13200,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 12868,
											"end": 13200,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 12868,
											"end": 13200,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12868,
											"end": 13200,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12868,
											"end": 13200,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12868,
											"end": 13200,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13206,
											"end": 13386,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 13206,
											"end": 13386,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13254,
											"end": 13331,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13251,
											"end": 13252,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13244,
											"end": 13332,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 13351,
											"end": 13355,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 13348,
											"end": 13349,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 13341,
											"end": 13356,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 13375,
											"end": 13379,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 13372,
											"end": 13373,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13365,
											"end": 13380,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 13392,
											"end": 13583,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 13392,
											"end": 13583,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13432,
											"end": 13435,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13451,
											"end": 13471,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 13469,
											"end": 13470,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13451,
											"end": 13471,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 13451,
											"end": 13471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13451,
											"end": 13471,
											"name": "tag",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 13451,
											"end": 13471,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13446,
											"end": 13471,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 13446,
											"end": 13471,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13485,
											"end": 13505,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 13503,
											"end": 13504,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 13485,
											"end": 13505,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 13485,
											"end": 13505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13485,
											"end": 13505,
											"name": "tag",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 13485,
											"end": 13505,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13480,
											"end": 13505,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 13480,
											"end": 13505,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13528,
											"end": 13529,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13525,
											"end": 13526,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13521,
											"end": 13530,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13514,
											"end": 13530,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13514,
											"end": 13530,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13549,
											"end": 13552,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 13546,
											"end": 13547,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13543,
											"end": 13553,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 13540,
											"end": 13576,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 13540,
											"end": 13576,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 13540,
											"end": 13576,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 13556,
											"end": 13574,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 13556,
											"end": 13574,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 13556,
											"end": 13574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13556,
											"end": 13574,
											"name": "tag",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 13556,
											"end": 13574,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13540,
											"end": 13576,
											"name": "tag",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 13540,
											"end": 13576,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13392,
											"end": 13583,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 13392,
											"end": 13583,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 13392,
											"end": 13583,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13392,
											"end": 13583,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13392,
											"end": 13583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"assignment4/staked.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"Address()": "3aeaccf5",
							"owner()": "8da5cb5b",
							"showContractBalance()": "901c947f",
							"stake(uint256)": "a694fc3a",
							"stakers(address)": "9168ae72",
							"stakingDuration()": "8005a7de",
							"transferOwnership(address)": "f2fde38b",
							"withdraw()": "3ccfd60b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_Address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_stakingDuration\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"Address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"showContractBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"stakedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"assignment4/staked.sol\":\"StakingContract\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"assignment4/staked.sol\":{\"keccak256\":\"0xf6ee41c5ac35a2ee67dbfac4c7dd84b24e90b476e1a81a60b75cd928a52864a5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://533738fd2588ab59a62f0b4e79cd0768c5d80c52594d52ea8dfbba26d22496b5\",\"dweb:/ipfs/QmQWynad5g2rUBuRudevsdBdoCDYhconzKYKqMd3JnTkpi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 420,
								"contract": "assignment4/staked.sol:StakingContract",
								"label": "Address",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 422,
								"contract": "assignment4/staked.sol:StakingContract",
								"label": "owner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 429,
								"contract": "assignment4/staked.sol:StakingContract",
								"label": "stakingDuration",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 434,
								"contract": "assignment4/staked.sol:StakingContract",
								"label": "stakers",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_struct(Staker)427_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(Staker)427_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct StakingContract.Staker)",
								"numberOfBytes": "32",
								"value": "t_struct(Staker)427_storage"
							},
							"t_struct(Staker)427_storage": {
								"encoding": "inplace",
								"label": "struct StakingContract.Staker",
								"members": [
									{
										"astId": 424,
										"contract": "assignment4/staked.sol:StakingContract",
										"label": "stakedAmount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 426,
										"contract": "assignment4/staked.sol:StakingContract",
										"label": "startTime",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "213:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "395:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "404:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "426:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "446:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:0"
									},
									"src": "389:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "626:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "635:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "658:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "683:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:0"
									},
									"src": "620:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "930:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "970:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:0"
									},
									"scope": 77,
									"src": "911:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1221:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1233:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1266:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:0"
									},
									"scope": 77,
									"src": "1203:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1566:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1581:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1621:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:0"
									},
									"scope": 77,
									"src": "1547:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2325:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2375:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:0"
									},
									"scope": 77,
									"src": "2308:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2711:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2725:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2737:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2770:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:0"
									},
									"scope": 77,
									"src": "2689:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "203:2575:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						}
					],
					"src": "106:2673:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							389
						]
					},
					"id": 390,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 80,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:1",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 389,
							"linearizedBaseContracts": [
								389
							],
							"name": "SafeMath",
							"nameLocation": "490:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 111,
										"nodeType": "Block",
										"src": "717:140:1",
										"statements": [
											{
												"id": 110,
												"nodeType": "UncheckedBlock",
												"src": "727:124:1",
												"statements": [
													{
														"assignments": [
															93
														],
														"declarations": [
															{
																"constant": false,
																"id": 93,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:1",
																"nodeType": "VariableDeclaration",
																"scope": 110,
																"src": "751:9:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 92,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 97,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 96,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 94,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 83,
																"src": "763:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 95,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 85,
																"src": "767:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 98,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 93,
																"src": "786:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 99,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 83,
																"src": "790:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 105,
														"nodeType": "IfStatement",
														"src": "782:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 101,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 102,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 103,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 91,
															"id": 104,
															"nodeType": "Return",
															"src": "793:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 106,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 107,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 93,
																	"src": "838:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 108,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 91,
														"id": 109,
														"nodeType": "Return",
														"src": "824:16:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:1",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 112,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "657:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 82,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "668:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 84,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:1"
									},
									"returnParameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "702:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 87,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "708:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 89,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:1"
									},
									"scope": 389,
									"src": "641:216:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 139,
										"nodeType": "Block",
										"src": "1078:113:1",
										"statements": [
											{
												"id": 138,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 124,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 117,
																"src": "1116:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 125,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "1120:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 131,
														"nodeType": "IfStatement",
														"src": "1112:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 127,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 128,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 129,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 123,
															"id": 130,
															"nodeType": "Return",
															"src": "1123:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 133,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 115,
																		"src": "1168:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 134,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 117,
																		"src": "1172:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 136,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 123,
														"id": 137,
														"nodeType": "Return",
														"src": "1154:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 113,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:1",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1018:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1029:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:1"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1063:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 119,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1069:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:1"
									},
									"scope": 389,
									"src": "1002:189:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 181,
										"nodeType": "Block",
										"src": "1415:417:1",
										"statements": [
											{
												"id": 180,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 154,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 152,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 143,
																"src": "1683:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 153,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 159,
														"nodeType": "IfStatement",
														"src": "1679:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 155,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 156,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 157,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 151,
															"id": 158,
															"nodeType": "Return",
															"src": "1691:16:1"
														}
													},
													{
														"assignments": [
															161
														],
														"declarations": [
															{
																"constant": false,
																"id": 161,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:1",
																"nodeType": "VariableDeclaration",
																"scope": 180,
																"src": "1721:9:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 160,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 165,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 164,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 162,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 143,
																"src": "1733:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 163,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 145,
																"src": "1737:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 168,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 166,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "1756:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 167,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 143,
																	"src": "1760:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 169,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 145,
																"src": "1765:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 175,
														"nodeType": "IfStatement",
														"src": "1752:33:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 171,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 172,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 173,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 151,
															"id": 174,
															"nodeType": "Return",
															"src": "1768:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 176,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 177,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "1813:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 178,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 151,
														"id": 179,
														"nodeType": "Return",
														"src": "1799:16:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:1",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 182,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1355:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1366:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:1"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1400:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 147,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1406:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:1"
									},
									"scope": 389,
									"src": "1339:493:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 209,
										"nodeType": "Block",
										"src": "2057:114:1",
										"statements": [
											{
												"id": 208,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 196,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 194,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 187,
																"src": "2095:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 195,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 201,
														"nodeType": "IfStatement",
														"src": "2091:29:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 197,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 198,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 199,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 193,
															"id": 200,
															"nodeType": "Return",
															"src": "2103:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 202,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 205,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 203,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 185,
																		"src": "2148:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 204,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 187,
																		"src": "2152:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 206,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 193,
														"id": 207,
														"nodeType": "Return",
														"src": "2134:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:1",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 210,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "1997:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "2008:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "2042:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "2048:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:1"
									},
									"scope": 389,
									"src": "1981:190:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 237,
										"nodeType": "Block",
										"src": "2406:114:1",
										"statements": [
											{
												"id": 236,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 224,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 222,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 215,
																"src": "2444:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 223,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 229,
														"nodeType": "IfStatement",
														"src": "2440:29:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 225,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 226,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 227,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 221,
															"id": 228,
															"nodeType": "Return",
															"src": "2452:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 233,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 231,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 213,
																		"src": "2497:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 232,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 215,
																		"src": "2501:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 234,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 221,
														"id": 235,
														"nodeType": "Return",
														"src": "2483:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 211,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 238,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2346:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2357:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:1"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2391:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 217,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2397:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:1"
									},
									"scope": 389,
									"src": "2330:190:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 252,
										"nodeType": "Block",
										"src": "2822:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 248,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 241,
														"src": "2839:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 249,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "2843:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 247,
												"id": 251,
												"nodeType": "Return",
												"src": "2832:12:1"
											}
										]
									},
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:1",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 253,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "2768:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "2779:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:1"
									},
									"returnParameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "2813:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:1"
									},
									"scope": 389,
									"src": "2755:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 267,
										"nodeType": "Block",
										"src": "3189:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 263,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "3206:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 264,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 258,
														"src": "3210:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 262,
												"id": 266,
												"nodeType": "Return",
												"src": "3199:12:1"
											}
										]
									},
									"documentation": {
										"id": 254,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:1",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 268,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "3135:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "3146:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:1"
									},
									"returnParameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "3180:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:1"
									},
									"scope": 389,
									"src": "3122:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 282,
										"nodeType": "Block",
										"src": "3532:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 278,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 271,
														"src": "3549:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 279,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 273,
														"src": "3553:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 277,
												"id": 281,
												"nodeType": "Return",
												"src": "3542:12:1"
											}
										]
									},
									"documentation": {
										"id": 269,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:1",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 283,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "3478:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "3489:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:1"
									},
									"returnParameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "3523:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:1"
									},
									"scope": 389,
									"src": "3465:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 297,
										"nodeType": "Block",
										"src": "3917:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 293,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 286,
														"src": "3934:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 294,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 288,
														"src": "3938:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 292,
												"id": 296,
												"nodeType": "Return",
												"src": "3927:12:1"
											}
										]
									},
									"documentation": {
										"id": 284,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:1",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 298,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "3863:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "3874:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:1"
									},
									"returnParameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "3908:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:1"
									},
									"scope": 389,
									"src": "3850:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 312,
										"nodeType": "Block",
										"src": "4466:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 308,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 301,
														"src": "4483:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 309,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 303,
														"src": "4487:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 307,
												"id": 311,
												"nodeType": "Return",
												"src": "4476:12:1"
											}
										]
									},
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 313,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "4412:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "4423:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:1"
									},
									"returnParameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "4457:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:1"
									},
									"scope": 389,
									"src": "4399:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 337,
										"nodeType": "Block",
										"src": "5054:106:1",
										"statements": [
											{
												"id": 336,
												"nodeType": "UncheckedBlock",
												"src": "5064:90:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 328,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 326,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 318,
																		"src": "5096:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 327,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 316,
																		"src": "5101:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5096:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 329,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 320,
																	"src": "5104:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 325,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5088:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5088:29:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 331,
														"nodeType": "ExpressionStatement",
														"src": "5088:29:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 332,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 316,
																"src": "5138:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 333,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 318,
																"src": "5142:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5138:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 324,
														"id": 335,
														"nodeType": "Return",
														"src": "5131:12:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 314,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:1",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 338,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4980:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "4972:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4972:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4991:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "4983:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4983:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5008:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "4994:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 319,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4994:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:50:1"
									},
									"returnParameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "5045:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5045:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5044:9:1"
									},
									"scope": 389,
									"src": "4959:201:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "5739:105:1",
										"statements": [
											{
												"id": 361,
												"nodeType": "UncheckedBlock",
												"src": "5749:89:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 353,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 351,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 343,
																		"src": "5781:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 352,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5785:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5781:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 354,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 345,
																	"src": "5788:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 350,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5773:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5773:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 356,
														"nodeType": "ExpressionStatement",
														"src": "5773:28:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 357,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 341,
																"src": "5822:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 358,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 343,
																"src": "5826:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5822:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 349,
														"id": 360,
														"nodeType": "Return",
														"src": "5815:12:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 339,
										"nodeType": "StructuredDocumentation",
										"src": "5166:473:1",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5653:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5665:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "5657:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5657:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5676:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "5668:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5693:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "5679:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 344,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5679:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5656:50:1"
									},
									"returnParameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "5730:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5730:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5729:9:1"
									},
									"scope": 389,
									"src": "5644:200:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 387,
										"nodeType": "Block",
										"src": "6585:105:1",
										"statements": [
											{
												"id": 386,
												"nodeType": "UncheckedBlock",
												"src": "6595:89:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 376,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 368,
																		"src": "6627:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 377,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6631:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6627:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 379,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 370,
																	"src": "6634:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 375,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6619:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6619:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 381,
														"nodeType": "ExpressionStatement",
														"src": "6619:28:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 382,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 366,
																"src": "6668:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 383,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 368,
																"src": "6672:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6668:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 374,
														"id": 385,
														"nodeType": "Return",
														"src": "6661:12:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "5850:635:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 388,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6499:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6511:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6503:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6503:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6522:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6514:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6514:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6539:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6525:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 369,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6525:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6502:50:1"
									},
									"returnParameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6576:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6576:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6575:9:1"
									},
									"scope": 389,
									"src": "6490:200:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 390,
							"src": "482:6210:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "107:6586:1"
				},
				"id": 1
			},
			"assignment4/staked.sol": {
				"ast": {
					"absolutePath": "assignment4/staked.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"SafeMath": [
							389
						],
						"StakingContract": [
							652
						]
					},
					"id": 653,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 391,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "35:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 392,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 653,
							"sourceUnit": 78,
							"src": "63:56:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 393,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 653,
							"sourceUnit": 390,
							"src": "121:57:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StakingContract",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 652,
							"linearizedBaseContracts": [
								652
							],
							"name": "StakingContract",
							"nameLocation": "191:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 396,
									"libraryName": {
										"id": 394,
										"name": "SafeMath",
										"nameLocations": [
											"220:8:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 389,
										"src": "220:8:2"
									},
									"nodeType": "UsingForDirective",
									"src": "214:27:2",
									"typeName": {
										"id": 395,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "233:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"anonymous": false,
									"eventSelector": "1449c6dd7851abc30abf37f57715f492010519147cc2652fbc38202c18a6ee90",
									"id": 404,
									"name": "Staked",
									"nameLocation": "255:6:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"indexed": true,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "278:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "262:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "262:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 400,
												"indexed": true,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "302:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "286:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "286:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 402,
												"indexed": true,
												"mutability": "mutable",
												"name": "startTime",
												"nameLocation": "326:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "310:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "310:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "261:75:2"
									},
									"src": "249:88:2"
								},
								{
									"anonymous": false,
									"eventSelector": "92ccf450a286a957af52509bc1c9939d1a6a481783e142e41e2499f0bb66ebc6",
									"id": 412,
									"name": "Withdrawn",
									"nameLocation": "349:9:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"indexed": true,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "375:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "359:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "359:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 408,
												"indexed": true,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "399:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "383:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 407,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "383:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 410,
												"indexed": true,
												"mutability": "mutable",
												"name": "endTime",
												"nameLocation": "423:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "407:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 409,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "407:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "358:73:2"
									},
									"src": "343:89:2"
								},
								{
									"anonymous": false,
									"eventSelector": "8934ce4adea8d9ce0d714d2c22b86790e41b7731c84b926fbbdc1d40ff6533c9",
									"id": 418,
									"name": "OwnerTransferred",
									"nameLocation": "444:16:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "469:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "461:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "461:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 416,
												"indexed": false,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "492:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "484:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "484:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "460:41:2"
									},
									"src": "438:64:2"
								},
								{
									"constant": false,
									"functionSelector": "3aeaccf5",
									"id": 420,
									"mutability": "mutable",
									"name": "Address",
									"nameLocation": "525:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 652,
									"src": "510:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 419,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "510:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 422,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "554:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 652,
									"src": "539:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 421,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "539:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "StakingContract.Staker",
									"id": 427,
									"members": [
										{
											"constant": false,
											"id": 424,
											"mutability": "mutable",
											"name": "stakedAmount",
											"nameLocation": "601:12:2",
											"nodeType": "VariableDeclaration",
											"scope": 427,
											"src": "593:20:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 423,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "593:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 426,
											"mutability": "mutable",
											"name": "startTime",
											"nameLocation": "632:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 427,
											"src": "624:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 425,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "624:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Staker",
									"nameLocation": "575:6:2",
									"nodeType": "StructDefinition",
									"scope": 652,
									"src": "568:81:2",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8005a7de",
									"id": 429,
									"mutability": "mutable",
									"name": "stakingDuration",
									"nameLocation": "672:15:2",
									"nodeType": "VariableDeclaration",
									"scope": 652,
									"src": "657:30:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 428,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "657:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9168ae72",
									"id": 434,
									"mutability": "mutable",
									"name": "stakers",
									"nameLocation": "728:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 652,
									"src": "694:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$427_storage_$",
										"typeString": "mapping(address => struct StakingContract.Staker)"
									},
									"typeName": {
										"id": 433,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 430,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "702:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "694:26:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$427_storage_$",
											"typeString": "mapping(address => struct StakingContract.Staker)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 432,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 431,
												"name": "Staker",
												"nameLocations": [
													"713:6:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 427,
												"src": "713:6:2"
											},
											"referencedDeclaration": 427,
											"src": "713:6:2",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Staker_$427_storage_ptr",
												"typeString": "struct StakingContract.Staker"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 454,
										"nodeType": "Block",
										"src": "800:111:2",
										"statements": [
											{
												"expression": {
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 441,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 422,
														"src": "811:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 442,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "819:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 443,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "823:6:2",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "819:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "811:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 445,
												"nodeType": "ExpressionStatement",
												"src": "811:18:2"
											},
											{
												"expression": {
													"id": 448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 446,
														"name": "Address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 420,
														"src": "840:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 447,
														"name": "_Address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 436,
														"src": "850:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "840:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 449,
												"nodeType": "ExpressionStatement",
												"src": "840:18:2"
											},
											{
												"expression": {
													"id": 452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 450,
														"name": "stakingDuration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 429,
														"src": "869:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 451,
														"name": "_stakingDuration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 438,
														"src": "887:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "869:34:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 453,
												"nodeType": "ExpressionStatement",
												"src": "869:34:2"
											}
										]
									},
									"id": 455,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "_Address",
												"nameLocation": "764:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "756:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "756:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "_stakingDuration",
												"nameLocation": "782:16:2",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "774:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "774:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "755:44:2"
									},
									"returnParameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "800:0:2"
									},
									"scope": 652,
									"src": "744:167:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 534,
										"nodeType": "Block",
										"src": "960:622:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 467,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 461,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "979:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 462,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "983:6:2",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "979:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 465,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1001:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 464,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "993:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 463,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "993:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 466,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "993:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "979:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41646472657373207a65726f206465746563746564",
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1005:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0c522cb2a1af44930a7426d8b6b6dcdc56d85666de7235537f48c5753d7a529a",
																"typeString": "literal_string \"Address zero detected\""
															},
															"value": "Address zero detected"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0c522cb2a1af44930a7426d8b6b6dcdc56d85666de7235537f48c5753d7a529a",
																"typeString": "literal_string \"Address zero detected\""
															}
														],
														"id": 460,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "971:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "971:58:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 470,
												"nodeType": "ExpressionStatement",
												"src": "971:58:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 472,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 457,
																"src": "1048:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 473,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1058:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1048:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e2774207374616b65206e756c6c2076616c7565",
															"id": 475,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1061:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b123eca9829844b661c01ef55268688eca28a9866f8c3021d17497c8d41dc63a",
																"typeString": "literal_string \"Can't stake null value\""
															},
															"value": "Can't stake null value"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b123eca9829844b661c01ef55268688eca28a9866f8c3021d17497c8d41dc63a",
																"typeString": "literal_string \"Can't stake null value\""
															}
														],
														"id": 471,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1040:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1040:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 477,
												"nodeType": "ExpressionStatement",
												"src": "1040:46:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 487,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 483,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1131:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 484,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1135:6:2",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1131:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 480,
																				"name": "Address",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 420,
																				"src": "1112:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 479,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 77,
																			"src": "1105:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 481,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1105:15:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 482,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1121:9:2",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 34,
																	"src": "1105:25:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 485,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1105:37:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 486,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 457,
																"src": "1146:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1105:48:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742066756e6473",
															"id": 488,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1155:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d",
																"typeString": "literal_string \"Insufficient funds\""
															},
															"value": "Insufficient funds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d",
																"typeString": "literal_string \"Insufficient funds\""
															}
														],
														"id": 478,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1097:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1097:79:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 490,
												"nodeType": "ExpressionStatement",
												"src": "1097:79:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 498,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 492,
																		"name": "stakers",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 434,
																		"src": "1248:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$427_storage_$",
																			"typeString": "mapping(address => struct StakingContract.Staker storage ref)"
																		}
																	},
																	"id": 495,
																	"indexExpression": {
																		"expression": {
																			"id": 493,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1256:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 494,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1260:6:2",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1256:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1248:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$427_storage",
																		"typeString": "struct StakingContract.Staker storage ref"
																	}
																},
																"id": 496,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1268:12:2",
																"memberName": "stakedAmount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 424,
																"src": "1248:32:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 497,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1284:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1248:37:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c7265616479207374616b6564",
															"id": 499,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1287:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_95b7b77e513d16b36a2faa03d539fb2a99e3aaf7b1d9ac931c129d674f579e04",
																"typeString": "literal_string \"Already staked\""
															},
															"value": "Already staked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_95b7b77e513d16b36a2faa03d539fb2a99e3aaf7b1d9ac931c129d674f579e04",
																"typeString": "literal_string \"Already staked\""
															}
														],
														"id": 491,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1240:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:64:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 501,
												"nodeType": "ExpressionStatement",
												"src": "1240:64:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 506,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1346:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 507,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1350:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1346:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 510,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1366:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingContract_$652",
																		"typeString": "contract StakingContract"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakingContract_$652",
																		"typeString": "contract StakingContract"
																	}
																],
																"id": 509,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1358:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 508,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1358:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 511,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1358:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 512,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "1373:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 503,
																	"name": "Address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 420,
																	"src": "1324:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 502,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "1317:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 504,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1317:15:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 505,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1333:12:2",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 76,
														"src": "1317:28:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1317:64:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 514,
												"nodeType": "ExpressionStatement",
												"src": "1317:64:2"
											},
											{
												"expression": {
													"id": 524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 515,
															"name": "stakers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 434,
															"src": "1394:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$427_storage_$",
																"typeString": "mapping(address => struct StakingContract.Staker storage ref)"
															}
														},
														"id": 518,
														"indexExpression": {
															"expression": {
																"id": 516,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1402:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 517,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1406:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1402:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1394:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$427_storage",
															"typeString": "struct StakingContract.Staker storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 520,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 457,
																"src": "1452:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 521,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1485:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 522,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1491:9:2",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1485:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 519,
															"name": "Staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 427,
															"src": "1416:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Staker_$427_storage_ptr_$",
																"typeString": "type(struct StakingContract.Staker storage pointer)"
															}
														},
														"id": 523,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"1438:12:2",
															"1474:9:2"
														],
														"names": [
															"stakedAmount",
															"startTime"
														],
														"nodeType": "FunctionCall",
														"src": "1416:96:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$427_memory_ptr",
															"typeString": "struct StakingContract.Staker memory"
														}
													},
													"src": "1394:118:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Staker_$427_storage",
														"typeString": "struct StakingContract.Staker storage ref"
													}
												},
												"id": 525,
												"nodeType": "ExpressionStatement",
												"src": "1394:118:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 527,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1537:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 528,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1541:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1537:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 529,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "1549:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 530,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "1558:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 531,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1564:9:2",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "1558:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 526,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 404,
														"src": "1530:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1530:44:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 533,
												"nodeType": "EmitStatement",
												"src": "1525:49:2"
											}
										]
									},
									"functionSelector": "a694fc3a",
									"id": 535,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nameLocation": "928:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "942:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "934:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "934:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "933:17:2"
									},
									"returnParameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "960:0:2"
									},
									"scope": 652,
									"src": "919:663:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 597,
										"nodeType": "Block",
										"src": "1619:452:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 545,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 539,
																		"name": "stakers",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 434,
																		"src": "1638:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$427_storage_$",
																			"typeString": "mapping(address => struct StakingContract.Staker storage ref)"
																		}
																	},
																	"id": 542,
																	"indexExpression": {
																		"expression": {
																			"id": 540,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1646:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 541,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1650:6:2",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1646:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1638:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$427_storage",
																		"typeString": "struct StakingContract.Staker storage ref"
																	}
																},
																"id": 543,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1658:12:2",
																"memberName": "stakedAmount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 424,
																"src": "1638:32:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 544,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1673:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1638:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f207374616b656420616d6f756e74",
															"id": 546,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1676:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e731ba893c68928f02781756791066f23259e50b4884778db05599c2eb032f36",
																"typeString": "literal_string \"No staked amount\""
															},
															"value": "No staked amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e731ba893c68928f02781756791066f23259e50b4884778db05599c2eb032f36",
																"typeString": "literal_string \"No staked amount\""
															}
														],
														"id": 538,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1630:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1630:65:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 548,
												"nodeType": "ExpressionStatement",
												"src": "1630:65:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 560,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 550,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1714:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 551,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1720:9:2",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1714:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 558,
																		"name": "stakingDuration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 429,
																		"src": "1767:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"baseExpression": {
																				"id": 552,
																				"name": "stakers",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 434,
																				"src": "1733:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$427_storage_$",
																					"typeString": "mapping(address => struct StakingContract.Staker storage ref)"
																				}
																			},
																			"id": 555,
																			"indexExpression": {
																				"expression": {
																					"id": 553,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "1741:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 554,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1745:6:2",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "1741:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1733:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Staker_$427_storage",
																				"typeString": "struct StakingContract.Staker storage ref"
																			}
																		},
																		"id": 556,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1753:9:2",
																		"memberName": "startTime",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 426,
																		"src": "1733:29:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 557,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1763:3:2",
																	"memberName": "add",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 253,
																	"src": "1733:33:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 559,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1733:50:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1714:69:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b696e6720706572696f64206e6f74206f76657220796574",
															"id": 561,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1785:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1e09d4dedd886667ac7eac43a75f5b8a9137d9605bcdd673e19a127b1e9cc6a0",
																"typeString": "literal_string \"Staking period not over yet\""
															},
															"value": "Staking period not over yet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1e09d4dedd886667ac7eac43a75f5b8a9137d9605bcdd673e19a127b1e9cc6a0",
																"typeString": "literal_string \"Staking period not over yet\""
															}
														],
														"id": 549,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1706:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1706:109:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 563,
												"nodeType": "ExpressionStatement",
												"src": "1706:109:2"
											},
											{
												"assignments": [
													565
												],
												"declarations": [
													{
														"constant": false,
														"id": 565,
														"mutability": "mutable",
														"name": "stakedAmount",
														"nameLocation": "1836:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 597,
														"src": "1828:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 564,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1828:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 571,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 566,
															"name": "stakers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 434,
															"src": "1851:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$427_storage_$",
																"typeString": "mapping(address => struct StakingContract.Staker storage ref)"
															}
														},
														"id": 569,
														"indexExpression": {
															"expression": {
																"id": 567,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1859:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 568,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1863:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1859:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1851:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$427_storage",
															"typeString": "struct StakingContract.Staker storage ref"
														}
													},
													"id": 570,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1871:12:2",
													"memberName": "stakedAmount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 424,
													"src": "1851:32:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1828:55:2"
											},
											{
												"expression": {
													"id": 578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 572,
																"name": "stakers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 434,
																"src": "1894:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$427_storage_$",
																	"typeString": "mapping(address => struct StakingContract.Staker storage ref)"
																}
															},
															"id": 575,
															"indexExpression": {
																"expression": {
																	"id": 573,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1902:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 574,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1906:6:2",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1902:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1894:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$427_storage",
																"typeString": "struct StakingContract.Staker storage ref"
															}
														},
														"id": 576,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1914:12:2",
														"memberName": "stakedAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 424,
														"src": "1894:32:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 577,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1929:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1894:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 579,
												"nodeType": "ExpressionStatement",
												"src": "1894:36:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 584,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1968:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 585,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1972:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1968:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 586,
															"name": "stakedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 565,
															"src": "1980:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 581,
																	"name": "Address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 420,
																	"src": "1950:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 580,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "1943:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 582,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1943:15:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 583,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1959:8:2",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "1943:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1943:50:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 588,
												"nodeType": "ExpressionStatement",
												"src": "1943:50:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 590,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2021:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 591,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2025:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2021:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 592,
															"name": "stakedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 565,
															"src": "2033:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 593,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2047:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 594,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2053:9:2",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2047:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 589,
														"name": "Withdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 412,
														"src": "2011:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2011:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 596,
												"nodeType": "EmitStatement",
												"src": "2006:57:2"
											}
										]
									},
									"functionSelector": "3ccfd60b",
									"id": 598,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "1599:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1607:2:2"
									},
									"returnParameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1619:0:2"
									},
									"scope": 652,
									"src": "1590:481:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 613,
										"nodeType": "Block",
										"src": "2142:66:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 609,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2194:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingContract_$652",
																		"typeString": "contract StakingContract"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakingContract_$652",
																		"typeString": "contract StakingContract"
																	}
																],
																"id": 608,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2186:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 607,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2186:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 610,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2186:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 604,
																	"name": "Address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 420,
																	"src": "2167:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 603,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "2160:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 605,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2160:15:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 606,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2176:9:2",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 34,
														"src": "2160:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2160:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 602,
												"id": 612,
												"nodeType": "Return",
												"src": "2153:47:2"
											}
										]
									},
									"functionSelector": "901c947f",
									"id": 614,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "showContractBalance",
									"nameLocation": "2088:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2107:2:2"
									},
									"returnParameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "2133:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 600,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2133:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2132:9:2"
									},
									"scope": 652,
									"src": "2079:129:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 650,
										"nodeType": "Block",
										"src": "2270:255:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 620,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2289:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 621,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2293:6:2",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2289:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 622,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 422,
																"src": "2303:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2289:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "47697665206974206261636b20746f20746865206f776e6572",
															"id": 624,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2310:27:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3185032968986ab89d0ebf209c76042e88d4e5067b1e1e98d1a33558aa0144ac",
																"typeString": "literal_string \"Give it back to the owner\""
															},
															"value": "Give it back to the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3185032968986ab89d0ebf209c76042e88d4e5067b1e1e98d1a33558aa0144ac",
																"typeString": "literal_string \"Give it back to the owner\""
															}
														],
														"id": 619,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2281:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2281:57:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 626,
												"nodeType": "ExpressionStatement",
												"src": "2281:57:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 628,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 616,
																"src": "2357:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 631,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2377:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 630,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2369:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 629,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2369:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 632,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2369:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2357:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41646472657373207a65726f3f",
															"id": 634,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2381:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f0db2bf88b6ae8660dc351ea7aea9c51a185bf943e35d1c9bd0b9dc326f0bec5",
																"typeString": "literal_string \"Address zero?\""
															},
															"value": "Address zero?"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f0db2bf88b6ae8660dc351ea7aea9c51a185bf943e35d1c9bd0b9dc326f0bec5",
																"typeString": "literal_string \"Address zero?\""
															}
														],
														"id": 627,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2349:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2349:48:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 636,
												"nodeType": "ExpressionStatement",
												"src": "2349:48:2"
											},
											{
												"assignments": [
													638
												],
												"declarations": [
													{
														"constant": false,
														"id": 638,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2418:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 650,
														"src": "2410:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 637,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2410:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 640,
												"initialValue": {
													"id": 639,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 422,
													"src": "2429:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2410:24:2"
											},
											{
												"expression": {
													"id": 643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 641,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 422,
														"src": "2447:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 642,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 616,
														"src": "2455:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2447:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 644,
												"nodeType": "ExpressionStatement",
												"src": "2447:16:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 646,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "2498:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 647,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "2508:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 645,
														"name": "OwnerTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 418,
														"src": "2481:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2481:36:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 649,
												"nodeType": "EmitStatement",
												"src": "2476:41:2"
											}
										]
									},
									"functionSelector": "f2fde38b",
									"id": 651,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferOwnership",
									"nameLocation": "2225:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2251:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "2243:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 615,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2243:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2242:18:2"
									},
									"returnParameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2270:0:2"
									},
									"scope": 652,
									"src": "2216:309:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 653,
							"src": "182:2346:2",
							"usedErrors": [],
							"usedEvents": [
								404,
								412,
								418
							]
						}
					],
					"src": "35:2495:2"
				},
				"id": 2
			}
		}
	}
}